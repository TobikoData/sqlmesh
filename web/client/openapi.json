{
  "openapi": "3.1.0",
  "info": { "title": "FastAPI", "version": "0.1.0" },
  "paths": {
    "/api/commands/apply": {
      "post": {
        "summary": "Initiate Apply",
        "description": "Apply a plan",
        "operationId": "initiate_apply_api_commands_apply_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Body_initiate_apply_api_commands_apply_post"
                  }
                ],
                "title": "Body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    { "$ref": "#/components/schemas/PlanApplyStageTracker" },
                    { "type": "null" }
                  ],
                  "title": "Response Initiate Apply Api Commands Apply Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/commands/evaluate": {
      "post": {
        "summary": "Evaluate",
        "description": "Evaluate a model with a default limit of 1000",
        "operationId": "evaluate_api_commands_evaluate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EvaluateInput" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/commands/fetchdf": {
      "post": {
        "summary": "Fetchdf",
        "description": "Fetches a dataframe given a sql string",
        "operationId": "fetchdf_api_commands_fetchdf_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/FetchdfInput" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/commands/render": {
      "post": {
        "summary": "Render",
        "description": "Renders a model's query, optionally expanding referenced models",
        "operationId": "render_api_commands_render_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RenderInput" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Query" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/commands/test": {
      "get": {
        "summary": "Test",
        "description": "Run one or all model tests",
        "operationId": "test_api_commands_test_get",
        "parameters": [
          {
            "name": "test",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Test"
            }
          },
          {
            "name": "verbose",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Verbose"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TestResult" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/files": {
      "get": {
        "summary": "Get Files",
        "description": "Get all project files.",
        "operationId": "get_files_api_files_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Directory" }
              }
            }
          }
        }
      }
    },
    "/api/files/{path}": {
      "get": {
        "summary": "Get File",
        "description": "Get a file, including its contents.",
        "operationId": "get_file_api_files__path__get",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Path" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/File" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Write File",
        "description": "Create, update, or rename a file.",
        "operationId": "write_file_api_files__path__post",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Path" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Body_write_file_api_files__path__post"
                  }
                ],
                "title": "Body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/File" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete File",
        "description": "Delete a file.",
        "operationId": "delete_file_api_files__path__delete",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Path" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null",
                  "title": "Response Delete File Api Files  Path  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/directories/{path}": {
      "post": {
        "summary": "Write Directory",
        "description": "Create or rename a directory.",
        "operationId": "write_directory_api_directories__path__post",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Path" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Body_write_directory_api_directories__path__post"
                  }
                ],
                "title": "Body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Directory" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Directory",
        "description": "Delete a directory.",
        "operationId": "delete_directory_api_directories__path__delete",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Path" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/plan": {
      "post": {
        "summary": "Initiate Plan",
        "description": "Get a plan for an environment.",
        "operationId": "initiate_plan_api_plan_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Body_initiate_plan_api_plan_post"
                  }
                ],
                "title": "Body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    { "$ref": "#/components/schemas/PlanOverviewStageTracker" },
                    { "type": "null" }
                  ],
                  "title": "Response Initiate Plan Api Plan Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/plan/cancel": {
      "post": {
        "summary": "Cancel Plan",
        "description": "Cancel a plan application",
        "operationId": "cancel_plan_api_plan_cancel_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    { "$ref": "#/components/schemas/PlanCancelStageTracker" },
                    { "type": "null" }
                  ],
                  "title": "Response Cancel Plan Api Plan Cancel Post"
                }
              }
            }
          }
        }
      }
    },
    "/api/environments": {
      "get": {
        "summary": "Get Environments",
        "description": "Get the environments",
        "operationId": "get_environments_api_environments_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Environments" }
              }
            }
          }
        }
      }
    },
    "/api/environments/{environment}": {
      "delete": {
        "summary": "Delete Environment",
        "description": "Invalidate and delete an environment",
        "operationId": "delete_environment_api_environments__environment__delete",
        "parameters": [
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Environment" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/events": {
      "get": {
        "summary": "Events",
        "description": "SQLMesh console server sent events",
        "operationId": "events_api_events_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/api/lineage/{model_name}/{column_name}": {
      "get": {
        "summary": "Column Lineage",
        "description": "Get a column's lineage",
        "operationId": "column_lineage_api_lineage__model_name___column_name__get",
        "parameters": [
          {
            "name": "column_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Column Name" }
          },
          {
            "name": "model_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Model Name" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/LineageColumn"
                    }
                  },
                  "title": "Response Column Lineage Api Lineage  Model Name   Column Name  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/lineage/{model_name}": {
      "get": {
        "summary": "Model Lineage",
        "description": "Get a model's lineage",
        "operationId": "model_lineage_api_lineage__model_name__get",
        "parameters": [
          {
            "name": "model_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Model Name" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": { "type": "string" }
                  },
                  "title": "Response Model Lineage Api Lineage  Model Name  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/models": {
      "get": {
        "summary": "Get Models",
        "description": "Get a mapping of model names to model metadata",
        "operationId": "get_models_api_models_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "items": { "$ref": "#/components/schemas/Model" },
                      "type": "array"
                    },
                    { "$ref": "#/components/schemas/ApiExceptionPayload" }
                  ],
                  "title": "Response Get Models Api Models Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/meta": {
      "get": {
        "summary": "Get Api Meta",
        "description": "Get the metadata",
        "operationId": "get_api_meta_api_meta_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Meta" }
              }
            }
          }
        }
      }
    },
    "/api/table_diff": {
      "get": {
        "summary": "Get Table Diff",
        "description": "Calculate differences between tables, taking into account schema and row level differences.",
        "operationId": "get_table_diff_api_table_diff_get",
        "parameters": [
          {
            "name": "source",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Source" }
          },
          {
            "name": "target",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Target" }
          },
          {
            "name": "on",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "On"
            }
          },
          {
            "name": "model_or_snapshot",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Model Or Snapshot"
            }
          },
          {
            "name": "where",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Where"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 20, "title": "Limit" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TableDiff" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health",
        "operationId": "health_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Health Health Get"
                }
              }
            }
          }
        }
      }
    },
    "/{full_path}": {
      "get": {
        "summary": "Index",
        "operationId": "index__full_path__get",
        "parameters": [
          {
            "name": "full_path",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Full Path" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApiExceptionPayload": {
        "properties": {
          "timestamp": { "type": "integer", "title": "Timestamp" },
          "message": { "type": "string", "title": "Message" },
          "origin": { "type": "string", "title": "Origin" },
          "status": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Status"
          },
          "trigger": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Trigger"
          },
          "type": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Type"
          },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "traceback": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Traceback"
          },
          "stack": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Stack"
          }
        },
        "type": "object",
        "required": ["timestamp", "message", "origin"],
        "title": "ApiExceptionPayload"
      },
      "BackfillDetails": {
        "properties": {
          "model_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Model Name"
          },
          "view_name": { "type": "string", "title": "View Name" },
          "interval": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Interval"
          },
          "batches": { "type": "integer", "title": "Batches" }
        },
        "type": "object",
        "required": ["view_name", "interval", "batches"],
        "title": "BackfillDetails"
      },
      "BackfillTask": {
        "properties": {
          "completed": { "type": "integer", "title": "Completed" },
          "total": { "type": "integer", "title": "Total" },
          "view_name": { "type": "string", "title": "View Name" },
          "start": { "type": "integer", "title": "Start" },
          "end": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "End"
          }
        },
        "type": "object",
        "required": ["completed", "total", "view_name", "start"],
        "title": "BackfillTask"
      },
      "Body_initiate_apply_api_commands_apply_post": {
        "properties": {
          "environment": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Environment"
          },
          "plan_dates": {
            "anyOf": [
              { "$ref": "#/components/schemas/PlanDates" },
              { "type": "null" }
            ]
          },
          "plan_options": {
            "anyOf": [
              { "$ref": "#/components/schemas/PlanOptions" },
              { "type": "null" }
            ]
          },
          "categories": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/SnapshotChangeCategory"
                },
                "type": "object"
              },
              { "type": "null" }
            ],
            "title": "Categories"
          }
        },
        "type": "object",
        "title": "Body_initiate_apply_api_commands_apply_post"
      },
      "Body_initiate_plan_api_plan_post": {
        "properties": {
          "environment": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Environment"
          },
          "plan_dates": {
            "anyOf": [
              { "$ref": "#/components/schemas/PlanDates" },
              { "type": "null" }
            ]
          },
          "plan_options": {
            "anyOf": [
              { "$ref": "#/components/schemas/PlanOptions" },
              { "type": "null" }
            ]
          }
        },
        "type": "object",
        "title": "Body_initiate_plan_api_plan_post"
      },
      "Body_write_directory_api_directories__path__post": {
        "properties": {
          "new_path": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "New Path"
          }
        },
        "type": "object",
        "title": "Body_write_directory_api_directories__path__post"
      },
      "Body_write_file_api_files__path__post": {
        "properties": {
          "content": { "type": "string", "title": "Content", "default": "" },
          "new_path": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "New Path"
          }
        },
        "type": "object",
        "title": "Body_write_file_api_files__path__post"
      },
      "ChangeDirect": {
        "properties": {
          "model_name": { "type": "string", "title": "Model Name" },
          "diff": { "type": "string", "title": "Diff" },
          "indirect": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Indirect",
            "default": []
          },
          "change_category": {
            "anyOf": [
              { "$ref": "#/components/schemas/SnapshotChangeCategory" },
              { "type": "null" }
            ]
          }
        },
        "type": "object",
        "required": ["model_name", "diff"],
        "title": "ChangeDirect"
      },
      "ChangeIndirect": {
        "properties": {
          "model_name": { "type": "string", "title": "Model Name" },
          "direct": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Direct",
            "default": []
          }
        },
        "type": "object",
        "required": ["model_name"],
        "title": "ChangeIndirect"
      },
      "Column": {
        "properties": {
          "name": { "type": "string", "title": "Name" },
          "type": { "type": "string", "title": "Type" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          }
        },
        "type": "object",
        "required": ["name", "type"],
        "title": "Column"
      },
      "Directory": {
        "properties": {
          "name": { "type": "string", "title": "Name" },
          "path": { "type": "string", "title": "Path" },
          "directories": {
            "items": { "$ref": "#/components/schemas/Directory" },
            "type": "array",
            "title": "Directories",
            "default": []
          },
          "files": {
            "items": { "$ref": "#/components/schemas/File" },
            "type": "array",
            "title": "Files",
            "default": []
          }
        },
        "type": "object",
        "required": ["name", "path"],
        "title": "Directory"
      },
      "Environment": {
        "properties": {
          "name": { "type": "string", "title": "Name", "default": "prod" },
          "suffix_target": {
            "allOf": [
              { "$ref": "#/components/schemas/EnvironmentSuffixTarget" }
            ],
            "default": "schema"
          },
          "snapshots": {
            "items": { "$ref": "#/components/schemas/SnapshotTableInfo" },
            "type": "array",
            "title": "Snapshots"
          },
          "start_at": {
            "anyOf": [
              { "type": "string", "format": "date" },
              { "type": "string", "format": "date-time" },
              { "type": "string" },
              { "type": "integer" },
              { "type": "number" }
            ],
            "title": "Start At"
          },
          "end_at": {
            "anyOf": [
              { "type": "string", "format": "date" },
              { "type": "string", "format": "date-time" },
              { "type": "string" },
              { "type": "integer" },
              { "type": "number" },
              { "type": "null" }
            ],
            "title": "End At"
          },
          "plan_id": { "type": "string", "title": "Plan Id" },
          "previous_plan_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Previous Plan Id"
          },
          "expiration_ts": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Expiration Ts"
          },
          "finalized_ts": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Finalized Ts"
          },
          "promoted_snapshot_ids": {
            "anyOf": [
              {
                "items": { "$ref": "#/components/schemas/SnapshotId" },
                "type": "array"
              },
              { "type": "null" }
            ],
            "title": "Promoted Snapshot Ids"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["snapshots", "start_at", "plan_id"],
        "title": "Environment",
        "description": "Represents an isolated environment.\n\nEnvironments are isolated workspaces that hold pointers to physical tables.\n\nArgs:\n    snapshots: The snapshots that are part of this environment.\n    start_at: The start time of the environment.\n    end_at: The end time of the environment.\n    plan_id: The ID of the plan that last updated this environment.\n    previous_plan_id: The ID of the previous plan that updated this environment.\n    expiration_ts: The timestamp when this environment will expire.\n    finalized_ts: The timestamp when this environment was finalized.\n    promoted_snapshot_ids: The IDs of the snapshots that are promoted in this environment\n        (i.e. for which the views are created). If not specified, all snapshots are promoted."
      },
      "EnvironmentSuffixTarget": {
        "type": "string",
        "enum": ["schema", "table"],
        "title": "EnvironmentSuffixTarget"
      },
      "Environments": {
        "properties": {
          "environments": {
            "additionalProperties": {
              "$ref": "#/components/schemas/Environment"
            },
            "type": "object",
            "title": "Environments",
            "default": {}
          },
          "pinned_environments": {
            "items": { "type": "string" },
            "type": "array",
            "uniqueItems": true,
            "title": "Pinned Environments",
            "default": []
          },
          "default_target_environment": {
            "type": "string",
            "title": "Default Target Environment",
            "default": ""
          }
        },
        "type": "object",
        "title": "Environments"
      },
      "EvaluateInput": {
        "properties": {
          "model": { "type": "string", "title": "Model" },
          "start": {
            "anyOf": [
              { "type": "string", "format": "date" },
              { "type": "string", "format": "date-time" },
              { "type": "string" },
              { "type": "integer" },
              { "type": "number" }
            ],
            "title": "Start"
          },
          "end": {
            "anyOf": [
              { "type": "string", "format": "date" },
              { "type": "string", "format": "date-time" },
              { "type": "string" },
              { "type": "integer" },
              { "type": "number" }
            ],
            "title": "End"
          },
          "execution_time": {
            "anyOf": [
              { "type": "string", "format": "date" },
              { "type": "string", "format": "date-time" },
              { "type": "string" },
              { "type": "integer" },
              { "type": "number" }
            ],
            "title": "Execution Time"
          },
          "limit": { "type": "integer", "title": "Limit", "default": 1000 }
        },
        "type": "object",
        "required": ["model", "start", "end", "execution_time"],
        "title": "EvaluateInput"
      },
      "FetchdfInput": {
        "properties": {
          "sql": { "type": "string", "title": "Sql" },
          "limit": { "type": "integer", "title": "Limit", "default": 1000 }
        },
        "type": "object",
        "required": ["sql"],
        "title": "FetchdfInput"
      },
      "File": {
        "properties": {
          "name": { "type": "string", "title": "Name" },
          "path": { "type": "string", "title": "Path" },
          "extension": {
            "type": "string",
            "title": "Extension",
            "default": ""
          },
          "is_supported": {
            "type": "boolean",
            "title": "Is Supported",
            "default": false
          },
          "content": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Content"
          },
          "type": {
            "anyOf": [
              { "$ref": "#/components/schemas/FileType" },
              { "type": "null" }
            ]
          }
        },
        "type": "object",
        "required": ["name", "path"],
        "title": "File"
      },
      "FileType": {
        "type": "string",
        "enum": ["audit", "macros", "model", "tests"],
        "title": "FileType",
        "description": "An enumeration of possible file types."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": { "$ref": "#/components/schemas/ValidationError" },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "IntervalUnit": {
        "type": "string",
        "enum": [
          "year",
          "month",
          "day",
          "hour",
          "half_hour",
          "quarter_hour",
          "five_minute"
        ],
        "title": "IntervalUnit",
        "description": "IntervalUnit is the inferred granularity of an incremental node.\n\nIntervalUnit can be one of 5 types, YEAR, MONTH, DAY, HOUR, MINUTE. The unit is inferred\nbased on the cron schedule of a node. The minimum time delta between a sample set of dates\nis used to determine which unit a node's schedule is."
      },
      "LineageColumn": {
        "properties": {
          "source": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Source"
          },
          "expression": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Expression"
          },
          "models": {
            "anyOf": [
              {
                "additionalProperties": {
                  "items": { "type": "string" },
                  "type": "array"
                },
                "type": "object"
              },
              { "type": "null" }
            ],
            "title": "Models"
          }
        },
        "type": "object",
        "required": ["models"],
        "title": "LineageColumn"
      },
      "Meta": {
        "properties": {
          "version": { "type": "string", "title": "Version" },
          "has_running_task": {
            "type": "boolean",
            "title": "Has Running Task",
            "default": false
          }
        },
        "type": "object",
        "required": ["version"],
        "title": "Meta"
      },
      "Model": {
        "properties": {
          "name": { "type": "string", "title": "Name" },
          "path": { "type": "string", "title": "Path" },
          "dialect": { "type": "string", "title": "Dialect" },
          "type": { "type": "string", "title": "Type" },
          "columns": {
            "items": { "$ref": "#/components/schemas/Column" },
            "type": "array",
            "title": "Columns"
          },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "details": {
            "anyOf": [
              { "$ref": "#/components/schemas/ModelDetails" },
              { "type": "null" }
            ]
          },
          "sql": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Sql"
          }
        },
        "type": "object",
        "required": ["name", "path", "dialect", "type", "columns"],
        "title": "Model"
      },
      "ModelDetails": {
        "properties": {
          "owner": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Owner"
          },
          "kind": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Kind"
          },
          "batch_size": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Batch Size"
          },
          "cron": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cron"
          },
          "stamp": {
            "anyOf": [
              { "type": "string", "format": "date" },
              { "type": "string", "format": "date-time" },
              { "type": "string" },
              { "type": "integer" },
              { "type": "number" },
              { "type": "null" }
            ],
            "title": "Stamp"
          },
          "start": {
            "anyOf": [
              { "type": "string", "format": "date" },
              { "type": "string", "format": "date-time" },
              { "type": "string" },
              { "type": "integer" },
              { "type": "number" },
              { "type": "null" }
            ],
            "title": "Start"
          },
          "retention": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Retention"
          },
          "storage_format": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Storage Format"
          },
          "time_column": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Time Column"
          },
          "tags": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Tags"
          },
          "references": {
            "items": { "$ref": "#/components/schemas/Reference" },
            "type": "array",
            "title": "References",
            "default": []
          },
          "partitioned_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Partitioned By"
          },
          "clustered_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Clustered By"
          },
          "lookback": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Lookback"
          },
          "cron_prev": {
            "anyOf": [
              { "type": "string", "format": "date" },
              { "type": "string", "format": "date-time" },
              { "type": "string" },
              { "type": "integer" },
              { "type": "number" },
              { "type": "null" }
            ],
            "title": "Cron Prev"
          },
          "cron_next": {
            "anyOf": [
              { "type": "string", "format": "date" },
              { "type": "string", "format": "date-time" },
              { "type": "string" },
              { "type": "integer" },
              { "type": "number" },
              { "type": "null" }
            ],
            "title": "Cron Next"
          },
          "interval_unit": {
            "anyOf": [
              { "$ref": "#/components/schemas/IntervalUnit" },
              { "type": "null" }
            ]
          },
          "annotated": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Annotated"
          }
        },
        "type": "object",
        "title": "ModelDetails"
      },
      "ModelKindName": {
        "type": "string",
        "enum": [
          "INCREMENTAL_BY_TIME_RANGE",
          "INCREMENTAL_BY_UNIQUE_KEY",
          "INCREMENTAL_UNMANAGED",
          "FULL",
          "SCD_TYPE_2",
          "VIEW",
          "EMBEDDED",
          "SEED",
          "EXTERNAL"
        ],
        "title": "ModelKindName",
        "description": "The kind of model, determining how this data is computed and stored in the warehouse."
      },
      "ModelsDiff": {
        "properties": {
          "direct": {
            "items": { "$ref": "#/components/schemas/ChangeDirect" },
            "type": "array",
            "title": "Direct",
            "default": []
          },
          "indirect": {
            "items": { "$ref": "#/components/schemas/ChangeIndirect" },
            "type": "array",
            "title": "Indirect",
            "default": []
          },
          "metadata": {
            "items": { "type": "string" },
            "type": "array",
            "uniqueItems": true,
            "title": "Metadata",
            "default": []
          }
        },
        "type": "object",
        "title": "ModelsDiff"
      },
      "NodeType": {
        "type": "string",
        "enum": ["model", "audit"],
        "title": "NodeType"
      },
      "PlanApplyStageTracker": {
        "properties": {
          "start": {
            "anyOf": [
              { "type": "string", "format": "date" },
              { "type": "string", "format": "date-time" },
              { "type": "string" },
              { "type": "integer" },
              { "type": "number" },
              { "type": "null" }
            ],
            "title": "Start"
          },
          "end": {
            "anyOf": [
              { "type": "string", "format": "date" },
              { "type": "string", "format": "date-time" },
              { "type": "string" },
              { "type": "integer" },
              { "type": "number" },
              { "type": "null" }
            ],
            "title": "End"
          },
          "meta": { "$ref": "#/components/schemas/TrackableMeta" },
          "environment": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Environment"
          },
          "plan_options": {
            "anyOf": [
              { "$ref": "#/components/schemas/PlanOptions" },
              { "type": "null" }
            ]
          },
          "creation": {
            "anyOf": [
              { "$ref": "#/components/schemas/PlanStageCreation" },
              { "type": "null" }
            ]
          },
          "restate": {
            "anyOf": [
              { "$ref": "#/components/schemas/PlanStageRestate" },
              { "type": "null" }
            ]
          },
          "backfill": {
            "anyOf": [
              { "$ref": "#/components/schemas/PlanStageBackfill" },
              { "type": "null" }
            ]
          },
          "promote": {
            "anyOf": [
              { "$ref": "#/components/schemas/PlanStagePromote" },
              { "type": "null" }
            ]
          }
        },
        "type": "object",
        "title": "PlanApplyStageTracker"
      },
      "PlanCancelStageTracker": {
        "properties": {
          "start": {
            "anyOf": [
              { "type": "string", "format": "date" },
              { "type": "string", "format": "date-time" },
              { "type": "string" },
              { "type": "integer" },
              { "type": "number" },
              { "type": "null" }
            ],
            "title": "Start"
          },
          "end": {
            "anyOf": [
              { "type": "string", "format": "date" },
              { "type": "string", "format": "date-time" },
              { "type": "string" },
              { "type": "integer" },
              { "type": "number" },
              { "type": "null" }
            ],
            "title": "End"
          },
          "meta": { "$ref": "#/components/schemas/TrackableMeta" },
          "environment": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Environment"
          },
          "plan_options": {
            "anyOf": [
              { "$ref": "#/components/schemas/PlanOptions" },
              { "type": "null" }
            ]
          },
          "cancel": {
            "anyOf": [
              { "$ref": "#/components/schemas/PlanStageCancel" },
              { "type": "null" }
            ]
          }
        },
        "type": "object",
        "title": "PlanCancelStageTracker"
      },
      "PlanDates": {
        "properties": {
          "start": {
            "anyOf": [
              { "type": "string", "format": "date" },
              { "type": "string", "format": "date-time" },
              { "type": "string" },
              { "type": "integer" },
              { "type": "number" },
              { "type": "null" }
            ],
            "title": "Start"
          },
          "end": {
            "anyOf": [
              { "type": "string", "format": "date" },
              { "type": "string", "format": "date-time" },
              { "type": "string" },
              { "type": "integer" },
              { "type": "number" },
              { "type": "null" }
            ],
            "title": "End"
          }
        },
        "type": "object",
        "title": "PlanDates"
      },
      "PlanOptions": {
        "properties": {
          "skip_tests": {
            "type": "boolean",
            "title": "Skip Tests",
            "default": false
          },
          "skip_backfill": {
            "type": "boolean",
            "title": "Skip Backfill",
            "default": false
          },
          "no_gaps": {
            "type": "boolean",
            "title": "No Gaps",
            "default": false
          },
          "forward_only": {
            "type": "boolean",
            "title": "Forward Only",
            "default": false
          },
          "no_auto_categorization": {
            "type": "boolean",
            "title": "No Auto Categorization",
            "default": false
          },
          "include_unmodified": {
            "type": "boolean",
            "title": "Include Unmodified",
            "default": false
          },
          "create_from": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Create From"
          },
          "restate_models": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Restate Models"
          }
        },
        "type": "object",
        "title": "PlanOptions"
      },
      "PlanOverviewStageTracker": {
        "properties": {
          "start": {
            "anyOf": [
              { "type": "string", "format": "date" },
              { "type": "string", "format": "date-time" },
              { "type": "string" },
              { "type": "integer" },
              { "type": "number" },
              { "type": "null" }
            ],
            "title": "Start"
          },
          "end": {
            "anyOf": [
              { "type": "string", "format": "date" },
              { "type": "string", "format": "date-time" },
              { "type": "string" },
              { "type": "integer" },
              { "type": "number" },
              { "type": "null" }
            ],
            "title": "End"
          },
          "meta": { "$ref": "#/components/schemas/TrackableMeta" },
          "environment": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Environment"
          },
          "plan_options": {
            "anyOf": [
              { "$ref": "#/components/schemas/PlanOptions" },
              { "type": "null" }
            ]
          },
          "validation": {
            "anyOf": [
              { "$ref": "#/components/schemas/PlanStageValidation" },
              { "type": "null" }
            ]
          },
          "changes": {
            "anyOf": [
              { "$ref": "#/components/schemas/PlanStageChanges" },
              { "type": "null" }
            ]
          },
          "backfills": {
            "anyOf": [
              { "$ref": "#/components/schemas/PlanStageBackfills" },
              { "type": "null" }
            ]
          }
        },
        "type": "object",
        "title": "PlanOverviewStageTracker"
      },
      "PlanStageBackfill": {
        "properties": {
          "meta": { "$ref": "#/components/schemas/TrackableMeta" },
          "queue": {
            "items": { "type": "string" },
            "type": "array",
            "uniqueItems": true,
            "title": "Queue",
            "default": []
          },
          "tasks": {
            "additionalProperties": {
              "$ref": "#/components/schemas/BackfillTask"
            },
            "type": "object",
            "title": "Tasks",
            "default": {}
          }
        },
        "type": "object",
        "title": "PlanStageBackfill"
      },
      "PlanStageBackfills": {
        "properties": {
          "meta": { "$ref": "#/components/schemas/TrackableMeta" },
          "models": {
            "anyOf": [
              {
                "items": { "$ref": "#/components/schemas/BackfillDetails" },
                "type": "array"
              },
              { "type": "null" }
            ],
            "title": "Models"
          }
        },
        "type": "object",
        "title": "PlanStageBackfills"
      },
      "PlanStageCancel": {
        "properties": {
          "meta": { "$ref": "#/components/schemas/TrackableMeta" }
        },
        "type": "object",
        "title": "PlanStageCancel"
      },
      "PlanStageChanges": {
        "properties": {
          "meta": { "$ref": "#/components/schemas/TrackableMeta" },
          "added": {
            "anyOf": [
              {
                "items": { "type": "string" },
                "type": "array",
                "uniqueItems": true
              },
              { "type": "null" }
            ],
            "title": "Added"
          },
          "removed": {
            "anyOf": [
              {
                "items": { "type": "string" },
                "type": "array",
                "uniqueItems": true
              },
              { "type": "null" }
            ],
            "title": "Removed"
          },
          "modified": {
            "anyOf": [
              { "$ref": "#/components/schemas/ModelsDiff" },
              { "type": "null" }
            ]
          }
        },
        "type": "object",
        "title": "PlanStageChanges"
      },
      "PlanStageCreation": {
        "properties": {
          "meta": { "$ref": "#/components/schemas/TrackableMeta" },
          "total_tasks": { "type": "integer", "title": "Total Tasks" },
          "num_tasks": { "type": "integer", "title": "Num Tasks" }
        },
        "type": "object",
        "required": ["total_tasks", "num_tasks"],
        "title": "PlanStageCreation"
      },
      "PlanStagePromote": {
        "properties": {
          "meta": { "$ref": "#/components/schemas/TrackableMeta" },
          "total_tasks": { "type": "integer", "title": "Total Tasks" },
          "num_tasks": { "type": "integer", "title": "Num Tasks" },
          "target_environment": {
            "type": "string",
            "title": "Target Environment"
          }
        },
        "type": "object",
        "required": ["total_tasks", "num_tasks", "target_environment"],
        "title": "PlanStagePromote"
      },
      "PlanStageRestate": {
        "properties": {
          "meta": { "$ref": "#/components/schemas/TrackableMeta" }
        },
        "type": "object",
        "title": "PlanStageRestate"
      },
      "PlanStageValidation": {
        "properties": {
          "meta": { "$ref": "#/components/schemas/TrackableMeta" }
        },
        "type": "object",
        "title": "PlanStageValidation"
      },
      "Query": {
        "properties": { "sql": { "type": "string", "title": "Sql" } },
        "type": "object",
        "required": ["sql"],
        "title": "Query"
      },
      "Reference": {
        "properties": {
          "name": { "type": "string", "title": "Name" },
          "expression": { "type": "string", "title": "Expression" },
          "unique": { "type": "boolean", "title": "Unique" }
        },
        "type": "object",
        "required": ["name", "expression", "unique"],
        "title": "Reference"
      },
      "RenderInput": {
        "properties": {
          "model": { "type": "string", "title": "Model" },
          "start": {
            "anyOf": [
              { "type": "string", "format": "date" },
              { "type": "string", "format": "date-time" },
              { "type": "string" },
              { "type": "integer" },
              { "type": "number" },
              { "type": "null" }
            ],
            "title": "Start"
          },
          "end": {
            "anyOf": [
              { "type": "string", "format": "date" },
              { "type": "string", "format": "date-time" },
              { "type": "string" },
              { "type": "integer" },
              { "type": "number" },
              { "type": "null" }
            ],
            "title": "End"
          },
          "execution_time": {
            "anyOf": [
              { "type": "string", "format": "date" },
              { "type": "string", "format": "date-time" },
              { "type": "string" },
              { "type": "integer" },
              { "type": "number" },
              { "type": "null" }
            ],
            "title": "Execution Time"
          },
          "expand": {
            "anyOf": [
              { "type": "boolean" },
              { "items": { "type": "string" }, "type": "array" }
            ],
            "title": "Expand",
            "default": false
          },
          "pretty": { "type": "boolean", "title": "Pretty", "default": true },
          "dialect": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Dialect"
          }
        },
        "type": "object",
        "required": ["model"],
        "title": "RenderInput"
      },
      "RowDiff": {
        "properties": {
          "source": { "type": "string", "title": "Source" },
          "target": { "type": "string", "title": "Target" },
          "stats": {
            "additionalProperties": { "type": "number" },
            "type": "object",
            "title": "Stats"
          },
          "sample": { "type": "object", "title": "Sample" },
          "source_count": { "type": "integer", "title": "Source Count" },
          "target_count": { "type": "integer", "title": "Target Count" },
          "count_pct_change": { "type": "number", "title": "Count Pct Change" }
        },
        "type": "object",
        "required": [
          "source",
          "target",
          "stats",
          "sample",
          "source_count",
          "target_count",
          "count_pct_change"
        ],
        "title": "RowDiff"
      },
      "SchemaDiff": {
        "properties": {
          "source": { "type": "string", "title": "Source" },
          "target": { "type": "string", "title": "Target" },
          "source_schema": {
            "additionalProperties": { "type": "string" },
            "type": "object",
            "title": "Source Schema"
          },
          "target_schema": {
            "additionalProperties": { "type": "string" },
            "type": "object",
            "title": "Target Schema"
          },
          "added": {
            "additionalProperties": { "type": "string" },
            "type": "object",
            "title": "Added"
          },
          "removed": {
            "additionalProperties": { "type": "string" },
            "type": "object",
            "title": "Removed"
          },
          "modified": {
            "additionalProperties": { "type": "string" },
            "type": "object",
            "title": "Modified"
          }
        },
        "type": "object",
        "required": [
          "source",
          "target",
          "source_schema",
          "target_schema",
          "added",
          "removed",
          "modified"
        ],
        "title": "SchemaDiff"
      },
      "SnapshotChangeCategory": {
        "type": "integer",
        "enum": [1, 2, 3, 4, 5],
        "title": "SnapshotChangeCategory",
        "description": "Values are ordered by decreasing severity and that ordering is required.\n\nBREAKING: The change requires that snapshot modified and downstream dependencies be rebuilt\nNON_BREAKING: The change requires that only the snapshot modified be rebuilt\nFORWARD_ONLY: The change requires no rebuilding\nINDIRECT_BREAKING: The change was caused indirectly and is breaking.\nINDIRECT_NON_BREAKING: The change was caused indirectly by a non-breaking change."
      },
      "SnapshotDataVersion": {
        "properties": {
          "fingerprint": { "$ref": "#/components/schemas/SnapshotFingerprint" },
          "version": { "type": "string", "title": "Version" },
          "temp_version": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Temp Version"
          },
          "change_category": {
            "anyOf": [
              { "$ref": "#/components/schemas/SnapshotChangeCategory" },
              { "type": "null" }
            ]
          },
          "physical_schema": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Physical Schema"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["fingerprint", "version"],
        "title": "SnapshotDataVersion"
      },
      "SnapshotFingerprint": {
        "properties": {
          "data_hash": { "type": "string", "title": "Data Hash" },
          "metadata_hash": { "type": "string", "title": "Metadata Hash" },
          "parent_data_hash": {
            "type": "string",
            "title": "Parent Data Hash",
            "default": "0"
          },
          "parent_metadata_hash": {
            "type": "string",
            "title": "Parent Metadata Hash",
            "default": "0"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["data_hash", "metadata_hash"],
        "title": "SnapshotFingerprint"
      },
      "SnapshotId": {
        "properties": {
          "name": { "type": "string", "title": "Name" },
          "identifier": { "type": "string", "title": "Identifier" }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["name", "identifier"],
        "title": "SnapshotId"
      },
      "SnapshotTableInfo": {
        "properties": {
          "name": { "type": "string", "title": "Name" },
          "temp_version": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Temp Version"
          },
          "change_category": {
            "anyOf": [
              { "$ref": "#/components/schemas/SnapshotChangeCategory" },
              { "type": "null" }
            ]
          },
          "fingerprint": { "$ref": "#/components/schemas/SnapshotFingerprint" },
          "previous_versions": {
            "items": { "$ref": "#/components/schemas/SnapshotDataVersion" },
            "type": "array",
            "title": "Previous Versions",
            "default": []
          },
          "version": { "type": "string", "title": "Version" },
          "physical_schema": { "type": "string", "title": "Physical Schema" },
          "parents": {
            "items": { "$ref": "#/components/schemas/SnapshotId" },
            "type": "array",
            "title": "Parents"
          },
          "kind_name": {
            "anyOf": [
              { "$ref": "#/components/schemas/ModelKindName" },
              { "type": "null" }
            ]
          },
          "node_type": {
            "allOf": [{ "$ref": "#/components/schemas/NodeType" }],
            "default": "model"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "name",
          "fingerprint",
          "version",
          "physical_schema",
          "parents"
        ],
        "title": "SnapshotTableInfo"
      },
      "Status": {
        "type": "string",
        "enum": ["init", "success", "fail"],
        "title": "Status",
        "description": "An enumeration of statuses."
      },
      "TableDiff": {
        "properties": {
          "schema_diff": { "$ref": "#/components/schemas/SchemaDiff" },
          "row_diff": { "$ref": "#/components/schemas/RowDiff" },
          "on": {
            "items": { "items": { "type": "string" }, "type": "array" },
            "type": "array",
            "title": "On"
          }
        },
        "type": "object",
        "required": ["schema_diff", "row_diff", "on"],
        "title": "TableDiff"
      },
      "TestErrorOrFailure": {
        "properties": {
          "name": { "type": "string", "title": "Name" },
          "path": { "type": "string", "format": "path", "title": "Path" },
          "tb": { "type": "string", "title": "Tb" }
        },
        "type": "object",
        "required": ["name", "path", "tb"],
        "title": "TestErrorOrFailure"
      },
      "TestResult": {
        "properties": {
          "tests_run": { "type": "integer", "title": "Tests Run" },
          "failures": {
            "items": { "$ref": "#/components/schemas/TestErrorOrFailure" },
            "type": "array",
            "title": "Failures"
          },
          "errors": {
            "items": { "$ref": "#/components/schemas/TestErrorOrFailure" },
            "type": "array",
            "title": "Errors"
          },
          "skipped": {
            "items": { "$ref": "#/components/schemas/TestSkipped" },
            "type": "array",
            "title": "Skipped"
          }
        },
        "type": "object",
        "required": ["tests_run", "failures", "errors", "skipped"],
        "title": "TestResult"
      },
      "TestSkipped": {
        "properties": {
          "name": { "type": "string", "title": "Name" },
          "path": { "type": "string", "format": "path", "title": "Path" },
          "reason": { "type": "string", "title": "Reason" }
        },
        "type": "object",
        "required": ["name", "path", "reason"],
        "title": "TestSkipped"
      },
      "TrackableMeta": {
        "properties": {
          "status": {
            "allOf": [{ "$ref": "#/components/schemas/Status" }],
            "default": "init"
          },
          "start": { "type": "integer", "title": "Start" },
          "end": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "End"
          },
          "done": { "type": "boolean", "title": "Done", "default": false }
        },
        "type": "object",
        "title": "TrackableMeta"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": { "anyOf": [{ "type": "string" }, { "type": "integer" }] },
            "type": "array",
            "title": "Location"
          },
          "msg": { "type": "string", "title": "Message" },
          "type": { "type": "string", "title": "Error Type" }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      }
    }
  }
}
