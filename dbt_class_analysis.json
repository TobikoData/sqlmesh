{
  "summary": {
    "total_classes": 1476,
    "leaf_classes": 549,
    "classes_with_deps": 927,
    "strongly_connected_components": 1
  },
  "leaf_classes": [
    {
      "rank": 1,
      "class": "dbt.adapters.contracts.relation.RelationConfig",
      "priority": 1226.1309523809523,
      "info": {
        "module": "dbt.adapters.contracts.relation",
        "name": "RelationConfig",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/adapters/contracts/relation.py",
        "line": 50,
        "base_classes": [
          "typing_extensions.Protocol"
        ],
        "methods": [],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 0,
        "lines_of_code": 13,
        "complexity": 95,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": false,
        "is_enum": false,
        "external_deps": [
          "typing_extensions.Protocol"
        ],
        "dbt_deps": []
      }
    },
    {
      "rank": 2,
      "class": "dbt.exceptions.ParsingError",
      "priority": 1193.1315789473683,
      "info": {
        "module": "dbt.exceptions",
        "name": "ParsingError",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/exceptions.py",
        "line": 51,
        "base_classes": [
          "dbt_common.exceptions.DbtRuntimeError"
        ],
        "methods": [
          "type"
        ],
        "properties": [
          "type"
        ],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 1,
        "lines_of_code": 7,
        "complexity": 18,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": false,
        "is_enum": false,
        "external_deps": [],
        "dbt_deps": [
          "dbt_common.exceptions.DbtRuntimeError"
        ]
      }
    },
    {
      "rank": 3,
      "class": "dbt.adapters.contracts.connection.AdapterResponse",
      "priority": 933.9637188208617,
      "info": {
        "module": "dbt.adapters.contracts.connection",
        "name": "AdapterResponse",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/adapters/contracts/connection.py",
        "line": 40,
        "base_classes": [
          "dbt_common.dataclass_schema.dbtClassMixin"
        ],
        "methods": [
          "__str__"
        ],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 1,
        "lines_of_code": 8,
        "complexity": 48,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": true,
        "is_enum": false,
        "external_deps": [],
        "dbt_deps": [
          "dbt_common.dataclass_schema.dbtClassMixin"
        ]
      }
    },
    {
      "rank": 4,
      "class": "dbt.deprecations.DBTDeprecation",
      "priority": 884.6572104018912,
      "info": {
        "module": "dbt.deprecations",
        "name": "DBTDeprecation",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/deprecations.py",
        "line": 14,
        "base_classes": [],
        "methods": [
          "name",
          "track_deprecation_warn",
          "event",
          "preview",
          "show"
        ],
        "properties": [
          "name",
          "event"
        ],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 5,
        "lines_of_code": 44,
        "complexity": 281,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": false,
        "is_enum": false,
        "external_deps": [],
        "dbt_deps": []
      }
    },
    {
      "rank": 5,
      "class": "dbt.parser.search.FileBlock",
      "priority": 776.7450980392157,
      "info": {
        "module": "dbt.parser.search",
        "name": "FileBlock",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/parser/search.py",
        "line": 29,
        "base_classes": [],
        "methods": [
          "name",
          "contents",
          "path"
        ],
        "properties": [
          "name",
          "contents",
          "path"
        ],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 3,
        "lines_of_code": 16,
        "complexity": 74,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": true,
        "is_enum": false,
        "external_deps": [],
        "dbt_deps": []
      }
    },
    {
      "rank": 6,
      "class": "dbt.exceptions.DbtProjectError",
      "priority": 746.6666666666666,
      "info": {
        "module": "dbt.exceptions",
        "name": "DbtProjectError",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/exceptions.py",
        "line": 101,
        "base_classes": [
          "dbt_common.exceptions.DbtConfigError"
        ],
        "methods": [],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 0,
        "lines_of_code": 2,
        "complexity": 4,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": false,
        "is_enum": false,
        "external_deps": [],
        "dbt_deps": [
          "dbt_common.exceptions.DbtConfigError"
        ]
      }
    },
    {
      "rank": 7,
      "class": "dbt.artifacts.resources.types.NodeType",
      "priority": 663.0,
      "info": {
        "module": "dbt.artifacts.resources.types",
        "name": "NodeType",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/artifacts/resources/types.py",
        "line": 18,
        "base_classes": [
          "dbt_common.dataclass_schema.StrEnum"
        ],
        "methods": [
          "pluralize"
        ],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 1,
        "lines_of_code": 29,
        "complexity": 119,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": false,
        "is_enum": true,
        "external_deps": [],
        "dbt_deps": [
          "dbt_common.dataclass_schema.StrEnum"
        ]
      }
    },
    {
      "rank": 8,
      "class": "dbt.adapters.protocol.AdapterConfig",
      "priority": 649.5238095238095,
      "info": {
        "module": "dbt.adapters.protocol",
        "name": "AdapterConfig",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/adapters/protocol.py",
        "line": 33,
        "base_classes": [
          "dbt_common.contracts.config.base.BaseConfig"
        ],
        "methods": [],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 0,
        "lines_of_code": 2,
        "complexity": 6,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": true,
        "is_enum": false,
        "external_deps": [],
        "dbt_deps": [
          "dbt_common.contracts.config.base.BaseConfig"
        ]
      }
    },
    {
      "rank": 9,
      "class": "dbt.exceptions.DbtProfileError",
      "priority": 646.6666666666666,
      "info": {
        "module": "dbt.exceptions",
        "name": "DbtProfileError",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/exceptions.py",
        "line": 109,
        "base_classes": [
          "dbt_common.exceptions.DbtConfigError"
        ],
        "methods": [],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 0,
        "lines_of_code": 2,
        "complexity": 4,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": false,
        "is_enum": false,
        "external_deps": [],
        "dbt_deps": [
          "dbt_common.exceptions.DbtConfigError"
        ]
      }
    },
    {
      "rank": 10,
      "class": "dbt.adapters.exceptions.connection.FailedToConnectError",
      "priority": 646.6666666666666,
      "info": {
        "module": "dbt.adapters.exceptions.connection",
        "name": "FailedToConnectError",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/adapters/exceptions/connection.py",
        "line": 15,
        "base_classes": [
          "dbt_common.exceptions.DbtDatabaseError"
        ],
        "methods": [],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 0,
        "lines_of_code": 2,
        "complexity": 4,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": false,
        "is_enum": false,
        "external_deps": [],
        "dbt_deps": [
          "dbt_common.exceptions.DbtDatabaseError"
        ]
      }
    },
    {
      "rank": 11,
      "class": "dbt.adapters.contracts.relation.ComponentName",
      "priority": 642.5,
      "info": {
        "module": "dbt.adapters.contracts.relation",
        "name": "ComponentName",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/adapters/contracts/relation.py",
        "line": 65,
        "base_classes": [
          "dbt_common.dataclass_schema.StrEnum"
        ],
        "methods": [],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 0,
        "lines_of_code": 4,
        "complexity": 15,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": false,
        "is_enum": true,
        "external_deps": [],
        "dbt_deps": [
          "dbt_common.dataclass_schema.StrEnum"
        ]
      }
    },
    {
      "rank": 12,
      "class": "dbt.contracts.graph.manifest.Disabled",
      "priority": 613.3333333333334,
      "info": {
        "module": "dbt.contracts.graph.manifest",
        "name": "Disabled",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/contracts/graph/manifest.py",
        "line": 680,
        "base_classes": [],
        "methods": [],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 0,
        "lines_of_code": 2,
        "complexity": 14,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": true,
        "is_enum": false,
        "external_deps": [],
        "dbt_deps": []
      }
    },
    {
      "rank": 13,
      "class": "dbt.contracts.graph.unparsed.HasConfig",
      "priority": 610.1449275362319,
      "info": {
        "module": "dbt.contracts.graph.unparsed",
        "name": "HasConfig",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/contracts/graph/unparsed.py",
        "line": 137,
        "base_classes": [],
        "methods": [],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 0,
        "lines_of_code": 2,
        "complexity": 22,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": true,
        "is_enum": false,
        "external_deps": [],
        "dbt_deps": []
      }
    },
    {
      "rank": 14,
      "class": "dbt.exceptions.DbtSelectorsError",
      "priority": 606.6666666666666,
      "info": {
        "module": "dbt.exceptions",
        "name": "DbtSelectorsError",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/exceptions.py",
        "line": 105,
        "base_classes": [
          "dbt_common.exceptions.DbtConfigError"
        ],
        "methods": [],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 0,
        "lines_of_code": 2,
        "complexity": 4,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": false,
        "is_enum": false,
        "external_deps": [],
        "dbt_deps": [
          "dbt_common.exceptions.DbtConfigError"
        ]
      }
    },
    {
      "rank": 15,
      "class": "dbt.cli.exceptions.DbtUsageException",
      "priority": 606.6666666666666,
      "info": {
        "module": "dbt.cli.exceptions",
        "name": "DbtUsageException",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/cli/exceptions.py",
        "line": 11,
        "base_classes": [
          "dbt.cli.exceptions.Exception"
        ],
        "methods": [],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 0,
        "lines_of_code": 2,
        "complexity": 4,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": false,
        "is_enum": false,
        "external_deps": [],
        "dbt_deps": [
          "dbt.cli.exceptions.Exception"
        ]
      }
    },
    {
      "rank": 16,
      "class": "dbt.adapters.clickhouse.dbclient.ChRetryableException",
      "priority": 606.6666666666666,
      "info": {
        "module": "dbt.adapters.clickhouse.dbclient",
        "name": "ChRetryableException",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/adapters/clickhouse/dbclient.py",
        "line": 73,
        "base_classes": [
          "dbt.adapters.clickhouse.dbclient.Exception"
        ],
        "methods": [],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 0,
        "lines_of_code": 2,
        "complexity": 4,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": false,
        "is_enum": false,
        "external_deps": [],
        "dbt_deps": [
          "dbt.adapters.clickhouse.dbclient.Exception"
        ]
      }
    },
    {
      "rank": 17,
      "class": "dbt.events.base_types.CoreBaseEvent",
      "priority": 597.7777777777778,
      "info": {
        "module": "dbt.events.base_types",
        "name": "CoreBaseEvent",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/events/base_types.py",
        "line": 11,
        "base_classes": [
          "dbt_common.events.base_types.BaseEvent"
        ],
        "methods": [],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 0,
        "lines_of_code": 2,
        "complexity": 8,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": false,
        "is_enum": false,
        "external_deps": [],
        "dbt_deps": [
          "dbt_common.events.base_types.BaseEvent"
        ]
      }
    },
    {
      "rank": 18,
      "class": "dbt.adapters.events.base_types.AdapterBaseEvent",
      "priority": 597.7777777777778,
      "info": {
        "module": "dbt.adapters.events.base_types",
        "name": "AdapterBaseEvent",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/adapters/events/base_types.py",
        "line": 11,
        "base_classes": [
          "dbt_common.events.base_types.BaseEvent"
        ],
        "methods": [],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 0,
        "lines_of_code": 2,
        "complexity": 8,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": false,
        "is_enum": false,
        "external_deps": [],
        "dbt_deps": [
          "dbt_common.events.base_types.BaseEvent"
        ]
      }
    },
    {
      "rank": 19,
      "class": "dbt.artifacts.schemas.results.RunStatus",
      "priority": 597.0695970695971,
      "info": {
        "module": "dbt.artifacts.schemas.results",
        "name": "RunStatus",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/artifacts/schemas/results.py",
        "line": 70,
        "base_classes": [
          "dbt_common.dataclass_schema.StrEnum"
        ],
        "methods": [],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 0,
        "lines_of_code": 6,
        "complexity": 38,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": false,
        "is_enum": true,
        "external_deps": [],
        "dbt_deps": [
          "dbt_common.dataclass_schema.StrEnum"
        ]
      }
    },
    {
      "rank": 20,
      "class": "dbt.contracts.graph.unparsed.HasColumnTests",
      "priority": 594.2857142857142,
      "info": {
        "module": "dbt.contracts.graph.unparsed",
        "name": "HasColumnTests",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/contracts/graph/unparsed.py",
        "line": 149,
        "base_classes": [
          "dbt_common.dataclass_schema.dbtClassMixin"
        ],
        "methods": [],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 0,
        "lines_of_code": 2,
        "complexity": 20,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": true,
        "is_enum": false,
        "external_deps": [],
        "dbt_deps": [
          "dbt_common.dataclass_schema.dbtClassMixin"
        ]
      }
    },
    {
      "rank": 21,
      "class": "dbt.adapters.capability.Capability",
      "priority": 590.125313283208,
      "info": {
        "module": "dbt.adapters.capability",
        "name": "Capability",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/adapters/capability.py",
        "line": 6,
        "base_classes": [
          "dbt.adapters.capability.str",
          "enum.Enum"
        ],
        "methods": [],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 0,
        "lines_of_code": 20,
        "complexity": 37,
        "docstring": "Enumeration of optional adapter features which can be probed using BaseAdapter.capabilities()",
        "is_abstract": false,
        "is_dataclass": false,
        "is_enum": true,
        "external_deps": [
          "enum.Enum"
        ],
        "dbt_deps": [
          "dbt.adapters.capability.str"
        ]
      }
    },
    {
      "rank": 22,
      "class": "dbt.exceptions.DependencyError",
      "priority": 588.3333333333333,
      "info": {
        "module": "dbt.exceptions",
        "name": "DependencyError",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/exceptions.py",
        "line": 83,
        "base_classes": [
          "dbt.exceptions.Exception"
        ],
        "methods": [],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 0,
        "lines_of_code": 3,
        "complexity": 11,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": false,
        "is_enum": false,
        "external_deps": [],
        "dbt_deps": [
          "dbt.exceptions.Exception"
        ]
      }
    },
    {
      "rank": 23,
      "class": "dbt.exceptions.AliasError",
      "priority": 586.6666666666666,
      "info": {
        "module": "dbt.exceptions",
        "name": "AliasError",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/exceptions.py",
        "line": 79,
        "base_classes": [
          "dbt_common.exceptions.DbtValidationError"
        ],
        "methods": [],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 0,
        "lines_of_code": 2,
        "complexity": 4,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": false,
        "is_enum": false,
        "external_deps": [],
        "dbt_deps": [
          "dbt_common.exceptions.DbtValidationError"
        ]
      }
    },
    {
      "rank": 24,
      "class": "dbt.cli.exceptions.DbtInternalException",
      "priority": 586.6666666666666,
      "info": {
        "module": "dbt.cli.exceptions",
        "name": "DbtInternalException",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/cli/exceptions.py",
        "line": 15,
        "base_classes": [
          "dbt.cli.exceptions.Exception"
        ],
        "methods": [],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 0,
        "lines_of_code": 2,
        "complexity": 4,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": false,
        "is_enum": false,
        "external_deps": [],
        "dbt_deps": [
          "dbt.cli.exceptions.Exception"
        ]
      }
    },
    {
      "rank": 25,
      "class": "dbt.adapters.exceptions.alias.AliasError",
      "priority": 586.6666666666666,
      "info": {
        "module": "dbt.adapters.exceptions.alias",
        "name": "AliasError",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/adapters/exceptions/alias.py",
        "line": 6,
        "base_classes": [
          "dbt_common.exceptions.DbtValidationError"
        ],
        "methods": [],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 0,
        "lines_of_code": 2,
        "complexity": 4,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": false,
        "is_enum": false,
        "external_deps": [],
        "dbt_deps": [
          "dbt_common.exceptions.DbtValidationError"
        ]
      }
    },
    {
      "rank": 26,
      "class": "dbt.adapters.athena.exceptions.S3LocationException",
      "priority": 586.6666666666666,
      "info": {
        "module": "dbt.adapters.athena.exceptions",
        "name": "S3LocationException",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/adapters/athena/exceptions.py",
        "line": 8,
        "base_classes": [
          "dbt_common.exceptions.DbtRuntimeError"
        ],
        "methods": [],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 0,
        "lines_of_code": 2,
        "complexity": 4,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": false,
        "is_enum": false,
        "external_deps": [],
        "dbt_deps": [
          "dbt_common.exceptions.DbtRuntimeError"
        ]
      }
    },
    {
      "rank": 27,
      "class": "dbt.parser.base.SimpleSQLParser",
      "priority": 577.7777777777778,
      "info": {
        "module": "dbt.parser.base",
        "name": "SimpleSQLParser",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/parser/base.py",
        "line": 523,
        "base_classes": [],
        "methods": [],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 0,
        "lines_of_code": 2,
        "complexity": 8,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": false,
        "is_enum": false,
        "external_deps": [],
        "dbt_deps": []
      }
    },
    {
      "rank": 28,
      "class": "dbt.contracts.graph.unparsed.HasColumnDocs",
      "priority": 574.2857142857142,
      "info": {
        "module": "dbt.contracts.graph.unparsed",
        "name": "HasColumnDocs",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/contracts/graph/unparsed.py",
        "line": 121,
        "base_classes": [
          "dbt_common.dataclass_schema.dbtClassMixin"
        ],
        "methods": [],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 0,
        "lines_of_code": 2,
        "complexity": 20,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": true,
        "is_enum": false,
        "external_deps": [],
        "dbt_deps": [
          "dbt_common.dataclass_schema.dbtClassMixin"
        ]
      }
    },
    {
      "rank": 29,
      "class": "dbt.artifacts.schemas.freshness.v3.freshness.FreshnessErrorEnum",
      "priority": 571.6666666666666,
      "info": {
        "module": "dbt.artifacts.schemas.freshness.v3.freshness",
        "name": "FreshnessErrorEnum",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/artifacts/schemas/freshness/v3/freshness.py",
        "line": 88,
        "base_classes": [
          "dbt_common.dataclass_schema.StrEnum"
        ],
        "methods": [],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 0,
        "lines_of_code": 2,
        "complexity": 7,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": false,
        "is_enum": true,
        "external_deps": [],
        "dbt_deps": [
          "dbt_common.dataclass_schema.StrEnum"
        ]
      }
    },
    {
      "rank": 30,
      "class": "dbt.adapters.bigquery.token_suppliers.TokenServiceType",
      "priority": 571.6666666666666,
      "info": {
        "module": "dbt.adapters.bigquery.token_suppliers",
        "name": "TokenServiceType",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/adapters/bigquery/token_suppliers.py",
        "line": 59,
        "base_classes": [
          "enum.Enum"
        ],
        "methods": [],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 0,
        "lines_of_code": 2,
        "complexity": 7,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": false,
        "is_enum": true,
        "external_deps": [
          "enum.Enum"
        ],
        "dbt_deps": []
      }
    },
    {
      "rank": 31,
      "class": "dbt.exceptions.DbtExclusivePropertyUseError",
      "priority": 566.6666666666666,
      "info": {
        "module": "dbt.exceptions",
        "name": "DbtExclusivePropertyUseError",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/exceptions.py",
        "line": 113,
        "base_classes": [
          "dbt_common.exceptions.DbtConfigError"
        ],
        "methods": [],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 0,
        "lines_of_code": 2,
        "complexity": 4,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": false,
        "is_enum": false,
        "external_deps": [],
        "dbt_deps": [
          "dbt_common.exceptions.DbtConfigError"
        ]
      }
    },
    {
      "rank": 32,
      "class": "dbt.exceptions.DuplicateYamlKeyError",
      "priority": 566.6666666666666,
      "info": {
        "module": "dbt.exceptions",
        "name": "DuplicateYamlKeyError",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/exceptions.py",
        "line": 123,
        "base_classes": [
          "dbt_common.exceptions.CompilationError"
        ],
        "methods": [],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 0,
        "lines_of_code": 2,
        "complexity": 4,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": false,
        "is_enum": false,
        "external_deps": [],
        "dbt_deps": [
          "dbt_common.exceptions.CompilationError"
        ]
      }
    },
    {
      "rank": 33,
      "class": "dbt.adapters.protocol.ColumnProtocol",
      "priority": 566.6666666666666,
      "info": {
        "module": "dbt.adapters.protocol",
        "name": "ColumnProtocol",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/adapters/protocol.py",
        "line": 41,
        "base_classes": [
          "typing_extensions.Protocol"
        ],
        "methods": [],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 0,
        "lines_of_code": 2,
        "complexity": 4,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": false,
        "is_enum": false,
        "external_deps": [
          "typing_extensions.Protocol"
        ],
        "dbt_deps": []
      }
    },
    {
      "rank": 34,
      "class": "dbt.artifacts.resources.v1.config.Severity",
      "priority": 566.6666666666666,
      "info": {
        "module": "dbt.artifacts.resources.v1.config",
        "name": "Severity",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/artifacts/resources/v1/config.py",
        "line": 22,
        "base_classes": [
          "dbt.artifacts.resources.v1.config.str"
        ],
        "methods": [],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 0,
        "lines_of_code": 2,
        "complexity": 4,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": false,
        "is_enum": false,
        "external_deps": [],
        "dbt_deps": [
          "dbt.artifacts.resources.v1.config.str"
        ]
      }
    },
    {
      "rank": 35,
      "class": "dbt.adapters.contracts.connection.Connection",
      "priority": 564.5519077196095,
      "info": {
        "module": "dbt.adapters.contracts.connection",
        "name": "Connection",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/adapters/contracts/connection.py",
        "line": 58,
        "base_classes": [
          "dbt_common.dataclass_schema.ExtensibleDbtClassMixin",
          "dbt_common.contracts.util.Replaceable"
        ],
        "methods": [
          "__init__",
          "credentials",
          "credentials",
          "handle",
          "handle"
        ],
        "properties": [
          "credentials",
          "handle"
        ],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 5,
        "lines_of_code": 48,
        "complexity": 229,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": false,
        "is_enum": false,
        "external_deps": [],
        "dbt_deps": [
          "dbt_common.dataclass_schema.ExtensibleDbtClassMixin",
          "dbt_common.contracts.util.Replaceable"
        ]
      }
    },
    {
      "rank": 36,
      "class": "dbt.artifacts.resources.v1.model.ModelFreshness",
      "priority": 563.5897435897436,
      "info": {
        "module": "dbt.artifacts.resources.v1.model",
        "name": "ModelFreshness",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/artifacts/resources/v1/model.py",
        "line": 32,
        "base_classes": [
          "dbt_common.dataclass_schema.ExtensibleDbtClassMixin",
          "dbt_common.contracts.util.Mergeable"
        ],
        "methods": [],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 0,
        "lines_of_code": 2,
        "complexity": 12,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": true,
        "is_enum": false,
        "external_deps": [],
        "dbt_deps": [
          "dbt_common.dataclass_schema.ExtensibleDbtClassMixin",
          "dbt_common.contracts.util.Mergeable"
        ]
      }
    },
    {
      "rank": 37,
      "class": "dbt.contracts.project.Downloads",
      "priority": 557.5757575757575,
      "info": {
        "module": "dbt.contracts.project",
        "name": "Downloads",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/contracts/project.py",
        "line": 164,
        "base_classes": [
          "dbt_common.dataclass_schema.ExtensibleDbtClassMixin"
        ],
        "methods": [],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 0,
        "lines_of_code": 2,
        "complexity": 10,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": true,
        "is_enum": false,
        "external_deps": [],
        "dbt_deps": [
          "dbt_common.dataclass_schema.ExtensibleDbtClassMixin"
        ]
      }
    },
    {
      "rank": 38,
      "class": "dbt.adapters.record.base.AdapterTestSqlResult",
      "priority": 557.5757575757575,
      "info": {
        "module": "dbt.adapters.record.base",
        "name": "AdapterTestSqlResult",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/adapters/record/base.py",
        "line": 53,
        "base_classes": [],
        "methods": [],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 0,
        "lines_of_code": 2,
        "complexity": 10,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": true,
        "is_enum": false,
        "external_deps": [],
        "dbt_deps": []
      }
    },
    {
      "rank": 39,
      "class": "dbt.adapters.record.base.AdapterStandardizeGrantsDictResult",
      "priority": 557.5757575757575,
      "info": {
        "module": "dbt.adapters.record.base",
        "name": "AdapterStandardizeGrantsDictResult",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/adapters/record/base.py",
        "line": 155,
        "base_classes": [],
        "methods": [],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 0,
        "lines_of_code": 2,
        "complexity": 10,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": true,
        "is_enum": false,
        "external_deps": [],
        "dbt_deps": []
      }
    },
    {
      "rank": 40,
      "class": "dbt.adapters.record.cursor.description.CursorGetDescriptionParams",
      "priority": 557.5757575757575,
      "info": {
        "module": "dbt.adapters.record.cursor.description",
        "name": "CursorGetDescriptionParams",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/adapters/record/cursor/description.py",
        "line": 8,
        "base_classes": [],
        "methods": [],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 0,
        "lines_of_code": 2,
        "complexity": 10,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": true,
        "is_enum": false,
        "external_deps": [],
        "dbt_deps": []
      }
    },
    {
      "rank": 41,
      "class": "dbt.adapters.record.cursor.fetchall.CursorFetchAllParams",
      "priority": 557.5757575757575,
      "info": {
        "module": "dbt.adapters.record.cursor.fetchall",
        "name": "CursorFetchAllParams",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/adapters/record/cursor/fetchall.py",
        "line": 10,
        "base_classes": [],
        "methods": [],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 0,
        "lines_of_code": 2,
        "complexity": 10,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": true,
        "is_enum": false,
        "external_deps": [],
        "dbt_deps": []
      }
    },
    {
      "rank": 42,
      "class": "dbt.adapters.record.cursor.fetchmany.CursorFetchManyParams",
      "priority": 557.5757575757575,
      "info": {
        "module": "dbt.adapters.record.cursor.fetchmany",
        "name": "CursorFetchManyParams",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/adapters/record/cursor/fetchmany.py",
        "line": 8,
        "base_classes": [],
        "methods": [],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 0,
        "lines_of_code": 2,
        "complexity": 10,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": true,
        "is_enum": false,
        "external_deps": [],
        "dbt_deps": []
      }
    },
    {
      "rank": 43,
      "class": "dbt.adapters.record.cursor.rowcount.CursorGetRowCountParams",
      "priority": 557.5757575757575,
      "info": {
        "module": "dbt.adapters.record.cursor.rowcount",
        "name": "CursorGetRowCountParams",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/adapters/record/cursor/rowcount.py",
        "line": 8,
        "base_classes": [],
        "methods": [],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 0,
        "lines_of_code": 2,
        "complexity": 10,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": true,
        "is_enum": false,
        "external_deps": [],
        "dbt_deps": []
      }
    },
    {
      "rank": 44,
      "class": "dbt.adapters.record.cursor.fetchone.CursorFetchOneParams",
      "priority": 557.5757575757575,
      "info": {
        "module": "dbt.adapters.record.cursor.fetchone",
        "name": "CursorFetchOneParams",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/adapters/record/cursor/fetchone.py",
        "line": 8,
        "base_classes": [],
        "methods": [],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 0,
        "lines_of_code": 2,
        "complexity": 10,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": true,
        "is_enum": false,
        "external_deps": [],
        "dbt_deps": []
      }
    },
    {
      "rank": 45,
      "class": "dbt.adapters.record.cursor.fetchone.CursorFetchOneResult",
      "priority": 557.5757575757575,
      "info": {
        "module": "dbt.adapters.record.cursor.fetchone",
        "name": "CursorFetchOneResult",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/adapters/record/cursor/fetchone.py",
        "line": 13,
        "base_classes": [],
        "methods": [],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 0,
        "lines_of_code": 2,
        "complexity": 10,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": true,
        "is_enum": false,
        "external_deps": [],
        "dbt_deps": []
      }
    },
    {
      "rank": 46,
      "class": "dbt.adapters.snowflake.record.cursor.sqlstate.CursorGetSqlStateParams",
      "priority": 557.5757575757575,
      "info": {
        "module": "dbt.adapters.snowflake.record.cursor.sqlstate",
        "name": "CursorGetSqlStateParams",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/adapters/snowflake/record/cursor/sqlstate.py",
        "line": 8,
        "base_classes": [],
        "methods": [],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 0,
        "lines_of_code": 2,
        "complexity": 10,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": true,
        "is_enum": false,
        "external_deps": [],
        "dbt_deps": []
      }
    },
    {
      "rank": 47,
      "class": "dbt.adapters.snowflake.record.cursor.sfqid.CursorGetSfqidParams",
      "priority": 557.5757575757575,
      "info": {
        "module": "dbt.adapters.snowflake.record.cursor.sfqid",
        "name": "CursorGetSfqidParams",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/adapters/snowflake/record/cursor/sfqid.py",
        "line": 8,
        "base_classes": [],
        "methods": [],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 0,
        "lines_of_code": 2,
        "complexity": 10,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": true,
        "is_enum": false,
        "external_deps": [],
        "dbt_deps": []
      }
    },
    {
      "rank": 48,
      "class": "dbt.adapters.base.impl.ConstraintSupport",
      "priority": 555.5555555555555,
      "info": {
        "module": "dbt.adapters.base.impl",
        "name": "ConstraintSupport",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/adapters/base/impl.py",
        "line": 131,
        "base_classes": [
          "dbt.adapters.base.impl.str",
          "enum.Enum"
        ],
        "methods": [],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 0,
        "lines_of_code": 4,
        "complexity": 17,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": false,
        "is_enum": true,
        "external_deps": [
          "enum.Enum"
        ],
        "dbt_deps": [
          "dbt.adapters.base.impl.str"
        ]
      }
    },
    {
      "rank": 49,
      "class": "dbt.adapters.contracts.connection.ConnectionState",
      "priority": 553.3333333333333,
      "info": {
        "module": "dbt.adapters.contracts.connection",
        "name": "ConnectionState",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/adapters/contracts/connection.py",
        "line": 50,
        "base_classes": [
          "dbt_common.dataclass_schema.StrEnum"
        ],
        "methods": [],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 0,
        "lines_of_code": 5,
        "complexity": 19,
        "docstring": null,
        "is_abstract": false,
        "is_dataclass": false,
        "is_enum": true,
        "external_deps": [],
        "dbt_deps": [
          "dbt_common.dataclass_schema.StrEnum"
        ]
      }
    },
    {
      "rank": 50,
      "class": "dbt.adapters.athena.exceptions.SnapshotMigrationRequired",
      "priority": 553.3333333333333,
      "info": {
        "module": "dbt.adapters.athena.exceptions",
        "name": "SnapshotMigrationRequired",
        "file": "/Users/benjaminking/Developer/sqlmesh/.venv/lib/python3.12/site-packages/dbt/adapters/athena/exceptions.py",
        "line": 4,
        "base_classes": [
          "dbt_common.exceptions.CompilationError"
        ],
        "methods": [],
        "properties": [],
        "class_methods": [],
        "static_methods": [],
        "num_methods": 0,
        "lines_of_code": 2,
        "complexity": 5,
        "docstring": "Hive snapshot requires a manual operation due to backward incompatible changes.",
        "is_abstract": false,
        "is_dataclass": false,
        "is_enum": false,
        "external_deps": [],
        "dbt_deps": [
          "dbt_common.exceptions.CompilationError"
        ]
      }
    }
  ],
  "class_dependencies": {
    "dbt.hooks.ModelHookType": [
      "dbt_common.dataclass_schema.StrEnum"
    ],
    "dbt.env_vars.EngineEnvVar": [
      "dbt.exceptions.DbtInternalError",
      "dbt_common.constants.ENGINE_ENV_PREFIX"
    ],
    "dbt.deprecations.DBTDeprecation": [
      "dbt_common.events.functions.warn_or_error",
      "dbt.tracking.active_user",
      "dbt_common.events.functions.fire_event",
      "dbt.tracking",
      "dbt.events.types",
      "dbt_common.events.types.Note",
      "dbt.tracking.track_deprecation_warn",
      "dbt.flags.get_flags"
    ],
    "dbt.deprecations.PackageRedirectDeprecation": [
      "dbt.deprecations.DBTDeprecation"
    ],
    "dbt.deprecations.PackageInstallPathDeprecation": [
      "dbt.deprecations.DBTDeprecation"
    ],
    "dbt.deprecations.ConfigSourcePathDeprecation": [
      "dbt.deprecations.DBTDeprecation"
    ],
    "dbt.deprecations.ConfigDataPathDeprecation": [
      "dbt.deprecations.DBTDeprecation"
    ],
    "dbt.deprecations.ConfigLogPathDeprecation": [
      "dbt.deprecations.DBTDeprecation"
    ],
    "dbt.deprecations.ConfigTargetPathDeprecation": [
      "dbt.deprecations.DBTDeprecation"
    ],
    "dbt.deprecations.AdapterDeprecationWarning": [
      "dbt.deprecations.DBTDeprecation"
    ],
    "dbt.deprecations.MetricAttributesRenamed": [
      "dbt.deprecations.DBTDeprecation"
    ],
    "dbt.deprecations.ExposureNameDeprecation": [
      "dbt.deprecations.DBTDeprecation"
    ],
    "dbt.deprecations.CollectFreshnessReturnSignature": [
      "dbt.deprecations.DBTDeprecation"
    ],
    "dbt.deprecations.ProjectFlagsMovedDeprecation": [
      "dbt.deprecations.DBTDeprecation"
    ],
    "dbt.deprecations.PackageMaterializationOverrideDeprecation": [
      "dbt.deprecations.DBTDeprecation"
    ],
    "dbt.deprecations.ResourceNamesWithSpacesDeprecation": [
      "dbt.deprecations.DBTDeprecation"
    ],
    "dbt.deprecations.SourceFreshnessProjectHooksNotRun": [
      "dbt.deprecations.DBTDeprecation"
    ],
    "dbt.deprecations.MFTimespineWithoutYamlConfigurationDeprecation": [
      "dbt.deprecations.DBTDeprecation"
    ],
    "dbt.deprecations.MFCumulativeTypeParamsDeprecation": [
      "dbt.deprecations.DBTDeprecation"
    ],
    "dbt.deprecations.MicrobatchMacroOutsideOfBatchesDeprecation": [
      "dbt.deprecations.DBTDeprecation"
    ],
    "dbt.deprecations.GenericJSONSchemaValidationDeprecation": [
      "dbt.deprecations.DBTDeprecation"
    ],
    "dbt.deprecations.UnexpectedJinjaBlockDeprecation": [
      "dbt.deprecations.DBTDeprecation"
    ],
    "dbt.deprecations.DuplicateYAMLKeysDeprecation": [
      "dbt.deprecations.DBTDeprecation"
    ],
    "dbt.deprecations.CustomTopLevelKeyDeprecation": [
      "dbt.deprecations.DBTDeprecation"
    ],
    "dbt.deprecations.CustomKeyInConfigDeprecation": [
      "dbt.deprecations.DBTDeprecation"
    ],
    "dbt.deprecations.CustomKeyInObjectDeprecation": [
      "dbt.deprecations.DBTDeprecation"
    ],
    "dbt.deprecations.WEOInlcudeExcludeDeprecation": [
      "dbt.deprecations.DBTDeprecation"
    ],
    "dbt.deprecations.CustomOutputPathInSourceFreshnessDeprecation": [
      "dbt.deprecations.DBTDeprecation"
    ],
    "dbt.deprecations.SourceOverrideDeprecation": [
      "dbt.deprecations.DBTDeprecation"
    ],
    "dbt.deprecations.PropertyMovedToConfigDeprecation": [
      "dbt.deprecations.DBTDeprecation"
    ],
    "dbt.deprecations.ModelParamUsageDeprecation": [
      "dbt.deprecations.DBTDeprecation"
    ],
    "dbt.deprecations.EnvironmentVariableNamespaceDeprecation": [
      "dbt.deprecations.DBTDeprecation"
    ],
    "dbt.deprecations.MissingPlusPrefixDeprecation": [
      "dbt.deprecations.DBTDeprecation"
    ],
    "dbt.deprecations.ArgumentsPropertyInGenericTestDeprecation": [
      "dbt.deprecations.DBTDeprecation"
    ],
    "dbt.deprecations.MissingArgumentsPropertyInGenericTestDeprecation": [
      "dbt.deprecations.DBTDeprecation"
    ],
    "dbt.deprecations.ModulesItertoolsUsageDeprecation": [
      "dbt.deprecations.DBTDeprecation"
    ],
    "dbt.deprecations.EnvironmentVariableRenamed": [
      "dbt.deprecations.DBTDeprecation"
    ],
    "dbt.deprecations.DeprecationSummary": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.compilation.SeenDetails": [
      "dbt.contracts.graph.manifest.UniqueID"
    ],
    "dbt.compilation.Linker": [
      "dbt.contracts.graph.manifest.UniqueID",
      "dbt.node_types.NodeType",
      "dbt.graph.Graph",
      "dbt.contracts.graph.nodes.GraphMemberNode",
      "dbt.exceptions.GraphDependencyNotFoundError",
      "dbt.contracts.graph.manifest.Manifest",
      "dbt.flags.get_flags"
    ],
    "dbt.compilation.Compiler": [
      "dbt.contracts.graph.nodes.ModelNode",
      "dbt.exceptions.ForeignKeyConstraintToSyntaxError",
      "dbt.contracts.graph.nodes.UnitTestNode",
      "dbt.graph.Graph",
      "dbt_common.contracts.constraints.ConstraintType",
      "dbt_common.invocation.get_invocation_id",
      "dbt_common.events.contextvars.get_node_info",
      "dbt.adapters.factory.get_adapter",
      "dbt.exceptions.DbtRuntimeError",
      "dbt.clients.jinja",
      "dbt.contracts.graph.nodes.SeedNode",
      "dbt.node_types.ModelLanguage",
      "dbt_common.clients.system.make_directory",
      "dbt_common.events.types.Note",
      "dbt.exceptions.GraphDependencyNotFoundError",
      "dbt.contracts.graph.nodes.GenericTestNode",
      "dbt.contracts.graph.nodes.ManifestSQLNode",
      "dbt.context.providers.generate_runtime_unit_test_context",
      "dbt.flags.get_flags",
      "dbt.exceptions.DbtInternalError",
      "dbt.events.types.WritingInjectedSQLForNode",
      "dbt.context.providers.generate_runtime_model_context",
      "dbt.node_types.NodeType",
      "dbt.contracts.graph.nodes.InjectedCTE",
      "dbt_common.events.functions.fire_event",
      "dbt.contracts.graph.nodes.UnitTestDefinition",
      "dbt.contracts.graph.manifest.Manifest",
      "dbt.exceptions.ParsingError"
    ],
    "dbt.exceptions.ContractBreakingChangeError": [
      "dbt_common.exceptions.DbtRuntimeError"
    ],
    "dbt.exceptions.ParsingError": [
      "dbt_common.exceptions.DbtRuntimeError"
    ],
    "dbt.exceptions.dbtPluginError": [
      "dbt_common.exceptions.DbtRuntimeError"
    ],
    "dbt.exceptions.JSONValidationError": [
      "dbt_common.exceptions.DbtValidationError"
    ],
    "dbt.exceptions.AliasError": [
      "dbt_common.exceptions.DbtValidationError"
    ],
    "dbt.exceptions.DependencyError": [
      "dbt.exceptions.Exception"
    ],
    "dbt.exceptions.FailFastError": [
      "dbt_common.exceptions.DbtRuntimeError"
    ],
    "dbt.exceptions.DbtProjectError": [
      "dbt_common.exceptions.DbtConfigError"
    ],
    "dbt.exceptions.DbtSelectorsError": [
      "dbt_common.exceptions.DbtConfigError"
    ],
    "dbt.exceptions.DbtProfileError": [
      "dbt_common.exceptions.DbtConfigError"
    ],
    "dbt.exceptions.DbtExclusivePropertyUseError": [
      "dbt_common.exceptions.DbtConfigError"
    ],
    "dbt.exceptions.InvalidSelectorError": [
      "dbt_common.exceptions.DbtRuntimeError"
    ],
    "dbt.exceptions.DuplicateYamlKeyError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.GraphDependencyNotFoundError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.ForeignKeyConstraintToSyntaxError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.NoSupportedLanguagesFoundError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.MaterializtionMacroNotUsedError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.MacroNamespaceNotStringError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.UnknownGitCloningProblemError": [
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt_common.exceptions.env_secrets",
      "dbt_common.exceptions.scrub_secrets"
    ],
    "dbt.exceptions.NoAdaptersAvailableError": [
      "dbt_common.exceptions.DbtRuntimeError"
    ],
    "dbt.exceptions.BadSpecError": [
      "dbt_common.exceptions.scrub_secrets",
      "dbt_common.exceptions.env_secrets",
      "dbt_common.exceptions.DbtInternalError"
    ],
    "dbt.exceptions.GitCloningError": [
      "dbt_common.exceptions.scrub_secrets",
      "dbt_common.exceptions.env_secrets",
      "dbt_common.exceptions.DbtInternalError",
      "dbt_common.exceptions.CommandResultError"
    ],
    "dbt.exceptions.GitCheckoutError": [
      "dbt.exceptions.BadSpecError"
    ],
    "dbt.exceptions.OperationError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.ZipStrictWrongTypeError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.SetStrictWrongTypeError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.LoadAgateTableValueError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.LoadAgateTableNotSeedError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.PackageNotInDepsError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.OperationsCannotRefEphemeralNodesError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.PersistDocsValueTypeError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.InlineModelConfigError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.ConflictingConfigKeysError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.NumberSourceArgsError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.RequiredVarNotFoundError": [
      "dbt_common.exceptions.scrub_secrets",
      "dbt_common.constants.SECRET_ENV_PREFIX",
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.PackageNotFoundForMacroError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.SecretEnvVarLocationError": [
      "dbt.exceptions.ParsingError"
    ],
    "dbt.exceptions.BooleanError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.RefArgsError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.MetricArgsError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.RefBadContextError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.DocArgsError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.DocTargetNotFoundError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.MacroDispatchArgError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.DuplicateMacroNameError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.MacroResultAlreadyLoadedError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.DictParseError": [
      "dbt.exceptions.ParsingError",
      "dbt_common.dataclass_schema.ValidationError"
    ],
    "dbt.exceptions.ConfigUpdateError": [
      "dbt.exceptions.ParsingError",
      "dbt_common.dataclass_schema.ValidationError"
    ],
    "dbt.exceptions.PythonParsingError": [
      "dbt.exceptions.ParsingError"
    ],
    "dbt.exceptions.PythonLiteralEvalError": [
      "dbt.exceptions.ParsingError"
    ],
    "dbt.exceptions.ModelConfigError": [
      "dbt.exceptions.ParsingError",
      "dbt_common.dataclass_schema.ValidationError"
    ],
    "dbt.exceptions.YamlParseListError": [
      "dbt.exceptions.ParsingError",
      "dbt_common.dataclass_schema.ValidationError"
    ],
    "dbt.exceptions.YamlParseDictError": [
      "dbt.exceptions.ParsingError",
      "dbt_common.dataclass_schema.ValidationError"
    ],
    "dbt.exceptions.YamlLoadError": [
      "dbt_common.exceptions.DbtValidationError",
      "dbt.exceptions.ParsingError"
    ],
    "dbt.exceptions.TestConfigError": [
      "dbt.exceptions.ParsingError",
      "dbt_common.dataclass_schema.ValidationError"
    ],
    "dbt.exceptions.SchemaConfigError": [
      "dbt.exceptions.ParsingError",
      "dbt_common.dataclass_schema.ValidationError"
    ],
    "dbt.exceptions.SnapshopConfigError": [
      "dbt.exceptions.ParsingError",
      "dbt_common.dataclass_schema.ValidationError"
    ],
    "dbt.exceptions.DbtReferenceError": [
      "dbt.node_types.AccessType",
      "dbt.exceptions.ParsingError"
    ],
    "dbt.exceptions.InvalidAccessTypeError": [
      "dbt.exceptions.ParsingError"
    ],
    "dbt.exceptions.InvalidUnitTestGivenInput": [
      "dbt.exceptions.ParsingError"
    ],
    "dbt.exceptions.SameKeyNestedError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.TestArgIncludesModelError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.UnexpectedTestNamePatternError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.CustomMacroPopulatingConfigValueError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.TagsNotListOfStringsError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.TagNotStringError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.TestNameNotStringError": [
      "dbt.exceptions.ParsingError"
    ],
    "dbt.exceptions.TestArgsNotDictError": [
      "dbt.exceptions.ParsingError"
    ],
    "dbt.exceptions.TestDefinitionDictLengthError": [
      "dbt.exceptions.ParsingError"
    ],
    "dbt.exceptions.TestTypeError": [
      "dbt.exceptions.ParsingError"
    ],
    "dbt.exceptions.EnvVarMissingError": [
      "dbt.exceptions.ParsingError"
    ],
    "dbt.exceptions.TargetNotFoundError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.DuplicateSourcePatchNameError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.DuplicateMacroPatchNameError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.DuplicateAliasError": [
      "dbt.exceptions.AliasError"
    ],
    "dbt.exceptions.MultipleVersionGitDepsError": [
      "dbt.exceptions.DependencyError"
    ],
    "dbt.exceptions.DuplicateProjectDependencyError": [
      "dbt.exceptions.DependencyError"
    ],
    "dbt.exceptions.DuplicateDependencyToRootError": [
      "dbt.exceptions.DependencyError"
    ],
    "dbt.exceptions.MismatchedDependencyTypeError": [
      "dbt.exceptions.DependencyError"
    ],
    "dbt.exceptions.PackageVersionNotFoundError": [
      "dbt.exceptions.DependencyError"
    ],
    "dbt.exceptions.PackageNotFoundError": [
      "dbt.exceptions.DependencyError"
    ],
    "dbt.exceptions.ProfileConfigError": [
      "dbt.exceptions.DbtProfileError",
      "dbt_common.dataclass_schema.ValidationError"
    ],
    "dbt.exceptions.ProjectContractError": [
      "dbt.exceptions.DbtProjectError",
      "dbt_common.dataclass_schema.ValidationError"
    ],
    "dbt.exceptions.ProjectContractBrokenError": [
      "dbt.exceptions.DbtProjectError",
      "dbt_common.dataclass_schema.ValidationError"
    ],
    "dbt.exceptions.ConfigContractBrokenError": [
      "dbt.exceptions.DbtProjectError",
      "dbt_common.dataclass_schema.ValidationError"
    ],
    "dbt.exceptions.NonUniquePackageNameError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.UninstalledPackagesFoundError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.OptionNotYamlDictError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.UnrecognizedCredentialTypeError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.PatchTargetNotFoundError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.MissingRelationError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.AmbiguousAliasError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.AmbiguousResourceNameRefError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.AmbiguousCatalogMatchError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.DependencyNotFoundError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.DuplicatePatchPathError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.DuplicateResourceNameError": [
      "dbt.node_types.NodeType",
      "dbt_common.exceptions.CompilationError",
      "dbt.node_types.REFABLE_NODE_TYPES"
    ],
    "dbt.exceptions.DuplicateVersionedUnversionedError": [
      "dbt.exceptions.ParsingError"
    ],
    "dbt.exceptions.PropertyYMLError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.exceptions.ContractError": [
      "dbt_common.exceptions.CompilationError",
      "dbt_common.clients.agate_helper.table_from_data_flat"
    ],
    "dbt.exceptions.UnknownAsyncIDException": [
      "dbt.exceptions.Exception"
    ],
    "dbt.exceptions.RPCFailureResult": [
      "dbt_common.exceptions.DbtRuntimeError"
    ],
    "dbt.exceptions.RPCTimeoutException": [
      "dbt_common.exceptions.DbtRuntimeError"
    ],
    "dbt.exceptions.RPCKilledException": [
      "dbt_common.exceptions.DbtRuntimeError"
    ],
    "dbt.exceptions.RPCCompiling": [
      "dbt_common.exceptions.DbtRuntimeError"
    ],
    "dbt.exceptions.RPCLoadException": [
      "dbt_common.exceptions.DbtRuntimeError"
    ],
    "dbt.tracking.TimeoutEmitter": [
      "dbt.events.types.DisableTracking",
      "dbt_common.events.functions.fire_event"
    ],
    "dbt.tracking.User": [
      "dbt_common.events.functions.get_invocation_id",
      "dbt.clients.yaml_helper.safe_load",
      "dbt.clients.yaml_helper.yaml"
    ],
    "dbt.clients.jinja.MacroStack": [
      "dbt.exceptions.DbtInternalError"
    ],
    "dbt.clients.jinja.MacroGenerator": [
      "dbt_common.clients.jinja.CallableMacroGenerator",
      "dbt_common.clients.jinja.MacroProtocol"
    ],
    "dbt.clients.jinja.UnitTestMacroGenerator": [
      "dbt.clients.jinja.MacroGenerator"
    ],
    "dbt.event_time.sample_window.SampleWindow": [
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt.artifacts.resources.types.BatchSize",
      "dbt.event_time.event_time.offset_timestamp"
    ],
    "dbt.context.context_config.ModelParts": [
      "dbt.node_types.NodeType",
      "dbt.config.IsFQNResource"
    ],
    "dbt.context.context_config.ConfigSource": [
      "dbt.node_types.NodeType"
    ],
    "dbt.context.context_config.UnrenderedConfig": [
      "dbt.config.Project",
      "dbt.node_types.NodeType",
      "dbt.context.context_config.ConfigSource"
    ],
    "dbt.context.context_config.RenderedConfig": [
      "dbt.config.Project",
      "dbt.node_types.NodeType",
      "dbt.context.context_config.ConfigSource"
    ],
    "dbt.context.context_config.BaseContextConfigGenerator": [
      "dbt.node_types.NodeType",
      "dbt.utils.fqn_search",
      "dbt.config.RuntimeConfig",
      "dbt_common.contracts.config.base.BaseConfig",
      "dbt_common.exceptions.DbtInternalError",
      "dbt.config.Project"
    ],
    "dbt.context.context_config.ContextConfigGenerator": [
      "dbt.node_types.NodeType",
      "dbt.adapters.factory.get_config_class_by_name",
      "dbt_common.dataclass_schema.ValidationError",
      "dbt.contracts.graph.model_config.get_config_for",
      "dbt.config.RuntimeConfig",
      "dbt.exceptions.SchemaConfigError",
      "dbt.config.Project"
    ],
    "dbt.context.context_config.UnrenderedConfigGenerator": [
      "dbt.node_types.NodeType",
      "dbt.config.Project"
    ],
    "dbt.context.context_config.ContextConfig": [
      "dbt.node_types.NodeType",
      "dbt.flags.get_flags",
      "dbt_common.contracts.config.base.merge_config_dicts",
      "dbt.config.RuntimeConfig"
    ],
    "dbt.context.manifest.ManifestContext": [
      "dbt.adapters.factory.get_adapter_package_names",
      "dbt.clients.jinja.MacroStack",
      "dbt.context.macro_resolver.TestMacroNamespace",
      "dbt.contracts.graph.manifest.Manifest",
      "dbt.adapters.contracts.connection.AdapterRequiredConfig"
    ],
    "dbt.context.docs.DocsRuntimeContext": [
      "dbt.contracts.graph.nodes.Macro",
      "dbt.context.configured.SchemaYamlContext",
      "dbt.exceptions.DocArgsError",
      "dbt.config.runtime.RuntimeConfig",
      "dbt.context.base.contextmember",
      "dbt.contracts.graph.nodes.ResultNode",
      "dbt.contracts.graph.manifest.Manifest",
      "dbt.exceptions.DocTargetNotFoundError"
    ],
    "dbt.context.providers.RelationProxy": [
      "dbt_common.utils.merge"
    ],
    "dbt.context.providers.BaseDatabaseWrapper": [
      "dbt.context.macros.MacroNamespace",
      "dbt.exceptions.CompilationError",
      "dbt.clients.jinja.MacroGenerator",
      "dbt.exceptions.MacroDispatchArgError",
      "dbt.adapters.factory.get_adapter_type_names"
    ],
    "dbt.context.providers.BaseResolver": [
      "dbt.contracts.graph.nodes.ModelNode",
      "dbt.artifacts.resources.SeedConfig",
      "dbt.artifacts.resources.NodeConfig",
      "dbt.contracts.graph.metrics.MetricReference",
      "dbt.artifacts.resources.SourceConfig",
      "dbt.adapters.base.relation.EventTimeFilter",
      "dbt.contracts.graph.nodes.SnapshotNode",
      "dbt.contracts.graph.nodes.ManifestNode"
    ],
    "dbt.context.providers.BaseRefResolver": [
      "dbt.context.providers.BaseResolver",
      "dbt.artifacts.resources.NodeVersion",
      "dbt.exceptions.CompilationError",
      "dbt.artifacts.resources.RefArgs",
      "dbt.exceptions.RefArgsError"
    ],
    "dbt.context.providers.BaseSourceResolver": [
      "dbt.context.providers.BaseResolver",
      "dbt.exceptions.CompilationError",
      "dbt.exceptions.NumberSourceArgsError"
    ],
    "dbt.context.providers.BaseMetricResolver": [
      "dbt.contracts.graph.metrics.MetricReference",
      "dbt.context.providers.BaseResolver",
      "dbt.exceptions.MetricArgsError",
      "dbt.exceptions.CompilationError"
    ],
    "dbt.context.providers.Config": [
      "dbt.context.context_config.ContextConfig"
    ],
    "dbt.context.providers.ParseConfigObject": [
      "dbt.exceptions.ConflictingConfigKeysError",
      "dbt.context.providers.Config",
      "dbt.context.context_config.ContextConfig",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.exceptions.InlineModelConfigError",
      "dbt.clients.jinja_static.statically_parse_unrendered_config",
      "dbt.flags.get_flags"
    ],
    "dbt.context.providers.RuntimeConfigObject": [
      "dbt.adapters.exceptions.MissingConfigError",
      "dbt.exceptions.PersistDocsValueTypeError",
      "dbt.context.providers.Config",
      "dbt.context.context_config.ContextConfig"
    ],
    "dbt.context.providers.ParseDatabaseWrapper": [
      "dbt.context.providers.BaseDatabaseWrapper"
    ],
    "dbt.context.providers.RuntimeDatabaseWrapper": [
      "dbt.context.providers.BaseDatabaseWrapper"
    ],
    "dbt.context.providers.ParseRefResolver": [
      "dbt.context.providers.BaseRefResolver",
      "dbt.artifacts.resources.NodeVersion"
    ],
    "dbt.context.providers.RuntimeRefResolver": [
      "dbt.exceptions.RefBadContextError",
      "dbt.exceptions.DbtReferenceError",
      "dbt.exceptions.TargetNotFoundError",
      "dbt.artifacts.resources.NodeVersion",
      "dbt_common.utils.cast_to_str",
      "dbt.contracts.graph.nodes.ManifestNode",
      "dbt.contracts.graph.nodes.AccessType",
      "dbt.contracts.graph.manifest.Disabled",
      "dbt.context.providers.BaseRefResolver",
      "dbt.selected_resources",
      "dbt.adapters.factory.get_adapter"
    ],
    "dbt.context.providers.OperationRefResolver": [
      "dbt.contracts.graph.nodes.ManifestNode",
      "dbt.context.providers.RuntimeRefResolver",
      "dbt.artifacts.resources.NodeVersion",
      "dbt.exceptions.OperationsCannotRefEphemeralNodesError"
    ],
    "dbt.context.providers.RuntimeUnitTestRefResolver": [
      "dbt.context.providers.RuntimeRefResolver",
      "dbt.artifacts.resources.NodeVersion"
    ],
    "dbt.context.providers.ParseSourceResolver": [
      "dbt.context.providers.BaseSourceResolver"
    ],
    "dbt.context.providers.RuntimeSourceResolver": [
      "dbt.exceptions.TargetNotFoundError",
      "dbt.context.providers.BaseSourceResolver",
      "dbt.contracts.graph.manifest.Disabled"
    ],
    "dbt.context.providers.RuntimeUnitTestSourceResolver": [
      "dbt.exceptions.TargetNotFoundError",
      "dbt.context.providers.BaseSourceResolver",
      "dbt.contracts.graph.manifest.Disabled"
    ],
    "dbt.context.providers.ParseMetricResolver": [
      "dbt.contracts.graph.metrics.MetricReference",
      "dbt.context.providers.BaseMetricResolver"
    ],
    "dbt.context.providers.RuntimeMetricResolver": [
      "dbt.contracts.graph.metrics.MetricReference",
      "dbt.exceptions.TargetNotFoundError",
      "dbt.contracts.graph.metrics.ResolvedMetricReference",
      "dbt.contracts.graph.manifest.Disabled",
      "dbt.context.providers.BaseMetricResolver"
    ],
    "dbt.context.providers.ModelConfiguredVar": [
      "dbt.config.IsFQNResource",
      "dbt.utils.MultiDict",
      "dbt.context.configured.FQNLookup",
      "dbt.config.RuntimeConfig",
      "dbt.context.base.Var",
      "dbt.contracts.graph.nodes.Resource",
      "dbt.config.Project"
    ],
    "dbt.context.providers.ParseVar": [
      "dbt.context.providers.ModelConfiguredVar"
    ],
    "dbt.context.providers.RuntimeVar": [
      "dbt.context.providers.ModelConfiguredVar"
    ],
    "dbt.context.providers.UnitTestVar": [
      "dbt.contracts.graph.nodes.Resource",
      "dbt.config.RuntimeConfig",
      "dbt.contracts.graph.nodes.UnitTestNode",
      "dbt.context.providers.RuntimeVar"
    ],
    "dbt.context.providers.Provider": [
      "dbt.context.base.Var"
    ],
    "dbt.context.providers.ParseProvider": [
      "dbt.context.providers.Provider",
      "dbt.context.base.Var"
    ],
    "dbt.context.providers.GenerateNameProvider": [
      "dbt.context.providers.Provider",
      "dbt.context.base.Var"
    ],
    "dbt.context.providers.RuntimeProvider": [
      "dbt.context.providers.Provider",
      "dbt.context.base.Var"
    ],
    "dbt.context.providers.RuntimeUnitTestProvider": [
      "dbt.context.providers.Provider",
      "dbt.context.base.Var"
    ],
    "dbt.context.providers.OperationProvider": [
      "dbt.context.providers.RuntimeProvider"
    ],
    "dbt.context.providers.ProviderContext": [
      "dbt.contracts.graph.nodes.Macro",
      "dbt.contracts.graph.nodes.ModelNode",
      "dbt.materializations.incremental.microbatch.MicrobatchBuilder",
      "dbt.context.macros.MacroNamespaceBuilder",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.selected_resources",
      "dbt_common.constants.SECRET_ENV_PREFIX",
      "dbt.adapters.factory.get_adapter",
      "dbt_common.events.functions.get_metadata_vars",
      "dbt.exceptions.EnvVarMissingError",
      "dbt.adapters.factory.get_adapter_package_names",
      "dbt.context.base.contextmember",
      "dbt.exceptions.CompilationError",
      "dbt.contracts.graph.nodes.SeedNode",
      "dbt.adapters.base.column.Column",
      "dbt.config.RuntimeConfig",
      "dbt.context.base.contextproperty",
      "dbt.constants.DEFAULT_ENV_PLACEHOLDER",
      "dbt.context.manifest.ManifestContext",
      "dbt_common.exceptions.DbtValidationError",
      "dbt.exceptions.LoadAgateTableValueError",
      "dbt_common.utils.AttrDict",
      "dbt.exceptions.SecretEnvVarLocationError",
      "dbt.clients.jinja.get_rendered",
      "dbt_common.context.get_invocation_context",
      "dbt_common.exceptions.MacrosSourcesUnWriteableError",
      "dbt_common.clients.agate_helper",
      "dbt.context.context_config.ContextConfig",
      "dbt.utils.args_to_dict",
      "dbt.contracts.graph.nodes.ManifestNode",
      "dbt_common.exceptions.DbtInternalError",
      "dbt.exceptions.MacroResultAlreadyLoadedError",
      "dbt.adapters.contracts.connection.AdapterResponse",
      "dbt.exceptions.LoadAgateTableNotSeedError",
      "dbt.contracts.graph.manifest.Manifest",
      "dbt.context.exceptions_jinja.wrapped_exports",
      "dbt.contracts.graph.nodes.SourceDefinition"
    ],
    "dbt.context.providers.MacroContext": [
      "dbt.contracts.graph.manifest.Manifest",
      "dbt_common.clients.jinja.MacroProtocol",
      "dbt.config.RuntimeConfig",
      "dbt.context.providers.ProviderContext"
    ],
    "dbt.context.providers.SourceContext": [
      "dbt.context.base.contextproperty",
      "dbt.contracts.graph.nodes.SourceDefinition",
      "dbt.context.providers.ProviderContext"
    ],
    "dbt.context.providers.ModelContext": [
      "dbt.node_types.NodeType",
      "dbt.node_types.ModelLanguage",
      "dbt.context.base.contextproperty",
      "dbt.contracts.graph.nodes.ManifestNode",
      "dbt.context.providers.ProviderContext"
    ],
    "dbt.context.providers.UnitTestContext": [
      "dbt.context.providers.ModelContext",
      "dbt.contracts.graph.nodes.UnitTestNode",
      "dbt.context.base.contextmember",
      "dbt.context.base.contextproperty"
    ],
    "dbt.context.providers.ExposureRefResolver": [
      "dbt.exceptions.RefArgsError",
      "dbt.context.providers.BaseResolver",
      "dbt.artifacts.resources.RefArgs"
    ],
    "dbt.context.providers.ExposureSourceResolver": [
      "dbt.context.providers.BaseResolver",
      "dbt.exceptions.NumberSourceArgsError"
    ],
    "dbt.context.providers.ExposureMetricResolver": [
      "dbt.context.providers.BaseResolver",
      "dbt.exceptions.MetricArgsError"
    ],
    "dbt.context.providers.SemanticModelRefResolver": [
      "dbt.exceptions.RefArgsError",
      "dbt.context.providers.BaseResolver",
      "dbt.artifacts.resources.RefArgs",
      "dbt.exceptions.ParsingError"
    ],
    "dbt.context.providers.TestContext": [
      "dbt.exceptions.EnvVarMissingError",
      "dbt_common.context.get_invocation_context",
      "dbt.exceptions.SecretEnvVarLocationError",
      "dbt.clients.jinja.MacroStack",
      "dbt.node_types.NodeType",
      "dbt.context.macro_resolver.TestMacroNamespace",
      "dbt.context.base.contextmember",
      "dbt.context.context_config.ContextConfig",
      "dbt.context.macro_resolver.MacroResolver",
      "dbt.config.RuntimeConfig",
      "dbt.contracts.graph.manifest.Manifest",
      "dbt.constants.DEFAULT_ENV_PLACEHOLDER",
      "dbt_common.constants.SECRET_ENV_PREFIX",
      "dbt.context.providers.ProviderContext"
    ],
    "dbt.context.secret.SecretContext": [
      "dbt.exceptions.EnvVarMissingError",
      "dbt_common.context.get_invocation_context",
      "dbt.constants.SECRET_PLACEHOLDER",
      "dbt.constants.DEFAULT_ENV_PLACEHOLDER",
      "dbt_common.constants.SECRET_ENV_PREFIX"
    ],
    "dbt.context.macros.MacroNamespace": [
      "dbt.exceptions.PackageNotFoundForMacroError",
      "dbt.clients.jinja.MacroGenerator",
      "dbt.include.global_project.PROJECT_NAME"
    ],
    "dbt.context.macros.MacroNamespaceBuilder": [
      "dbt.contracts.graph.nodes.Macro",
      "dbt.clients.jinja.MacroGenerator",
      "dbt.clients.jinja.MacroStack",
      "dbt.exceptions.DuplicateMacroNameError"
    ],
    "dbt.context.query_header.QueryHeaderContext": [
      "dbt.context.manifest.ManifestContext",
      "dbt.contracts.graph.manifest.Manifest",
      "dbt.adapters.contracts.connection.AdapterRequiredConfig"
    ],
    "dbt.context.configured.ConfiguredContext": [
      "dbt.context.base.contextproperty",
      "dbt.adapters.contracts.connection.AdapterRequiredConfig",
      "dbt.context.target.TargetContext"
    ],
    "dbt.context.configured.FQNLookup": [
      "dbt.node_types.NodeType"
    ],
    "dbt.context.configured.ConfiguredVar": [
      "dbt.adapters.contracts.connection.AdapterRequiredConfig",
      "dbt.utils.MultiDict",
      "dbt.context.base.Var"
    ],
    "dbt.context.configured.SchemaYamlContext": [
      "dbt.exceptions.EnvVarMissingError",
      "dbt_common.context.get_invocation_context",
      "dbt.exceptions.SecretEnvVarLocationError",
      "dbt.context.base.contextmember",
      "dbt.context.base.contextproperty",
      "dbt.constants.DEFAULT_ENV_PLACEHOLDER",
      "dbt_common.constants.SECRET_ENV_PREFIX",
      "dbt.context.configured.ConfiguredContext"
    ],
    "dbt.context.configured.MacroResolvingContext": [
      "dbt.context.configured.ConfiguredContext",
      "dbt.context.base.contextproperty"
    ],
    "dbt.context.target.TargetContext": [
      "dbt.context.base.BaseContext",
      "dbt.context.base.contextproperty"
    ],
    "dbt.context.macro_resolver.MacroResolver": [
      "dbt.contracts.graph.nodes.Macro",
      "dbt.exceptions.DuplicateMacroNameError"
    ],
    "dbt.context.macro_resolver.TestMacroNamespace": [
      "dbt.clients.jinja.MacroGenerator",
      "dbt.exceptions.PackageNotFoundForMacroError",
      "dbt.include.global_project.PROJECT_NAME"
    ],
    "dbt.context.base.ContextMeta": [
      "dbt.context.base.type"
    ],
    "dbt.context.base.Var": [
      "dbt.clients.jinja.get_rendered",
      "dbt.contracts.graph.nodes.Resource",
      "dbt.exceptions.RequiredVarNotFoundError"
    ],
    "dbt.context.base.BaseContext": [
      "dbt.constants.SECRET_PLACEHOLDER",
      "dbt_common.events.functions.get_invocation_id",
      "dbt.exceptions.ZipStrictWrongTypeError",
      "dbt_common.constants.SECRET_ENV_PREFIX",
      "dbt_common.events.contextvars.get_node_info",
      "dbt.exceptions.EnvVarMissingError",
      "dbt.flags",
      "dbt.events.types.JinjaLogInfo",
      "dbt.constants.DEFAULT_ENV_PLACEHOLDER",
      "dbt.clients.yaml_helper.safe_load",
      "dbt_common.context.get_invocation_context",
      "dbt.exceptions.SecretEnvVarLocationError",
      "dbt.version.__version__",
      "dbt_common.exceptions.macros.MacroReturn",
      "dbt.exceptions.SetStrictWrongTypeError",
      "dbt_common.events.types.PrintEvent",
      "dbt.tracking",
      "dbt.flags.get_flags",
      "dbt.utils",
      "dbt_common.events.functions.fire_event",
      "dbt.events.types.JinjaLogDebug",
      "dbt.clients.yaml_helper.yaml"
    ],
    "dbt.config.renderer.BaseRenderer": [
      "dbt_common.exceptions.RecursionError",
      "dbt.clients.jinja.get_rendered",
      "dbt.exceptions.DbtProjectError",
      "dbt_common.exceptions.CompilationError",
      "dbt_common.clients.jinja.catch_jinja",
      "dbt_common.utils.deep_map_render"
    ],
    "dbt.config.renderer.DbtProjectYamlRenderer": [
      "dbt.adapters.contracts.connection.HasCredentials",
      "dbt.context.base.BaseContext",
      "dbt.constants.DEPENDENCIES_FILE_NAME",
      "dbt.config.renderer.BaseRenderer",
      "dbt.context.target.TargetContext"
    ],
    "dbt.config.renderer.SecretRenderer": [
      "dbt_common.context.get_invocation_context",
      "dbt.constants.SECRET_PLACEHOLDER",
      "dbt.config.renderer.BaseRenderer",
      "dbt.context.secret.SecretContext",
      "dbt_common.constants.SECRET_ENV_PREFIX"
    ],
    "dbt.config.renderer.ProfileRenderer": [
      "dbt.config.renderer.SecretRenderer"
    ],
    "dbt.config.renderer.PackageRenderer": [
      "dbt.config.renderer.SecretRenderer"
    ],
    "dbt.config.profile.Profile": [
      "dbt.exceptions.DbtRuntimeError",
      "dbt.exceptions.DbtProfileError",
      "dbt.exceptions.ProfileConfigError",
      "dbt.adapters.contracts.connection.Credentials",
      "dbt.adapters.contracts.connection.HasCredentials",
      "dbt.contracts.project.ProfileConfig",
      "dbt.exceptions.DbtProjectError",
      "dbt_common.events.functions.fire_event",
      "dbt_common.dataclass_schema.ValidationError",
      "dbt.events.types.MissingProfileTarget",
      "dbt.exceptions.CompilationError",
      "dbt.adapters.factory.load_plugin",
      "dbt.flags.get_flags"
    ],
    "dbt.config.selectors.SelectorConfig": [
      "dbt.graph.SelectionSpec",
      "dbt.contracts.selection.SelectorFile",
      "dbt.exceptions.DbtSelectorsError",
      "dbt.clients.yaml_helper.load_yaml_text",
      "dbt_common.dataclass_schema.ValidationError",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.graph.parse_from_selectors_definition",
      "dbt_common.clients.system.load_file_contents",
      "dbt.clients.yaml_helper.yaml"
    ],
    "dbt.config.selectors.SelectorDict": [
      "dbt.exceptions.DbtSelectorsError",
      "dbt.graph.selector_spec.SelectionCriteria"
    ],
    "dbt.config.runtime.RuntimeConfig": [
      "dbt.contracts.graph.manifest.ManifestMetadata",
      "dbt.contracts.project.Configuration",
      "dbt.adapters.factory.get_relation_class_by_name",
      "dbt.adapters.factory.get_include_paths",
      "dbt.events.types.UnusedResourceConfigPath",
      "dbt.exceptions.DbtProjectError",
      "dbt.exceptions.ConfigContractBrokenError",
      "project.dbt_cloud",
      "dbt.exceptions.UninstalledPackagesFoundError",
      "dbt.exceptions.NonUniquePackageNameError",
      "dbt.tracking",
      "dbt.flags.get_flags",
      "project.dbt_version",
      "dbt.adapters.contracts.connection.AdapterRequiredConfig",
      "dbt_common.helper_types.FQNPath",
      "dbt_common.helper_types.PathSet",
      "dbt_common.events.functions.warn_or_error",
      "dbt_common.dataclass_schema.ValidationError",
      "dbt.artifacts.resources.v1.components.Quoting"
    ],
    "dbt.config.runtime.UnsetCredentials": [
      "dbt.adapters.contracts.connection.Credentials"
    ],
    "dbt.config.runtime.UnsetProfile": [
      "dbt.exceptions.DbtRuntimeError",
      "dbt_common.helper_types.DictDefaultEmptyStr"
    ],
    "dbt.config.project.IsFQNResource": [
      "dbt.node_types.NodeType"
    ],
    "dbt.config.project.PartialProject": [
      "dbt.constants.DBT_PROJECT_FILE_NAME",
      "dbt.contracts.project.Project",
      "dbt.config.selectors.SelectorDict",
      "dbt.contracts.project.PackageConfig",
      "dbt.exceptions.DbtProjectError",
      "dbt.constants.PACKAGES_FILE_NAME",
      "dbt.config.project.RenderComponents",
      "dbt_common.dataclass_schema.ValidationError",
      "dbt.contracts.project.ProjectPackageMetadata",
      "dbt.deprecations",
      "dbt.flags.get_flags",
      "cfg.dbt_cloud",
      "dbt.exceptions.ProjectContractError"
    ],
    "dbt.config.project.VarProvider": [
      "dbt.utils.MultiDict"
    ],
    "dbt.config.project.Project": [
      "dbt.exceptions.DbtRuntimeError",
      "dbt.contracts.project.Project",
      "dbt.graph.SelectionSpec",
      "dbt.utils.md5",
      "dbt_common.semver.VersionSpecifier",
      "dbt.contracts.project.PackageConfig",
      "dbt_common.dataclass_schema.ValidationError",
      "self.dbt_version",
      "dbt.exceptions.ProjectContractBrokenError",
      "self.dbt_cloud",
      "dbt.contracts.project.SemverString",
      "dbt.adapters.contracts.connection.QueryComment"
    ],
    "dbt.plugins.manifest.PluginNodes": [
      "dbt.contracts.graph.node_args.ModelNodeArgs"
    ],
    "dbt.plugins.manager.dbtPlugin": [
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.contracts.graph.manifest.Manifest",
      "dbt.plugins.contracts.PluginArtifacts",
      "dbt.plugins.manifest.PluginNodes"
    ],
    "dbt.plugins.manager.PluginManager": [
      "discovered_dbt_modules.items",
      "dbt.tracking",
      "dbt.plugins.manifest.PluginNodes",
      "dbt.contracts.graph.manifest.Manifest",
      "dbt_common.tests.test_caching_enabled",
      "dbt.tracking.track_plugin_get_nodes",
      "dbt.plugins.contracts.PluginArtifacts"
    ],
    "dbt.contracts.files.ParseFileType": [
      "dbt_common.dataclass_schema.StrEnum"
    ],
    "dbt.contracts.files.FilePath": [
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt.constants.MAXIMUM_SEED_SIZE"
    ],
    "dbt.contracts.files.RemoteFile": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.contracts.files.BaseSourceFile": [
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt.artifacts.resources.base.FileHash"
    ],
    "dbt.contracts.files.SourceFile": [
      "dbt.contracts.files.BaseSourceFile",
      "dbt.artifacts.resources.base.FileHash"
    ],
    "dbt.contracts.files.SchemaSourceFile": [
      "dbt.contracts.files.BaseSourceFile"
    ],
    "dbt.contracts.files.FixtureSourceFile": [
      "dbt.contracts.files.BaseSourceFile"
    ],
    "dbt.contracts.util.Identifier": [
      "dbt_common.dataclass_schema.ValidatedStringMixin",
      "dbt_common.dataclass_schema.ValidationError"
    ],
    "dbt.contracts.selection.SelectorDefinition": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.contracts.selection.SelectorFile": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.contracts.sql.RemoteCompileResultMixin": [
      "dbt.contracts.graph.nodes.ResultNode",
      "dbt.artifacts.schemas.results.TimingInfo",
      "dbt.artifacts.schemas.base.VersionedSchema"
    ],
    "dbt.contracts.sql.RemoteCompileResult": [
      "dbt.artifacts.schemas.base.schema_version",
      "dbt.contracts.sql.RemoteCompileResultMixin"
    ],
    "dbt.contracts.sql.RemoteExecutionResult": [
      "dbt.artifacts.schemas.base.schema_version",
      "dbt.artifacts.schemas.run.RunResult",
      "dbt.artifacts.schemas.results.ExecutionResult",
      "dbt_common.events.functions.fire_event",
      "dbt.artifacts.schemas.run.RunResultsArtifact",
      "dbt.artifacts.schemas.run.RunExecutionResult",
      "dbt.events.types.ArtifactWritten"
    ],
    "dbt.contracts.sql.ResultTable": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.contracts.sql.RemoteRunResult": [
      "dbt.artifacts.schemas.base.schema_version",
      "dbt.contracts.sql.RemoteCompileResultMixin"
    ],
    "dbt.contracts.project.SemverString": [
      "dbt.contracts.project.str"
    ],
    "dbt.contracts.project.Quoting": [
      "dbt_common.contracts.util.Mergeable",
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.contracts.project.Package": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.contracts.project.LocalPackage": [
      "dbt.contracts.project.Package"
    ],
    "dbt.contracts.project.TarballPackage": [
      "dbt.contracts.project.Package"
    ],
    "dbt.contracts.project.GitPackage": [
      "dbt.contracts.project.Package"
    ],
    "dbt.contracts.project.PrivatePackage": [
      "dbt.contracts.project.Package"
    ],
    "dbt.contracts.project.RegistryPackage": [
      "dbt.contracts.project.Package"
    ],
    "dbt.contracts.project.PackageConfig": [
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt_common.dataclass_schema.ValidationError"
    ],
    "dbt.contracts.project.Downloads": [
      "dbt_common.dataclass_schema.ExtensibleDbtClassMixin"
    ],
    "dbt.contracts.project.RegistryPackageMetadata": [
      "dbt_common.dataclass_schema.ExtensibleDbtClassMixin",
      "dbt.contracts.project.ProjectPackageMetadata"
    ],
    "dbt.contracts.project.Project": [
      "dbt.contracts.util.list_str",
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt_common.dataclass_schema.dbtMashConfig",
      "dbt.contracts.util.Identifier",
      "dbt_common.dataclass_schema.ValidationError",
      "dbt.adapters.contracts.connection.QueryComment",
      "dbt_common.helper_types.NoValue"
    ],
    "dbt.contracts.project.Config": [
      "dbt_common.dataclass_schema.dbtMashConfig"
    ],
    "dbt.contracts.project.ProjectFlags": [
      "dbt_common.dataclass_schema.ExtensibleDbtClassMixin"
    ],
    "dbt.contracts.project.ProfileConfig": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.contracts.project.ConfiguredQuoting": [
      "dbt.contracts.project.Quoting"
    ],
    "dbt.contracts.project.Configuration": [
      "dbt.contracts.project.Project",
      "dbt.contracts.project.ProfileConfig"
    ],
    "dbt.contracts.project.ProjectList": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.contracts.state.PreviousState": [
      "dbt_common.events.functions.fire_event",
      "dbt.artifacts.schemas.run.RunResultsArtifact",
      "dbt.events.types.WarnStateTargetEqual",
      "dbt.constants.RUN_RESULTS_FILE_NAME",
      "dbt.contracts.graph.manifest.Manifest",
      "dbt.artifacts.schemas.freshness.FreshnessExecutionResultArtifact",
      "dbt.artifacts.schemas.manifest.WritableManifest",
      "dbt.artifacts.exceptions.IncompatibleSchemaError"
    ],
    "dbt.graph.queue.GraphQueue": [
      "dbt.contracts.graph.nodes.Exposure",
      "dbt.node_types.NodeType",
      "dbt.contracts.graph.nodes.GraphMemberNode",
      "dbt.contracts.graph.nodes.Metric",
      "dbt.contracts.graph.manifest.Manifest",
      "dbt.contracts.graph.nodes.SourceDefinition"
    ],
    "dbt.graph.graph.Graph": [
      "dbt_common.exceptions.DbtInternalError"
    ],
    "dbt.graph.selector.NodeSelector": [
      "dbt.exceptions.DbtInternalError",
      "dbt.exceptions.InvalidSelectorError",
      "dbt.events.types.NoNodesForSelectionCriteria",
      "dbt_common.events.functions.warn_or_error",
      "dbt_common.events.functions.fire_event",
      "dbt.contracts.graph.nodes.GraphMemberNode",
      "dbt.contracts.state.PreviousState",
      "dbt.contracts.graph.manifest.Manifest",
      "dbt.events.types.SelectorReportInvalidSelector",
      "dbt.selected_resources"
    ],
    "dbt.graph.selector.ResourceTypeSelector": [
      "dbt.contracts.state.PreviousState",
      "dbt.node_types.NodeType",
      "dbt.graph.selector.NodeSelector",
      "dbt.contracts.graph.manifest.Manifest"
    ],
    "dbt.graph.selector_methods.MethodName": [
      "dbt.contracts.graph.nodes.SemanticModel",
      "dbt.contracts.graph.nodes.Exposure",
      "dbt.contracts.graph.nodes.Metric",
      "dbt.contracts.graph.nodes.SavedQuery",
      "dbt_common.dataclass_schema.StrEnum"
    ],
    "dbt.graph.selector_methods.SelectorMethod": [
      "dbt.contracts.graph.nodes.SemanticModel",
      "dbt.contracts.graph.nodes.Exposure",
      "dbt.contracts.graph.nodes.Metric",
      "dbt.contracts.state.PreviousState",
      "dbt.contracts.graph.nodes.ResultNode",
      "dbt.contracts.graph.nodes.UnitTestDefinition",
      "dbt.contracts.graph.manifest.Manifest",
      "dbt.contracts.graph.nodes.SavedQuery",
      "dbt.contracts.graph.nodes.ManifestNode",
      "dbt.contracts.graph.nodes.SourceDefinition"
    ],
    "dbt.graph.selector_methods.QualifiedNameSelectorMethod": [
      "dbt.graph.selector_methods.SelectorMethod"
    ],
    "dbt.graph.selector_methods.TagSelectorMethod": [
      "dbt.graph.selector_methods.SelectorMethod"
    ],
    "dbt.graph.selector_methods.GroupSelectorMethod": [
      "dbt.graph.selector_methods.SelectorMethod"
    ],
    "dbt.graph.selector_methods.AccessSelectorMethod": [
      "dbt.graph.selector_methods.SelectorMethod",
      "dbt.contracts.graph.nodes.ModelNode"
    ],
    "dbt.graph.selector_methods.SourceSelectorMethod": [
      "dbt.graph.selector_methods.SelectorMethod",
      "dbt_common.exceptions.DbtRuntimeError"
    ],
    "dbt.graph.selector_methods.ExposureSelectorMethod": [
      "dbt.graph.selector_methods.SelectorMethod",
      "dbt_common.exceptions.DbtRuntimeError"
    ],
    "dbt.graph.selector_methods.MetricSelectorMethod": [
      "dbt.graph.selector_methods.SelectorMethod",
      "dbt_common.exceptions.DbtRuntimeError"
    ],
    "dbt.graph.selector_methods.SemanticModelSelectorMethod": [
      "dbt.graph.selector_methods.SelectorMethod",
      "dbt_common.exceptions.DbtRuntimeError"
    ],
    "dbt.graph.selector_methods.SavedQuerySelectorMethod": [
      "dbt.graph.selector_methods.SelectorMethod",
      "dbt_common.exceptions.DbtRuntimeError"
    ],
    "dbt.graph.selector_methods.UnitTestSelectorMethod": [
      "dbt.graph.selector_methods.SelectorMethod",
      "dbt_common.exceptions.DbtRuntimeError"
    ],
    "dbt.graph.selector_methods.PathSelectorMethod": [
      "dbt.graph.selector_methods.SelectorMethod",
      "dbt_common.events.contextvars.get_project_root"
    ],
    "dbt.graph.selector_methods.FileSelectorMethod": [
      "dbt.graph.selector_methods.SelectorMethod"
    ],
    "dbt.graph.selector_methods.PackageSelectorMethod": [
      "dbt.graph.selector_methods.SelectorMethod"
    ],
    "dbt.graph.selector_methods.CaseInsensitive": [
      "dbt.graph.selector_methods.str"
    ],
    "dbt.graph.selector_methods.ConfigSelectorMethod": [
      "dbt.graph.selector_methods.SelectorMethod"
    ],
    "dbt.graph.selector_methods.ResourceTypeSelectorMethod": [
      "dbt.graph.selector_methods.SelectorMethod",
      "dbt.node_types.NodeType",
      "dbt_common.exceptions.DbtRuntimeError"
    ],
    "dbt.graph.selector_methods.TestNameSelectorMethod": [
      "dbt.graph.selector_methods.SelectorMethod",
      "dbt.node_types.NodeType"
    ],
    "dbt.graph.selector_methods.TestTypeSelectorMethod": [
      "dbt.graph.selector_methods.SelectorMethod",
      "dbt.contracts.graph.nodes.SingularTestNode",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.contracts.graph.nodes.UnitTestDefinition",
      "dbt.contracts.graph.nodes.GenericTestNode"
    ],
    "dbt.graph.selector_methods.StateSelectorMethod": [
      "dbt.contracts.graph.nodes.ModelNode",
      "dbt.contracts.graph.nodes.SemanticModel",
      "dbt.contracts.graph.nodes.Exposure",
      "dbt.contracts.graph.nodes.Metric",
      "dbt.graph.selector_methods.SelectorMethod",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.contracts.graph.nodes.UnitTestDefinition",
      "dbt.contracts.graph.nodes.SavedQuery",
      "dbt.contracts.graph.manifest.Manifest",
      "dbt_common.exceptions.DbtInternalError",
      "dbt.contracts.graph.nodes.SourceDefinition"
    ],
    "dbt.graph.selector_methods.ResultSelectorMethod": [
      "dbt.graph.selector_methods.SelectorMethod",
      "dbt_common.exceptions.DbtInternalError"
    ],
    "dbt.graph.selector_methods.SourceStatusSelectorMethod": [
      "dbt.graph.selector_methods.SelectorMethod",
      "dbt_common.exceptions.DbtInternalError"
    ],
    "dbt.graph.selector_methods.VersionSelectorMethod": [
      "dbt.graph.selector_methods.SelectorMethod",
      "dbt.contracts.graph.nodes.ModelNode",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.contracts.graph.unparsed.UnparsedVersion"
    ],
    "dbt.graph.selector_methods.MethodManager": [
      "dbt.contracts.state.PreviousState",
      "dbt.contracts.graph.manifest.Manifest",
      "dbt_common.exceptions.DbtInternalError"
    ],
    "dbt.graph.selector_spec.IndirectSelection": [
      "dbt_common.dataclass_schema.StrEnum"
    ],
    "dbt.graph.selector_spec.SelectionCriteria": [
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.exceptions.InvalidSelectorError",
      "dbt.flags.get_flags"
    ],
    "dbt.graph.selector_spec.BaseSelectionGroup": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.graph.selector_spec.SelectionIntersection": [
      "dbt.graph.selector_spec.BaseSelectionGroup"
    ],
    "dbt.graph.selector_spec.SelectionDifference": [
      "dbt.graph.selector_spec.BaseSelectionGroup"
    ],
    "dbt.graph.selector_spec.SelectionUnion": [
      "dbt.graph.selector_spec.BaseSelectionGroup"
    ],
    "dbt.tests.util.TestProcessingException": [
      "dbt.tests.util.Exception"
    ],
    "dbt.utils.artifact_upload.ArtifactUploadConfig": [
      "dbt._pydantic_shim.BaseSettings"
    ],
    "dbt.utils.utils.ExitCodes": [
      "dbt.utils.utils.int"
    ],
    "dbt.utils.utils.Translator": [
      "dbt_common.exceptions.RecursionError",
      "dbt.exceptions.DuplicateAliasError"
    ],
    "dbt.cli.options.MultiOption": [
      "dbt.cli.option_types.ChoiceTuple"
    ],
    "dbt.cli.flags.Flags": [
      "dbt.config.project.read_project_flags",
      "dbt.cli.resolvers.default_project_dir",
      "dbt_common.events.functions",
      "dbt.contracts.project.ProjectFlags",
      "dbt.cli.exceptions.DbtUsageException",
      "dbt.cli.types.Command",
      "dbt.cli.resolvers.default_log_path",
      "dbt.deprecations.renamed_env_var",
      "dbt.deprecations.fire_buffered_deprecations",
      "dbt_common.clients.jinja",
      "dbt.deprecations.warn",
      "dbt_common.ui"
    ],
    "dbt.cli.option_types.YAML": [
      "dbt.exceptions.OptionNotYamlDictError",
      "dbt_common.exceptions.DbtValidationError",
      "dbt.config.utils.parse_cli_yaml_string",
      "dbt.exceptions.ValidationError"
    ],
    "dbt.cli.option_types.WarnErrorOptionsType": [
      "dbt_common.helper_types.WarnErrorOptionsV2",
      "dbt.config.utils.normalize_warn_error_options",
      "dbt.cli.option_types.YAML",
      "dbt.events.ALL_EVENT_NAMES"
    ],
    "dbt.cli.option_types.SampleType": [
      "dbt.config.utils.parse_cli_yaml_string",
      "dbt.event_time.sample_window.SampleWindow"
    ],
    "dbt.cli.types.Command": [
      "dbt_common.exceptions.DbtInternalError"
    ],
    "dbt.cli.exceptions.DbtUsageException": [
      "dbt.cli.exceptions.Exception"
    ],
    "dbt.cli.exceptions.DbtInternalException": [
      "dbt.cli.exceptions.Exception"
    ],
    "dbt.cli.exceptions.CliException": [
      "dbt.utils.ExitCodes"
    ],
    "dbt.cli.exceptions.ResultExit": [
      "dbt.artifacts.schemas.catalog.CatalogArtifact",
      "dbt.cli.exceptions.CliException",
      "dbt.contracts.results.RunExecutionResult",
      "dbt.utils.ExitCodes",
      "dbt.contracts.graph.manifest.Manifest"
    ],
    "dbt.cli.exceptions.ExceptionExit": [
      "dbt.utils.ExitCodes",
      "dbt.cli.exceptions.CliException"
    ],
    "dbt.cli.main.dbtRunnerResult": [
      "dbt.artifacts.schemas.run.RunExecutionResult",
      "dbt.contracts.graph.manifest.Manifest",
      "dbt.artifacts.schemas.catalog.CatalogArtifact"
    ],
    "dbt.cli.main.dbtRunner": [
      "dbt.cli.requires",
      "dbt_ctx.params",
      "dbt.cli.exceptions.DbtUsageException",
      "dbt_ctx.set_parameter_source",
      "dbt_ctx.obj",
      "dbt_common.events.base_types.EventMsg",
      "dbt.contracts.graph.manifest.Manifest",
      "dbt.cli.exceptions.DbtInternalException"
    ],
    "dbt.parser.snapshots.SnapshotParser": [
      "dbt.parser.search.BlockContents",
      "dbt.node_types.NodeType",
      "dbt.utils.split_path",
      "dbt.parser.search.BlockSearcher",
      "dbt.parser.search.FileBlock",
      "dbt.contracts.graph.nodes.SnapshotNode",
      "dbt.parser.base.SQLParser"
    ],
    "dbt.parser.hooks.HookBlock": [
      "dbt.node_types.RunHookType",
      "dbt.parser.search.FileBlock"
    ],
    "dbt.parser.hooks.HookSearcher": [
      "dbt.node_types.RunHookType",
      "dbt_common.exceptions.DbtInternalError"
    ],
    "dbt.parser.hooks.HookParser": [
      "dbt.contracts.graph.nodes.HookNode",
      "dbt.contracts.files.FilePath",
      "dbt.node_types.NodeType",
      "dbt.parser.base.SimpleParser",
      "dbt.context.context_config.ContextConfig",
      "dbt.utils.get_pseudo_hook_path",
      "dbt.parser.search.FileBlock",
      "dbt.node_types.RunHookType"
    ],
    "dbt.parser.schema_yaml_readers.ExposureParser": [
      "dbt.exceptions.YamlParseDictError",
      "dbt.artifacts.resources.ExposureConfig",
      "dbt.parser.schemas.SchemaParser",
      "dbt.parser.schemas.YamlReader",
      "dbt.contracts.graph.nodes.Exposure",
      "dbt.node_types.NodeType",
      "dbt.contracts.graph.unparsed.UnparsedExposure",
      "dbt.clients.jinja.get_rendered",
      "dbt.context.context_config.BaseContextConfigGenerator",
      "dbt.context.context_config.ContextConfigGenerator",
      "dbt.contracts.files.SchemaSourceFile",
      "dbt_common.dataclass_schema.ValidationError",
      "dbt.exceptions.JSONValidationError",
      "dbt.parser.common.YamlBlock",
      "dbt.context.context_config.UnrenderedConfigGenerator",
      "dbt_common.exceptions.DbtInternalError",
      "dbt.context.providers.generate_parse_exposure"
    ],
    "dbt.parser.schema_yaml_readers.MetricParser": [
      "dbt.exceptions.YamlParseDictError",
      "dbt_semantic_interfaces.type_enums.TimeGranularity",
      "dbt.artifacts.resources.MetricInputMeasure",
      "dbt.context.context_config.ContextConfigGenerator",
      "dbt_semantic_interfaces.type_enums.MetricType",
      "dbt.artifacts.resources.MetricTypeParams",
      "dbt.artifacts.resources.MetricTimeWindow",
      "dbt.artifacts.resources.MetricInput",
      "dbt.contracts.graph.unparsed.UnparsedConversionTypeParams",
      "dbt_semantic_interfaces.type_enums.ConversionCalculationType",
      "dbt.context.context_config.BaseContextConfigGenerator",
      "dbt.exceptions.JSONValidationError",
      "dbt.artifacts.resources.MetricConfig",
      "dbt.contracts.graph.nodes.Metric",
      "dbt.contracts.graph.unparsed.UnparsedCumulativeTypeParams",
      "dbt.artifacts.resources.CumulativeTypeParams",
      "dbt_common.exceptions.DbtInternalError",
      "dbt.parser.schemas.SchemaParser",
      "dbt.contracts.graph.unparsed.UnparsedMetricInput",
      "dbt.contracts.graph.unparsed.UnparsedMetricInputMeasure",
      "dbt.parser.schemas.YamlReader",
      "dbt.node_types.NodeType",
      "dbt_common.dataclass_schema.ValidationError",
      "dbt.contracts.files.SchemaSourceFile",
      "dbt_semantic_interfaces.type_enums.PeriodAggregation",
      "dbt.parser.common.YamlBlock",
      "dbt.context.context_config.UnrenderedConfigGenerator",
      "dbt.contracts.graph.unparsed.UnparsedMetric",
      "dbt.artifacts.resources.ConversionTypeParams"
    ],
    "dbt.parser.schema_yaml_readers.GroupParser": [
      "dbt.exceptions.YamlParseDictError",
      "dbt.contracts.graph.nodes.Group",
      "dbt.parser.schemas.SchemaParser",
      "dbt.parser.schemas.YamlReader",
      "dbt.node_types.NodeType",
      "dbt.context.context_config.ContextConfigGenerator",
      "dbt.context.context_config.BaseContextConfigGenerator",
      "dbt_common.dataclass_schema.ValidationError",
      "dbt.contracts.files.SchemaSourceFile",
      "dbt.contracts.graph.unparsed.UnparsedGroup",
      "dbt.exceptions.JSONValidationError",
      "dbt.parser.common.YamlBlock",
      "dbt.context.context_config.UnrenderedConfigGenerator"
    ],
    "dbt.parser.schema_yaml_readers.SemanticModelParser": [
      "dbt.exceptions.YamlParseDictError",
      "dbt_semantic_interfaces.type_enums.TimeGranularity",
      "dbt.context.context_config.ContextConfigGenerator",
      "dbt.artifacts.resources.NonAdditiveDimension",
      "dbt.contracts.graph.unparsed.UnparsedMetricTypeParams",
      "dbt.contracts.graph.unparsed.UnparsedDimensionTypeParams",
      "dbt_semantic_interfaces.type_enums.AggregationType",
      "dbt.contracts.graph.unparsed.UnparsedDimension",
      "dbt.contracts.graph.unparsed.UnparsedEntity",
      "dbt.artifacts.resources.v1.semantic_model.SemanticLayerElementConfig",
      "dbt_semantic_interfaces.type_enums.EntityType",
      "dbt.artifacts.resources.DimensionTypeParams",
      "dbt.artifacts.resources.Measure",
      "dbt.clients.jinja.get_rendered",
      "dbt.context.context_config.BaseContextConfigGenerator",
      "dbt.artifacts.resources.Dimension",
      "dbt_semantic_interfaces.type_enums.DimensionType",
      "dbt.exceptions.JSONValidationError",
      "dbt.parser.schemas.SchemaParser",
      "dbt.context.providers.generate_parse_semantic_models",
      "dbt.contracts.graph.nodes.SemanticModel",
      "dbt.artifacts.resources.Entity",
      "dbt.contracts.graph.unparsed.UnparsedMeasure",
      "dbt.parser.schemas.YamlReader",
      "dbt.node_types.NodeType",
      "dbt_common.dataclass_schema.ValidationError",
      "dbt.contracts.files.SchemaSourceFile",
      "dbt.parser.common.YamlBlock",
      "dbt.contracts.graph.unparsed.UnparsedSemanticModel",
      "dbt.context.context_config.UnrenderedConfigGenerator",
      "dbt.contracts.graph.unparsed.UnparsedMetric",
      "dbt.contracts.graph.unparsed.UnparsedNonAdditiveDimension"
    ],
    "dbt.parser.schema_yaml_readers.SavedQueryParser": [
      "dbt.exceptions.YamlParseDictError",
      "dbt.context.context_config.ContextConfigGenerator",
      "dbt.artifacts.resources.QueryParams",
      "dbt.artifacts.resources.SavedQueryConfig",
      "dbt.artifacts.resources.Export",
      "dbt.context.context_config.BaseContextConfigGenerator",
      "dbt.exceptions.JSONValidationError",
      "dbt.artifacts.resources.ExportConfig",
      "dbt.contracts.graph.unparsed.UnparsedExport",
      "dbt.parser.schemas.SchemaParser",
      "dbt.contracts.graph.unparsed.UnparsedSavedQuery",
      "dbt.parser.schemas.YamlReader",
      "dbt.node_types.NodeType",
      "dbt.contracts.graph.unparsed.UnparsedQueryParams",
      "dbt_common.dataclass_schema.ValidationError",
      "dbt.contracts.files.SchemaSourceFile",
      "dbt.parser.common.YamlBlock",
      "dbt.context.context_config.UnrenderedConfigGenerator",
      "dbt.contracts.graph.nodes.SavedQuery",
      "dbt.parser.schemas.ParseResult"
    ],
    "dbt.parser.analysis.AnalysisParser": [
      "dbt.node_types.NodeType",
      "dbt.parser.base.SimpleSQLParser",
      "dbt.parser.search.FileBlock",
      "dbt.contracts.graph.nodes.AnalysisNode"
    ],
    "dbt.parser.models.PythonValidationVisitor": [
      "self.dbt_errors.append",
      "dbt.exceptions.ParsingError",
      "self.dbt_errors"
    ],
    "dbt.parser.models.PythonParseVisitor": [
      "self.dbt_function_calls.append",
      "dbt.exceptions.PythonLiteralEvalError",
      "self.dbt_function_calls",
      "self.dbt_node"
    ],
    "dbt.parser.models.ModelParser": [
      "dbt_validator.visit",
      "dbt_parser.visit",
      "dbt.contracts.graph.nodes.ModelNode",
      "dbt.exceptions.ModelConfigError",
      "dbt.artifacts.resources.RefArgs",
      "dbt.node_types.ModelLanguage",
      "dbt_validator.check_error",
      "dbt_extractor.ExtractionError",
      "dbt_extractor.py_extract_from_source",
      "dbt.context.context_config.ContextConfig",
      "dbt.tracking",
      "dbt.parser.search.FileBlock",
      "dbt.flags.get_flags",
      "dbt.utils",
      "dbt.node_types.NodeType",
      "dbt.parser.base.SimpleSQLParser",
      "dbt_common.dataclass_schema.ValidationError",
      "dbt.exceptions.PythonParsingError",
      "dbt_parser.dbt_function_calls",
      "dbt.exceptions.ParsingError"
    ],
    "dbt.parser.manifest.ReparseReason": [
      "dbt_common.dataclass_schema.StrEnum"
    ],
    "dbt.parser.manifest.ParserInfo": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.parser.manifest.ProjectLoaderInfo": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.parser.manifest.ManifestLoaderInfo": [
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt.artifacts.schemas.base.Writable"
    ],
    "dbt.parser.manifest.ManifestLoader": [
      "dbt.contracts.graph.nodes.ModelNode",
      "dbt.contracts.graph.manifest.ManifestStateCheck",
      "dbt.events.types.PartialParsingSkipParsing",
      "dbt_common.events.functions.get_invocation_id",
      "dbt.parser.seeds.SeedParser",
      "dbt.events.types.DeprecatedReference",
      "manifest.metadata.dbt_version",
      "dbt.events.types.InvalidConcurrentBatchesConfig",
      "dbt.events.types.SpacesInResourceNameDeprecation",
      "dbt.parser.sources.SourcePatcher",
      "dbt.parser.docs.DocumentationParser",
      "dbt.parser.search.FileBlock",
      "dbt.artifacts.resources.types.BatchSize",
      "dbt.config.Project",
      "dbt.parser.schemas.SchemaParser",
      "dbt.contracts.graph.nodes.SemanticModel",
      "dbt.events.types.DeprecatedModel",
      "dbt.parser.fixtures.FixtureParser",
      "dbt_common.events.functions.fire_event",
      "dbt_common.clients.system.write_file",
      "dbt.events.types.PartialParsingError",
      "dbt.contracts.graph.nodes.SavedQuery",
      "dbt.tracking.active_user",
      "dbt.contracts.graph.nodes.SemanticManifestNode",
      "dbt.parser.partial.PartialParsing",
      "dbt.artifacts.resources.FileHash",
      "dbt.parser.models.ModelParser",
      "dbt.contracts.graph.manifest.MacroManifest",
      "dbt.contracts.graph.semantic_manifest.SemanticManifest",
      "dbt.adapters.factory.get_adapter",
      "dbt_common.constants.SECRET_ENV_PREFIX",
      "dbt.adapters.factory.get_adapter_package_names",
      "dbt.parser.snapshots.SnapshotParser",
      "dbt.config.RuntimeConfig",
      "dbt_common.clients.system.read_json",
      "dbt.contracts.graph.nodes.GenericTestNode",
      "dbt.parser.read_files.ReadFiles",
      "dbt.events.types.PartialParsingErrorProcessingFile",
      "dbt.parser.read_files.ReadFilesFromDiff",
      "dbt.adapters.capability.Capability",
      "dbt.context.docs.generate_runtime_docs_context",
      "dbt.contracts.graph.nodes.ManifestNode",
      "dbt.context.query_header.generate_query_header_context",
      "dbt_common.exceptions.base.DbtValidationError",
      "dbt.parser.analysis.AnalysisParser",
      "dbt.events.types.MicrobatchModelNoEventTimeInputs",
      "dbt.deprecations.warn",
      "dbt.exceptions.ParsingError",
      "dbt.parser.read_files.ReadFilesFromFileSystem",
      "dbt.events.types.UnableToPartialParse",
      "dbt.contracts.files.ParseFileType",
      "dbt.parser.generic_test.GenericTestParser",
      "dbt_common.clients.system.make_directory",
      "dbt_common.events.types.Note",
      "dbt.parser.read_files.load_source_file",
      "dbt.version.__version__",
      "dbt.clients.jinja.MacroStack",
      "dbt.artifacts.resources.NodeRelation",
      "dbt.events.types.ParsedFileLoadFailed",
      "dbt.contracts.graph.nodes.Metric",
      "dbt.flags.get_flags",
      "dbt.tracking.track_partial_parser",
      "dbt.exceptions.InvalidAccessTypeError",
      "dbt.parser.singular_test.SingularTestParser",
      "dbt_common.events.functions.warn_or_error",
      "dbt.parser.unit_tests.process_models_for_unit_test",
      "dbt.context.macro_resolver.MacroResolver",
      "self.manifest.metadata.dbt_version",
      "dbt.node_types.AccessType",
      "dbt.events.types.ParsePerfInfoPath",
      "dbt.contracts.graph.nodes.SourceDefinition",
      "dbt.context.configured.generate_macro_context",
      "dbt.events.types.UpcomingReferenceDeprecation",
      "dbt.plugins",
      "dbt.parser.hooks.HookParser",
      "dbt.constants.PARTIAL_PARSE_FILE_NAME",
      "dbt.parser.base.Parser",
      "dbt.clients.jinja_static.statically_extract_macro_calls",
      "dbt.utils.JSONEncoder",
      "dbt.parser.partial.special_override_macros",
      "dbt.parser.macros.MacroParser",
      "dbt.context.providers.ParseProvider",
      "dbt.parser.read_files.FileDiff",
      "dbt.context.macro_resolver.TestMacroNamespace",
      "dbt.events.types.PartialParsingNotEnabled",
      "dbt.tracking.track_project_load",
      "dbt.exceptions.scrub_secrets",
      "dbt.deprecations",
      "dbt.tracking",
      "dbt_common.clients.system.path_exists",
      "dbt_common.events.base_types.EventLevel",
      "dbt.contracts.graph.manifest.ParsingInfo",
      "dbt.utils",
      "dbt.node_types.NodeType",
      "dbt.exceptions",
      "dbt.contracts.files.SchemaSourceFile",
      "dbt.events.types.StateCheckVarsHash",
      "dbt.contracts.graph.manifest.Manifest"
    ],
    "dbt.parser.read_files.InputFile": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.parser.read_files.FileDiff": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.parser.read_files.ReadFiles": [
      "dbt.contracts.files.AnySourceFile"
    ],
    "dbt.parser.read_files.ReadFilesFromFileSystem": [
      "dbt.contracts.files.AnySourceFile",
      "dbt.config.Project"
    ],
    "dbt.parser.read_files.ReadFilesFromDiff": [
      "dbt.contracts.files.FileHash",
      "dbt.events.types.InputFileDiffError",
      "dbt.contracts.files.FilePath",
      "dbt.contracts.files.ParseFileType",
      "dbt_common.events.functions.fire_event",
      "dbt.contracts.files.SchemaSourceFile",
      "dbt.contracts.files.SourceFile",
      "dbt.parser.schemas.yaml_from_file",
      "dbt.contracts.files.AnySourceFile",
      "dbt.config.Project"
    ],
    "dbt.parser.schema_renderer.SchemaYamlRenderer": [
      "dbt.config.renderer.Keypath",
      "dbt.config.renderer.BaseRenderer"
    ],
    "dbt.parser.docs.DocumentationParser": [
      "dbt.parser.search.BlockContents",
      "dbt.clients.jinja.get_rendered",
      "dbt.node_types.NodeType",
      "dbt.parser.search.BlockSearcher",
      "dbt.contracts.graph.nodes.Documentation",
      "dbt.contracts.files.SourceFile",
      "dbt.parser.search.FileBlock",
      "dbt.parser.base.Parser"
    ],
    "dbt.parser.generic_test.GenericTestParser": [
      "dbt.contracts.graph.nodes.Macro",
      "dbt.node_types.NodeType",
      "dbt.contracts.graph.nodes.GenericTestNode",
      "dbt.contracts.graph.unparsed.UnparsedMacro",
      "dbt.parser.base.BaseParser",
      "dbt.contracts.files.SourceFile",
      "dbt.parser.search.FileBlock",
      "dbt_common.clients.jinja",
      "dbt.exceptions.ParsingError",
      "dbt_common.utils.MACRO_PREFIX"
    ],
    "dbt.parser.sources.SourcePatcher": [
      "dbt.context.context_config.ContextConfigGenerator",
      "dbt.contracts.graph.unparsed.UnparsedSourceDefinition",
      "dbt.contracts.graph.nodes.UnpatchedSourceDefinition",
      "dbt.events.types.UnusedTables",
      "dbt.events.types.ValidationWarning",
      "dbt.parser.common.ParserRef",
      "dbt.parser.schema_generic_tests.SchemaGenericTestParser",
      "dbt.adapters.factory.get_adapter",
      "dbt.contracts.graph.unparsed.SourceTablePatch",
      "dbt.config.RuntimeConfig",
      "dbt.contracts.graph.manifest.SourceKey",
      "dbt.contracts.graph.nodes.GenericTestNode",
      "dbt.contracts.graph.unparsed.UnparsedSourceTableDefinition",
      "dbt.context.context_config.BaseContextConfigGenerator",
      "dbt.adapters.capability.Capability",
      "dbt.contracts.graph.unparsed.SourcePatch",
      "dbt_common.exceptions.DbtInternalError",
      "dbt.node_types.NodeType",
      "dbt_common.events.functions.warn_or_error",
      "dbt_common.events.functions.fire_event",
      "dbt.events.types.FreshnessConfigProblem",
      "dbt.artifacts.resources.SourceConfig",
      "dbt.artifacts.resources.FreshnessThreshold",
      "dbt.contracts.graph.unparsed.UnparsedColumn",
      "dbt.context.context_config.UnrenderedConfigGenerator",
      "dbt.contracts.graph.manifest.Manifest",
      "dbt.exceptions.ParsingError",
      "dbt.contracts.graph.nodes.SourceDefinition"
    ],
    "dbt.parser.schema_generic_tests.SchemaGenericTestParser": [
      "dbt.utils.get_pseudo_test_path",
      "dbt.contracts.graph.nodes.UnpatchedSourceDefinition",
      "dbt.exceptions.TestConfigError",
      "dbt.adapters.factory.get_adapter",
      "dbt.context.configured.SchemaYamlVars",
      "dbt.contracts.files.FileHash",
      "dbt.utils.md5",
      "dbt.parser.common.GenericTestBlock",
      "dbt.adapters.factory.get_adapter_package_names",
      "dbt.artifacts.resources.NodeVersion",
      "dbt.exceptions.CompilationError",
      "dbt.contracts.graph.nodes.GraphMemberNode",
      "dbt.parser.common.Testable",
      "dbt.artifacts.resources.RefArgs",
      "dbt.contracts.graph.nodes.GenericTestNode",
      "dbt.clients.jinja.get_rendered",
      "dbt.parser.generic_test_builders.TestBuilder",
      "dbt.context.context_config.ContextConfig",
      "dbt.parser.search.FileBlock",
      "dbt.exceptions.SchemaConfigError",
      "dbt.contracts.graph.nodes.ManifestNode",
      "dbt.context.configured.generate_schema_yml_context",
      "dbt.clients.jinja.add_rendered_test_kwargs",
      "dbt.parser.common.TestBlock",
      "dbt.node_types.NodeType",
      "dbt_common.dataclass_schema.ValidationError",
      "dbt.parser.base.SimpleParser",
      "dbt.contracts.graph.unparsed.UnparsedNodeUpdate",
      "dbt.parser.common.VersionedTestBlock",
      "dbt.contracts.graph.unparsed.UnparsedColumn",
      "dbt.context.macro_resolver.MacroResolver",
      "dbt.parser.common.trimmed",
      "dbt.context.providers.generate_test_context",
      "dbt.parser.common.TestDef",
      "dbt.exceptions.ParsingError"
    ],
    "dbt.parser.schemas.SchemaParser": [
      "dbt.contracts.graph.nodes.ModelNode",
      "dbt.parser.schema_yaml_readers.SavedQueryParser",
      "dbt.parser.schema_yaml_readers.ExposureParser",
      "dbt.parser.schema_yaml_readers.SemanticModelParser",
      "dbt.parser.schema_generic_tests.SchemaGenericTestParser",
      "dbt.context.configured.SchemaYamlVars",
      "dbt.parser.schema_yaml_readers.GroupParser",
      "dbt.artifacts.resources.RefArgs",
      "dbt.config.RuntimeConfig",
      "dbt_common.events.types.Note",
      "dbt.clients.jinja_static.statically_parse_ref_or_source",
      "dbt.parser.schema_yaml_readers.MetricParser",
      "dbt.parser.search.FileBlock",
      "dbt.context.configured.generate_schema_yml_context",
      "dbt_common.events.EventLevel",
      "dbt.node_types.NodeType",
      "dbt_common.events.functions.fire_event",
      "dbt.parser.base.SimpleParser",
      "dbt.contracts.files.SchemaSourceFile",
      "dbt.parser.common.YamlBlock",
      "dbt.parser.SnapshotParser",
      "dbt.parser.unit_tests.UnitTestParser",
      "dbt.contracts.graph.manifest.Manifest",
      "dbt.exceptions.ParsingError"
    ],
    "dbt.parser.schemas.ParseResult": [
      "dbt.parser.common.VersionedTestBlock",
      "dbt.parser.common.TestBlock"
    ],
    "dbt.parser.schemas.YamlReader": [
      "dbt.context.configured.SchemaYamlVars",
      "dbt.utils.coerce_dict_str",
      "dbt.exceptions.YamlParseListError",
      "dbt.parser.schema_renderer.SchemaYamlRenderer",
      "dbt.contracts.files.SchemaSourceFile",
      "dbt.parser.common.YamlBlock",
      "dbt.config.RuntimeConfig",
      "dbt.parser.common.trimmed",
      "dbt.contracts.graph.manifest.Manifest",
      "dbt.exceptions.ParsingError",
      "dbt.context.configured.generate_schema_yml_context"
    ],
    "dbt.parser.schemas.SourceParser": [
      "dbt.exceptions.YamlParseDictError",
      "dbt.parser.schemas.YamlReader",
      "dbt.node_types.NodeType",
      "dbt.contracts.graph.unparsed.UnparsedSourceDefinition",
      "dbt.contracts.graph.nodes.UnpatchedSourceDefinition",
      "dbt_common.dataclass_schema.ValidationError",
      "dbt.contracts.files.SchemaSourceFile",
      "dbt.exceptions.JSONValidationError",
      "dbt.contracts.graph.unparsed.SourcePatch",
      "dbt.exceptions.DuplicateSourcePatchNameError"
    ],
    "dbt.parser.schemas.PatchParser": [
      "dbt.contracts.graph.unparsed.HasColumnTests",
      "dbt.exceptions.YamlParseDictError",
      "dbt.parser.common.TestBlock",
      "dbt.exceptions.InvalidAccessTypeError",
      "dbt.contracts.graph.unparsed.HasColumnDocs",
      "dbt.parser.schemas.YamlReader",
      "dbt.parser.common.TargetBlock",
      "dbt_common.dataclass_schema.ValidationError",
      "dbt.parser.common.ParserRef",
      "dbt.exceptions.JSONValidationError",
      "dbt.context.context_config.ContextConfig",
      "dbt.parser.common.VersionedTestBlock",
      "dbt.exceptions.ParsingError",
      "dbt.node_types.AccessType"
    ],
    "dbt.parser.schemas.NodePatchParser": [
      "dbt.artifacts.resources.v1.model.TimeSpine",
      "dbt.exceptions.DbtInternalError",
      "dbt.parser.common.schema_file_keys_to_resource_types",
      "dbt.contracts.graph.nodes.ModelNode",
      "dbt.exceptions.DuplicatePatchPathError",
      "dbt.artifacts.resources.v1.model.CustomGranularity",
      "dbt.node_types.NodeType",
      "dbt_common.events.functions.warn_or_error",
      "dbt.events.types.WrongResourceSchemaFile",
      "dbt.parser.common.TargetBlock",
      "dbt.contracts.files.SchemaSourceFile",
      "dbt.parser.common.ParserRef",
      "dbt.events.types.ValidationWarning",
      "dbt.events.types.NoNodeForYamlKey",
      "dbt.exceptions.ParsingError",
      "dbt.contracts.graph.nodes.ParsedNodePatch",
      "dbt.contracts.graph.unparsed.UnparsedModelUpdate"
    ],
    "dbt.parser.schemas.TestablePatchParser": [
      "dbt.contracts.graph.unparsed.UnparsedNodeUpdate",
      "dbt.parser.common.TestBlock"
    ],
    "dbt.parser.schemas.ModelPatchParser": [
      "dbt.artifacts.resources.v1.model.TimeSpine",
      "dbt.contracts.graph.nodes.ModelNode",
      "dbt.parser.common.ParserRef",
      "dbt_common.contracts.constraints.ModelLevelConstraint",
      "dbt.events.types.UnsupportedConstraintMaterialization",
      "dbt.events.types.NoNodeForYamlKey",
      "dbt_common.contracts.constraints.ConstraintType",
      "dbt.parser.common.TargetBlock",
      "dbt.artifacts.resources.RefArgs",
      "dbt.contracts.graph.nodes.ParsedNodePatch",
      "dbt.contracts.graph.unparsed.UnparsedModelUpdate",
      "dbt.clients.jinja_static.statically_parse_ref_or_source",
      "dbt.contracts.files.SourceFile",
      "dbt.node_types.AccessType",
      "dbt.exceptions.InvalidAccessTypeError",
      "dbt_common.utils.deep_merge",
      "dbt.node_types.NodeType",
      "dbt.events.types.WrongResourceSchemaFile",
      "dbt_common.events.functions.warn_or_error",
      "dbt.contracts.files.SchemaSourceFile",
      "dbt.parser.common.VersionedTestBlock",
      "dbt.exceptions.ParsingError"
    ],
    "dbt.parser.schemas.AnalysisPatchParser": [
      "dbt.contracts.graph.unparsed.UnparsedAnalysisUpdate",
      "dbt.parser.common.TargetBlock"
    ],
    "dbt.parser.schemas.SingularTestPatchParser": [
      "dbt.contracts.graph.unparsed.UnparsedSingularTestUpdate",
      "dbt_common.events.functions.warn_or_error",
      "dbt.contracts.graph.nodes.ParsedSingularTestPatch",
      "dbt.parser.common.TargetBlock",
      "dbt.contracts.files.SchemaSourceFile",
      "dbt.parser.common.ParserRef",
      "dbt.events.types.NoNodeForYamlKey"
    ],
    "dbt.parser.schemas.MacroPatchParser": [
      "dbt.exceptions.DuplicateMacroPatchNameError",
      "dbt.contracts.graph.nodes.Macro",
      "dbt.contracts.graph.nodes.ParsedMacroPatch",
      "dbt.contracts.graph.unparsed.UnparsedMacroUpdate",
      "dbt_common.events.functions.warn_or_error",
      "dbt.parser.common.TargetBlock",
      "dbt.contracts.files.SchemaSourceFile",
      "dbt.parser.common.ParserRef",
      "dbt.events.types.InvalidMacroAnnotation",
      "dbt.events.types.MacroNotFoundForPatch",
      "dbt.flags.get_flags"
    ],
    "dbt.parser.common.YamlBlock": [
      "dbt.parser.search.FileBlock"
    ],
    "dbt.parser.common.TargetBlock": [
      "dbt.parser.common.YamlBlock"
    ],
    "dbt.parser.common.VersionedTestBlock": [
      "dbt.parser.common.TestBlock",
      "dbt_common.exceptions.DbtInternalError"
    ],
    "dbt.parser.common.GenericTestBlock": [
      "dbt.artifacts.resources.NodeVersion"
    ],
    "dbt.parser.common.ParserRef": [
      "dbt.contracts.graph.unparsed.HasColumnTests",
      "dbt.contracts.graph.unparsed.HasColumnProps",
      "dbt.contracts.graph.unparsed.HasColumnDocs",
      "dbt_semantic_interfaces.type_enums.TimeGranularity",
      "dbt_common.contracts.constraints.ColumnLevelConstraint",
      "dbt.artifacts.resources.NodeVersion",
      "dbt.contracts.graph.unparsed.UnparsedColumn",
      "dbt_common.contracts.constraints.ConstraintType",
      "dbt.exceptions.ParsingError",
      "dbt.artifacts.resources.ColumnInfo",
      "dbt.artifacts.resources.ColumnConfig"
    ],
    "dbt.parser.macros.MacroParser": [
      "dbt.contracts.graph.nodes.Macro",
      "dbt.clients.jinja.get_supported_languages",
      "dbt.parser.search.filesystem_search",
      "dbt.artifacts.resources.v1.macro.MacroArgument",
      "dbt.contracts.files.FilePath",
      "dbt.node_types.NodeType",
      "dbt.contracts.graph.unparsed.UnparsedMacro",
      "dbt.parser.base.BaseParser",
      "dbt.contracts.files.SourceFile",
      "dbt.exceptions.ParsingError",
      "dbt.parser.search.FileBlock",
      "dbt_common.clients.jinja",
      "dbt_common.clients._jinja_blocks.ExtractWarning",
      "dbt.flags.get_flags",
      "dbt_common.utils.MACRO_PREFIX"
    ],
    "dbt.parser.singular_test.SingularTestParser": [
      "dbt.utils.get_pseudo_test_path",
      "dbt.node_types.NodeType",
      "dbt.parser.base.SimpleSQLParser",
      "dbt.contracts.graph.nodes.SingularTestNode",
      "dbt.parser.search.FileBlock"
    ],
    "dbt.parser.generic_test_builders.TestBuilder": [
      "dbt.contracts.graph.nodes.UnpatchedSourceDefinition",
      "dbt_common.exceptions.macros.UndefinedMacroError",
      "dbt.clients.jinja.GENERIC_TEST_KWARGS_NAME",
      "dbt.exceptions.UnexpectedTestNamePatternError",
      "dbt.artifacts.resources.NodeVersion",
      "dbt.parser.common.Testable",
      "dbt.exceptions.TagsNotListOfStringsError",
      "dbt.contracts.graph.unparsed.UnparsedModelUpdate",
      "dbt.exceptions.TestDefinitionDictLengthError",
      "dbt.clients.jinja.get_rendered",
      "dbt.exceptions.TestTypeError",
      "dbt.deprecations",
      "dbt.flags.get_flags",
      "dbt.exceptions.TestNameNotStringError",
      "dbt.exceptions.CustomMacroPopulatingConfigValueError",
      "dbt.exceptions.TagNotStringError",
      "dbt.contracts.graph.unparsed.UnparsedNodeUpdate",
      "dbt.exceptions.TestArgIncludesModelError",
      "dbt.exceptions.TestArgsNotDictError",
      "dbt.exceptions.SameKeyNestedError"
    ],
    "dbt.parser.search.FileBlock": [
      "dbt.contracts.files.AnySourceFile"
    ],
    "dbt.parser.search.BlockContents": [
      "dbt.contracts.files.AnySourceFile",
      "dbt.parser.search.FileBlock",
      "dbt_common.clients.jinja.BlockTag"
    ],
    "dbt.parser.search.FullBlock": [
      "dbt.contracts.files.AnySourceFile",
      "dbt.parser.search.FileBlock",
      "dbt_common.clients.jinja.BlockTag"
    ],
    "dbt.parser.search.BlockSearcher": [
      "dbt_common.clients.jinja.BlockTag",
      "dbt.deprecations",
      "dbt_common.clients._jinja_blocks.ExtractWarning",
      "dbt.exceptions.ParsingError",
      "dbt_common.clients.jinja.extract_toplevel_blocks"
    ],
    "dbt.parser.unit_tests.UnitTestManifestLoader": [
      "dbt.contracts.graph.nodes.ModelNode",
      "dbt.artifacts.resources.ModelConfig",
      "dbt.utils.get_pseudo_test_path",
      "dbt.contracts.graph.nodes.UnitTestNode",
      "dbt.exceptions.InvalidUnitTestGivenInput",
      "dbt.context.providers.generate_parse_exposure",
      "dbt.contracts.files.FileHash",
      "dbt.context.providers.get_rendered",
      "dbt.contracts.graph.model_config.UnitTestNodeConfig",
      "dbt.config.RuntimeConfig",
      "dbt_extractor.ExtractionError",
      "dbt_extractor.py_extract_from_source",
      "dbt.graph.UniqueId",
      "dbt.node_types.NodeType",
      "dbt.artifacts.resources.UnitTestFormat",
      "dbt.contracts.graph.nodes.UnitTestSourceDefinition",
      "dbt.contracts.graph.nodes.UnitTestDefinition",
      "dbt.contracts.graph.manifest.Manifest",
      "dbt.exceptions.ParsingError"
    ],
    "dbt.parser.unit_tests.UnitTestParser": [
      "dbt.artifacts.resources.UnitTestConfig",
      "dbt.parser.schemas.JSONValidationError",
      "dbt_common.events.types.SystemStdErr",
      "dbt_extractor.py_extract_from_source",
      "dbt.parser.schemas.YamlBlock",
      "dbt.parser.schemas.YamlParseDictError",
      "dbt.context.context_config.ContextConfig",
      "dbt.contracts.graph.unparsed.UnparsedUnitTest",
      "dbt.parser.schemas.SchemaParser",
      "dbt.parser.schemas.ValidationError",
      "dbt.utils",
      "dbt.parser.schemas.YamlReader",
      "dbt.contracts.graph.nodes.DependsOn",
      "dbt.node_types.NodeType",
      "dbt.artifacts.resources.UnitTestFormat",
      "dbt_common.events.functions.fire_event",
      "dbt.contracts.files.SchemaSourceFile",
      "dbt.contracts.graph.nodes.UnitTestDefinition",
      "dbt.exceptions.ParsingError",
      "dbt.parser.schemas.ParseResult"
    ],
    "dbt.parser.seeds.SeedParser": [
      "dbt.node_types.NodeType",
      "dbt.parser.base.SimpleSQLParser",
      "dbt.context.context_config.ContextConfig",
      "dbt.contracts.graph.nodes.SeedNode",
      "dbt.parser.search.FileBlock"
    ],
    "dbt.parser.sql.SqlBlock": [
      "dbt.parser.search.FileBlock"
    ],
    "dbt.parser.sql.SqlBlockParser": [
      "dbt.node_types.NodeType",
      "dbt.parser.base.SimpleSQLParser",
      "dbt.contracts.graph.nodes.SqlNode",
      "dbt.parser.search.FileBlock",
      "dbt.contracts.graph.manifest.SourceFile",
      "dbt_common.exceptions.DbtInternalError"
    ],
    "dbt.parser.sql.SqlMacroParser": [
      "dbt.parser.macros.MacroParser",
      "dbt.contracts.graph.unparsed.UnparsedMacro",
      "dbt.node_types.NodeType",
      "dbt.contracts.graph.nodes.Macro"
    ],
    "dbt.parser.partial.PartialParsing": [
      "dbt.contracts.graph.nodes.ModelNode",
      "dbt_common.context.get_invocation_context",
      "dbt.contracts.graph.nodes.AnalysisNode",
      "dbt.events.types.PartialParsingEnabled",
      "dbt.contracts.files.ParseFileType",
      "dbt.node_types.NodeType",
      "dbt_common.events.functions.fire_event",
      "dbt.contracts.files.SchemaSourceFile",
      "dbt.contracts.files.SourceFile",
      "dbt.contracts.graph.nodes.SeedNode",
      "dbt.events.types.PartialParsingFile",
      "dbt.contracts.graph.manifest.Manifest",
      "dbt.contracts.files.AnySourceFile",
      "dbt.contracts.graph.nodes.SnapshotNode",
      "dbt.constants.DEFAULT_ENV_PLACEHOLDER",
      "dbt_common.events.base_types.EventLevel",
      "dbt.contracts.files.parse_file_type_to_parser"
    ],
    "dbt.parser.base.BaseParser": [
      "dbt.node_types.NodeType",
      "dbt.deprecations",
      "dbt.config.RuntimeConfig",
      "dbt.parser.search.FileBlock",
      "dbt_common.clients._jinja_blocks.ExtractWarning",
      "dbt.contracts.graph.manifest.Manifest"
    ],
    "dbt.parser.base.Parser": [
      "dbt.contracts.graph.manifest.Manifest",
      "dbt.config.RuntimeConfig"
    ],
    "dbt.parser.base.RelationUpdate": [
      "dbt.exceptions.DbtInternalError",
      "dbt.context.providers.generate_generate_name_macro_context",
      "dbt.clients.jinja.MacroGenerator",
      "dbt.config.RuntimeConfig",
      "dbt.contracts.graph.manifest.Manifest"
    ],
    "dbt.parser.base.ConfiguredParser": [
      "dbt.contracts.graph.unparsed.UnparsedNode",
      "dbt.artifacts.resources.Contract",
      "dbt.exceptions.DictParseError",
      "dbt.jsonschemas.validate_model_config",
      "dbt.adapters.factory.get_adapter",
      "dbt.exceptions.ConfigUpdateError",
      "dbt.node_types.ModelLanguage",
      "dbt.config.RuntimeConfig",
      "dbt.context.providers.generate_parser_model_context",
      "dbt.clients.jinja.get_rendered",
      "dbt.hooks",
      "dbt.contracts.graph.unparsed.Docs",
      "dbt.context.context_config.ContextConfig",
      "dbt.parser.search.FileBlock",
      "dbt.contracts.graph.nodes.ManifestNode",
      "dbt.flags.get_flags",
      "dbt.exceptions.DbtInternalError",
      "dbt.utils",
      "dbt.exceptions.InvalidAccessTypeError",
      "dbt_common.utils.deep_merge",
      "dbt.node_types.NodeType",
      "dbt_common.dataclass_schema.ValidationError",
      "dbt.contracts.files.SchemaSourceFile",
      "dbt.parser.common.resource_types_to_schema_file_keys",
      "dbt.contracts.graph.manifest.Manifest",
      "dbt.node_types.AccessType"
    ],
    "dbt.parser.base.SQLParser": [
      "dbt.parser.search.FileBlock"
    ],
    "dbt.parser.fixtures.FixtureParser": [
      "dbt.node_types.NodeType",
      "dbt.contracts.graph.nodes.UnitTestFileFixture",
      "dbt.contracts.files.FixtureSourceFile",
      "dbt.parser.search.FileBlock",
      "dbt.parser.base.Parser"
    ],
    "dbt.adapters.protocol.AdapterConfig": [
      "dbt_common.contracts.config.base.BaseConfig"
    ],
    "dbt.adapters.protocol.RelationProtocol": [
      "dbt.adapters.contracts.relation.Policy",
      "dbt.adapters.contracts.relation.HasQuoting",
      "dbt.adapters.contracts.relation.RelationConfig"
    ],
    "dbt.adapters.protocol.MacroContextGeneratorCallable": [
      "dbt.adapters.contracts.connection.AdapterRequiredConfig",
      "dbt.adapters.contracts.macros.MacroResolverProtocol",
      "dbt_common.clients.jinja.MacroProtocol"
    ],
    "dbt.adapters.protocol.AdapterProtocol": [
      "dbt.adapters.contracts.connection.AdapterResponse",
      "dbt.adapters.contracts.macros.MacroResolverProtocol",
      "dbt.adapters.contracts.connection.Connection",
      "dbt.adapters.contracts.connection.AdapterRequiredConfig"
    ],
    "dbt.adapters.cache._CachedRelation": [
      "dbt.adapters.reference_keys._make_ref_key",
      "dbt.adapters.exceptions.cache.NewNameAlreadyInCacheError",
      "dbt.adapters.reference_keys._ReferenceKey",
      "dbt_common.utils.formatting.lowercase"
    ],
    "dbt.adapters.cache.RelationsCache": [
      "dbt.adapters.reference_keys._make_ref_key_dict",
      "dbt.adapters.events.types.CacheAction",
      "dbt.adapters.reference_keys._make_ref_key",
      "dbt.adapters.exceptions.cache.NoneRelationFoundError",
      "dbt.adapters.exceptions.cache.DependentLinkNotCachedError",
      "dbt_common.events.functions.fire_event",
      "dbt.adapters.events.types.CacheDumpGraph",
      "dbt.adapters.exceptions.cache.ReferencedLinkNotCachedError",
      "dbt.adapters.reference_keys._ReferenceKey",
      "dbt.adapters.exceptions.cache.TruncatedModelNameCausedCollisionError",
      "dbt_common.events.functions.fire_event_if",
      "dbt_common.utils.formatting.lowercase"
    ],
    "dbt.adapters.factory.AdapterContainer": [
      "dbt.adapters.contracts.connection.Credentials",
      "dbt_common.semver.VersionSpecifier",
      "dbt.adapters.base.plugin.AdapterPlugin",
      "dbt.adapters.protocol.RelationProtocol",
      "dbt.adapters.contracts.connection.AdapterRequiredConfig",
      "dbt_common.events.functions.fire_event",
      "dbt.adapters.protocol.AdapterConfig",
      "dbt.adapters.events.types.AdapterRegistered",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.events.types.PluginLoadError",
      "dbt.include.global_project.PACKAGE_PATH",
      "dbt.include.global_project.PROJECT_NAME",
      "dbt.adapters.events.types.AdapterImportError",
      "dbt_common.exceptions.DbtInternalError",
      "dbt_common.events.base_types.EventLevel"
    ],
    "dbt.adapters.capability.Capability": [
      "dbt.adapters.capability.str"
    ],
    "dbt.adapters.capability.Support": [
      "dbt.adapters.capability.str"
    ],
    "dbt.adapters.utils.Translator": [
      "dbt.adapters.exceptions.DuplicateAliasError"
    ],
    "dbt.adapters.utils.classproperty": [
      "dbt.adapters.utils.object"
    ],
    "dbt.task.freshness.FreshnessRunner": [
      "dbt.events.types.LogStartLine",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.clients.jinja",
      "dbt.adapters.base.relation.BaseRelation",
      "dbt.context.providers.RuntimeProvider",
      "dbt_common.events.types.Note",
      "dbt.artifacts.schemas.freshness.FreshnessStatus",
      "dbt.artifacts.schemas.freshness.SourceFreshnessResult",
      "dbt.artifacts.schemas.freshness.PartialSourceFreshnessResult",
      "dbt.adapters.capability.Capability",
      "dbt_common.events.base_types.EventLevel",
      "dbt.context.providers.SourceContext",
      "dbt.node_types.NodeType",
      "dbt_common.events.functions.fire_event",
      "dbt.artifacts.schemas.freshness.FreshnessResult",
      "dbt.events.types.LogFreshnessResult",
      "dbt.adapters.contracts.connection.AdapterResponse",
      "dbt.contracts.graph.manifest.Manifest",
      "dbt.adapters.base.impl.FreshnessResponse"
    ],
    "dbt.task.freshness.FreshnessSelector": [
      "dbt.graph.ResourceTypeSelector",
      "dbt.contracts.graph.nodes.SourceDefinition"
    ],
    "dbt.task.freshness.FreshnessTask": [
      "dbt.node_types.RunHookType",
      "dbt.adapters.base.BaseAdapter",
      "dbt.contracts.results.RunStatus",
      "dbt.contracts.graph.nodes.HookNode",
      "dbt.node_types.NodeType",
      "dbt.constants.SOURCE_RESULT_FILE_NAME",
      "dbt_common.events.functions.fire_event",
      "dbt.deprecations",
      "dbt.adapters.base.relation.BaseRelation",
      "dbt.artifacts.schemas.freshness.FreshnessResult",
      "dbt.adapters.capability.Capability",
      "dbt_common.exceptions.DbtInternalError",
      "dbt_common.events.types.Note",
      "dbt.artifacts.schemas.freshness.FreshnessStatus",
      "dbt_common.events.base_types.EventLevel",
      "dbt.events.types.FreshnessCheckComplete"
    ],
    "dbt.task.build.BuildTask": [
      "dbt.graph.GraphQueue",
      "dbt.exceptions.DbtInternalError",
      "dbt.graph.ResourceTypeSelector",
      "dbt.artifacts.schemas.run.RunResult",
      "dbt.runners.SavedQueryRunner",
      "dbt.node_types.NodeType",
      "dbt.artifacts.schemas.results.NodeStatus",
      "dbt.config.runtime.RuntimeConfig",
      "dbt.cli.flags.Flags",
      "dbt.task.base.resource_types_from_args",
      "dbt.graph.Graph",
      "dbt.runners.ExposureRunner",
      "dbt.task.run.MicrobatchModelRunner",
      "dbt.task.base.BaseRunner",
      "dbt.contracts.graph.manifest.Manifest"
    ],
    "dbt.task.show.ShowRunner": [
      "dbt.task.compile.CompileRunner",
      "dbt.artifacts.schemas.run.RunStatus",
      "dbt.context.providers.generate_runtime_model_context",
      "dbt.artifacts.schemas.run.RunResult"
    ],
    "dbt.task.show.ShowTask": [
      "dbt.events.types.ShowNode",
      "dbt_common.events.functions.fire_event",
      "dbt.task.seed.SeedRunner",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.contracts.graph.nodes.SeedNode",
      "dbt.task.compile.CompileTask",
      "dbt_common.events.types.Note",
      "dbt.flags.get_flags",
      "dbt_common.events.base_types.EventLevel"
    ],
    "dbt.task.show.ShowTaskDirect": [
      "dbt.task.base.ConfiguredTask",
      "dbt.events.types.ShowNode",
      "dbt_common.events.functions.fire_event",
      "dbt.flags.get_flags",
      "dbt.adapters.factory.get_adapter"
    ],
    "dbt.task.run.BiggestName": [
      "dbt.task.run.str"
    ],
    "dbt.task.run.ModelRunner": [
      "dbt.contracts.graph.nodes.ModelNode",
      "dbt.events.types.LogStartLine",
      "dbt.artifacts.schemas.results.NodeStatus",
      "dbt.adapters.exceptions.MissingMaterializationError",
      "dbt_common.clients.jinja.MacroProtocol",
      "dbt.exceptions.DbtRuntimeError",
      "dbt.task.group_lookup",
      "dbt.artifacts.schemas.run.RunResult",
      "dbt.task.compile.CompileRunner",
      "dbt.exceptions.CompilationError",
      "dbt.clients.jinja.MacroGenerator",
      "dbt.events.types.LogModelResult",
      "dbt_common.exceptions.DbtValidationError",
      "dbt.artifacts.schemas.results.RunStatus",
      "dbt_common.events.base_types.EventLevel",
      "dbt.exceptions.DbtInternalError",
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt.context.providers.generate_runtime_model_context",
      "dbt.adapters.base.BaseRelation",
      "dbt_common.events.functions.fire_event"
    ],
    "dbt.task.run.MicrobatchBatchRunner": [
      "dbt.contracts.graph.nodes.ModelNode",
      "dbt.events.types.GenericExceptionOnRun",
      "dbt.artifacts.schemas.results.NodeStatus",
      "dbt.materializations.incremental.microbatch.MicrobatchBuilder",
      "dbt.artifacts.schemas.batch_results.BatchResults",
      "dbt_common.clients.jinja.MacroProtocol",
      "dbt.task.group_lookup",
      "dbt.artifacts.schemas.run.RunResult",
      "dbt.clients.jinja.MacroGenerator",
      "dbt.events.types.LogStartBatch",
      "dbt.artifacts.schemas.results.RunStatus",
      "dbt.artifacts.schemas.batch_results.BatchType",
      "dbt.task.run.ModelRunner",
      "dbt.adapters.capability.Capability",
      "dbt_common.events.base_types.EventLevel",
      "dbt.events.types.LogBatchResult",
      "dbt.contracts.graph.nodes.BatchContext",
      "dbt_common.events.functions.fire_event",
      "dbt.contracts.graph.manifest.Manifest"
    ],
    "dbt.task.run.MicrobatchModelRunner": [
      "dbt.exceptions.DbtInternalError",
      "dbt.contracts.graph.nodes.ModelNode",
      "dbt.artifacts.schemas.run.RunResult",
      "dbt.artifacts.schemas.results.RunStatus",
      "dbt.artifacts.schemas.batch_results.BatchType",
      "dbt.materializations.incremental.microbatch.MicrobatchBuilder",
      "dbt.task.run.ModelRunner",
      "dbt.artifacts.schemas.batch_results.BatchResults",
      "dbt.graph.thread_pool.DbtThreadPool",
      "dbt.contracts.graph.manifest.Manifest",
      "dbt_common.invocation.get_invocation_started_at"
    ],
    "dbt.task.run.RunTask": [
      "dbt.events.types.MicrobatchExecutionDebug",
      "dbt.contracts.graph.nodes.ModelNode",
      "dbt.artifacts.schemas.results.NodeStatus",
      "dbt.utils.artifact_upload.add_artifact_produced",
      "dbt.adapters.events.types.FinishedRunningStats",
      "dbt.artifacts.schemas.batch_results.BatchResults",
      "dbt.exceptions.DbtRuntimeError",
      "dbt.events.types.LogHookEndLine",
      "dbt.task.group_lookup",
      "dbt.artifacts.schemas.run.RunResult",
      "dbt.adapters.base.BaseAdapter",
      "dbt.cli.flags.Flags",
      "dbt_common.events.types.Formatting",
      "dbt.artifacts.schemas.results.TimingInfo",
      "dbt.graph.thread_pool.DbtThreadPool",
      "dbt.config.RuntimeConfig",
      "dbt.task.base.BaseRunner",
      "dbt.node_types.RunHookType",
      "dbt.artifacts.schemas.results.RunningStatus",
      "dbt.graph.ResourceTypeSelector",
      "dbt.contracts.graph.nodes.HookNode",
      "dbt.artifacts.schemas.results.RunStatus",
      "dbt.artifacts.schemas.batch_results.BatchType",
      "dbt.events.types.LogHookStartLine",
      "dbt.task.printer.print_run_end_messages",
      "dbt.task.printer.get_counts",
      "dbt.artifacts.schemas.results.collect_timing_info",
      "dbt.exceptions.DbtInternalError",
      "dbt.utils",
      "dbt.node_types.NodeType",
      "dbt_common.events.functions.fire_event",
      "dbt_common.events.contextvars.log_contextvars",
      "dbt.task.compile.CompileTask",
      "dbt.contracts.graph.manifest.Manifest"
    ],
    "dbt.task.deps.DepsTask": [
      "dbt.task.base.move_to_nearest_project_dir",
      "dbt.events.types.DepsLockUpdating",
      "dbt.events.types.DepsUpdateAvailable",
      "dbt.config.project.load_yml_dict",
      "dbt.events.types.DepsNotifyUpdatesAvailable",
      "dbt.utils.md5",
      "dbt.config.renderer.PackageRenderer",
      "dbt.config.project.package_config_from_data",
      "dbt_common.events.types.Formatting",
      "dbt.events.types.DepsInstallInfo",
      "dbt_common.clients.system",
      "dbt.events.types.DepsStartPackageInstall",
      "dbt.deps.resolver.resolve_packages",
      "dbt.events.types.DepsFoundDuplicatePackage",
      "dbt.constants.PACKAGE_LOCK_FILE_NAME",
      "dbt.events.types.DepsNoPackagesFound",
      "dbt.tracking",
      "dbt.config.Project",
      "dbt.tracking.track_package_install",
      "dbt.events.types.DepsListSubdirectory",
      "dbt.utils",
      "dbt_common.events.functions.fire_event",
      "dbt.constants.PACKAGE_LOCK_HASH_KEY",
      "dbt.task.base.BaseTask",
      "dbt.deps.registry.RegistryPinnedPackage",
      "dbt.events.types.DepsAddPackage",
      "dbt.events.types.DepsUpToDate",
      "dbt.deps.base.downloads_directory",
      "dbt.deps.resolver.resolve_lock_packages"
    ],
    "dbt.task.clean.CleanTask": [
      "dbt.events.types.CheckCleanPath",
      "dbt_common.events.functions.fire_event",
      "dbt.cli.flags.Flags",
      "dbt.task.base.move_to_nearest_project_dir",
      "dbt.task.base.BaseTask",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.deprecations",
      "dbt.events.types.ConfirmCleanPath",
      "dbt.events.types.FinishedCleanPaths",
      "dbt.config.project.Project"
    ],
    "dbt.task.list.ListTask": [
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.events.types.NoNodesSelected",
      "dbt.utils.JSONEncoder",
      "dbt.cli.flags.Flags",
      "dbt.task.runnable.GraphRunnableTask",
      "dbt.graph.ResourceTypeSelector",
      "dbt_common.events.contextvars.task_contextvars",
      "dbt.config.runtime.RuntimeConfig",
      "dbt_common.events.types.PrintEvent",
      "dbt.task.base.resource_types_from_args",
      "dbt.contracts.graph.nodes.UnitTestDefinition",
      "dbt.contracts.graph.nodes.Metric",
      "dbt_common.exceptions.DbtInternalError",
      "dbt.contracts.graph.nodes.SemanticModel",
      "dbt.contracts.graph.nodes.Exposure",
      "dbt.node_types.NodeType",
      "dbt_common.events.functions.warn_or_error",
      "dbt_common.events.functions.fire_event",
      "dbt.contracts.graph.nodes.SavedQuery",
      "dbt.contracts.graph.manifest.Manifest",
      "dbt.contracts.graph.nodes.SourceDefinition"
    ],
    "dbt.task.run_operation.RunOperationTask": [
      "dbt.constants.RUN_RESULTS_FILE_NAME",
      "dbt.adapters.factory.get_adapter",
      "dbt.events.types.RunningOperationCaughtError",
      "dbt.task.base.ConfiguredTask",
      "dbt.artifacts.schemas.run.RunResult",
      "dbt.contracts.files.FileHash",
      "dbt.artifacts.schemas.results.TimingInfo",
      "dbt_common.exceptions",
      "dbt.events.types.LogDebugStackTrace",
      "dbt.contracts.graph.nodes.HookNode",
      "dbt.artifacts.schemas.results.RunStatus",
      "dbt.artifacts.schemas.run.RunResultsArtifact",
      "dbt.artifacts.schemas.results.collect_timing_info",
      "dbt_common.exceptions.UndefinedMacroError",
      "dbt_common.exceptions.DbtBaseException",
      "dbt.node_types.NodeType",
      "dbt_common.events.functions.fire_event",
      "dbt.events.types.RunningOperationUncaughtError",
      "dbt.events.types.ArtifactWritten"
    ],
    "dbt.task.test.UnitTestDiff": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.task.test.TestResultData": [
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt.utils.strtobool",
      "dbt.exceptions.BooleanError"
    ],
    "dbt.task.test.UnitTestResultData": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.task.test.TestRunner": [
      "dbt.events.types.LogStartLine",
      "dbt.artifacts.schemas.catalog.PrimitiveDict",
      "dbt.contracts.graph.nodes.UnitTestNode",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.exceptions.MissingMaterializationError",
      "dbt.task.group_lookup",
      "dbt.parser.unit_tests.UnitTestManifestLoader",
      "dbt_common.ui.red",
      "dbt.artifacts.schemas.run.RunResult",
      "dbt.task.compile.CompileRunner",
      "dbt.clients.jinja.MacroGenerator",
      "dbt.artifacts.schemas.results.TestStatus",
      "dbt.events.types.LogTestResult",
      "dbt.contracts.graph.nodes.GenericTestNode",
      "dbt_common.exceptions.DbtBaseException",
      "dbt_common.events.format.pluralize",
      "dbt.flags.get_flags",
      "dbt.exceptions.DbtInternalError",
      "dbt.contracts.graph.nodes.TestNode",
      "dbt_common.ui.green",
      "dbt.context.providers.generate_runtime_model_context",
      "dbt.node_types.NodeType",
      "dbt.utils._coerce_decimal",
      "dbt_common.events.functions.fire_event",
      "dbt.contracts.graph.nodes.SingularTestNode",
      "dbt.contracts.graph.nodes.UnitTestDefinition",
      "dbt.contracts.graph.manifest.Manifest"
    ],
    "dbt.task.test.TestTask": [
      "dbt.exceptions.DbtInternalError",
      "dbt.graph.ResourceTypeSelector",
      "dbt.node_types.TEST_NODE_TYPES",
      "dbt.node_types.NodeType",
      "dbt.task.base.resource_types_from_args",
      "dbt.task.base.BaseRunner",
      "dbt.task.run.RunTask"
    ],
    "dbt.task.retry.RetryTask": [
      "dbt.graph.GraphQueue",
      "dbt.task.base.ConfiguredTask",
      "dbt.flags.get_flags",
      "dbt.artifacts.schemas.results.NodeStatus",
      "dbt.cli.flags.Flags",
      "dbt.contracts.state.load_result_state",
      "dbt.flags.set_flags",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.constants.RUN_RESULTS_FILE_NAME",
      "dbt.config.RuntimeConfig",
      "dbt.parser.manifest.parse_manifest",
      "dbt.task.run.RunTask"
    ],
    "dbt.task.retry.TaskWrapper": [
      "dbt.graph.GraphQueue"
    ],
    "dbt.task.seed.SeedRunner": [
      "dbt.task.group_lookup",
      "dbt.events.types.LogStartLine",
      "dbt.artifacts.schemas.results.NodeStatus",
      "dbt_common.events.functions.fire_event",
      "dbt.task.run.ModelRunner",
      "dbt.events.types.LogSeedResult",
      "dbt.contracts.graph.manifest.Manifest",
      "dbt_common.events.base_types.EventLevel"
    ],
    "dbt.task.seed.SeedTask": [
      "dbt.graph.ResourceTypeSelector",
      "dbt.node_types.NodeType",
      "dbt.events.types.SeedHeader",
      "dbt.task.printer.print_run_end_messages",
      "dbt_common.events.functions.fire_event",
      "dbt.artifacts.schemas.results.RunStatus",
      "dbt_common.events.types.Formatting",
      "dbt.task.base.BaseRunner",
      "dbt.task.run.RunTask",
      "dbt_common.exceptions.DbtInternalError"
    ],
    "dbt.task.debug.DebugTask": [
      "dbt.events.types.DebugCmdResult",
      "dbt_common.exceptions.DbtConfigError",
      "dbt.events.types.DebugCmdOut",
      "dbt.config.Profile",
      "dbt.task.base.get_nearest_project_dir",
      "dbt.clients.yaml_helper.load_yaml_text",
      "dbt.version.get_installed_version",
      "dbt.events.types.OpenCommand",
      "dbt_common.clients.system.open_dir_cmd",
      "dbt.adapters.factory.get_adapter",
      "dbt_common.exceptions.ExecutableError",
      "dbt_common.ui.red",
      "dbt.exceptions.DbtProjectError",
      "dbt.cli.flags.Flags",
      "dbt.config.PartialProject",
      "dbt.mp_context.get_mp_context",
      "dbt_common.clients.system",
      "dbt_common.clients.system.run_cmd",
      "dbt_common.exceptions",
      "dbt.config.renderer.DbtProjectYamlRenderer",
      "dbt.artifacts.schemas.results.RunStatus",
      "dbt.adapters.factory.register_adapter",
      "dbt_common.exceptions.DbtBaseException",
      "dbt_common.events.format.pluralize",
      "dbt.config.renderer.ProfileRenderer",
      "dbt_common.exceptions.DbtInternalError",
      "dbt.config.Project",
      "dbt.exceptions.DbtInternalError",
      "dbt.exceptions.DbtProfileError",
      "dbt_common.clients",
      "dbt_common.ui.green",
      "dbt.links.ProfileConfigDocs",
      "dbt_common.events.functions.fire_event",
      "dbt.exceptions",
      "dbt.task.base.BaseTask",
      "dbt_common.clients.system.load_file_contents"
    ],
    "dbt.task.compile.CompileRunner": [
      "dbt.task.base.BaseRunner",
      "dbt.contracts.graph.manifest.Manifest",
      "dbt.artifacts.schemas.run.RunStatus",
      "dbt.artifacts.schemas.run.RunResult"
    ],
    "dbt.task.compile.CompileTask": [
      "dbt.graph.ResourceTypeSelector",
      "dbt.task.runnable.GraphRunnableTask",
      "dbt.node_types.NodeType",
      "dbt.events.types.ParseInlineNodeError",
      "dbt.node_types.EXECUTABLE_NODE_TYPES",
      "dbt_common.events.functions.fire_event",
      "dbt_common.exceptions.CompilationError",
      "dbt.task.base.BaseRunner",
      "dbt_common.events.types.Note",
      "dbt_common.exceptions.DbtBaseException",
      "dbt.events.types.CompiledNode",
      "dbt.parser.sql.SqlBlockParser",
      "dbt.flags.get_flags",
      "dbt_common.exceptions.DbtInternalError",
      "dbt_common.events.base_types.EventLevel",
      "dbt.parser.manifest.process_node"
    ],
    "dbt.task.sql.GenericSqlRunner": [
      "dbt_common.exceptions.base",
      "dbt.events.types.SQLRunnerException",
      "dbt.task.compile.CompileRunner",
      "dbt_common.events.functions.fire_event",
      "dbt.exceptions",
      "dbt.exceptions.Exception",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt_common.exceptions.base.NotImplementedError",
      "dbt.contracts.graph.manifest.Manifest",
      "dbt_common.exceptions"
    ],
    "dbt.task.sql.SqlCompileRunner": [
      "dbt.contracts.sql.RemoteCompileResult"
    ],
    "dbt.task.sql.SqlExecuteRunner": [
      "dbt.contracts.sql.RemoteRunResult",
      "dbt.contracts.sql.ResultTable"
    ],
    "dbt.task.init.InitTask": [
      "dbt.include.starter_project.PACKAGE_PATH",
      "dbt.version._get_adapter_plugin_names",
      "dbt.config.profile.read_profile",
      "dbt.task.base.move_to_nearest_project_dir",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.factory.load_plugin",
      "dbt.include.global_project.PROJECT_NAME",
      "dbt.events.types.SettingUpProfile",
      "dbt.exceptions.NoAdaptersAvailableError",
      "dbt.events.types.ProfileWrittenWithTargetTemplateYAML",
      "dbt.adapters.factory.get_include_paths",
      "dbt.events.types.InvalidProfileTemplateYAML",
      "dbt_common.clients.system",
      "dbt_common.clients.system.make_directory",
      "dbt.events.types.ProfileWrittenWithProjectTemplateYAML",
      "dbt_common.exceptions",
      "dbt.events.types.ProjectCreated",
      "dbt.events.types.ConfigFolderDirectory",
      "dbt.events.types.ProjectNameAlreadyExists",
      "dbt.events.types.ProfileWrittenWithSample",
      "dbt.flags.get_flags",
      "dbt_common.clients",
      "dbt.events.types.NoSampleProfileFound",
      "dbt.contracts.util.Identifier",
      "dbt_common.events.functions.fire_event",
      "dbt.exceptions",
      "dbt.task.base.BaseTask",
      "dbt.events.types.StarterProjectPath"
    ],
    "dbt.task.runnable.GraphRunnableMode": [
      "dbt_common.dataclass_schema.StrEnum"
    ],
    "dbt.task.runnable.GraphRunnableTask": [
      "dbt.events.types.MarkSkippedChildren",
      "dbt.events.types.GenericExceptionOnRun",
      "dbt.artifacts.schemas.results.NodeStatus",
      "dbt.exceptions.FailFastError",
      "dbt.tracking.active_user",
      "dbt.utils.artifact_upload.add_artifact_produced",
      "dbt.constants.RUN_RESULTS_FILE_NAME",
      "dbt.events.types.NothingToDo",
      "dbt_common.utils.executor",
      "dbt.adapters.factory.get_adapter",
      "dbt.exceptions.DbtRuntimeError",
      "dbt.graph.GraphQueue",
      "dbt_common.exceptions.NotImplementedError",
      "dbt.task.base.ConfiguredTask",
      "dbt.artifacts.schemas.run.RunResult",
      "dbt.adapters.base.BaseAdapter",
      "dbt.task.group_lookup",
      "dbt.events.types.NodeFinished",
      "dbt.cli.flags.Flags",
      "dbt_common.events.types.Formatting",
      "dbt.contracts.graph.nodes.ResultNode",
      "dbt.artifacts.schemas.run.RunExecutionResult",
      "dbt.graph.thread_pool.DbtThreadPool",
      "dbt_common.utils",
      "dbt.task.base.BaseRunner",
      "dbt.artifacts.schemas.results.RunningStatus",
      "dbt_common.context.get_invocation_context",
      "dbt.events.types.ConcurrencyLine",
      "dbt_common.events.contextvars.task_contextvars",
      "dbt.artifacts.schemas.results.RunStatus",
      "dbt.config.runtime.RuntimeConfig",
      "dbt.task.printer.print_run_end_messages",
      "dbt.graph.UniqueId",
      "dbt.graph.parse_difference",
      "dbt.tracking",
      "dbt.utils.args_to_dict",
      "dbt.graph.NodeSelector",
      "dbt.parser.manifest.write_manifest",
      "dbt_common.context._INVOCATION_CONTEXT_VAR",
      "dbt.flags.get_flags",
      "dbt.events.types.NodeStart",
      "dbt.events.types.EndRunResult",
      "dbt.exceptions.DbtInternalError",
      "dbt_common.utils.formatting",
      "dbt.graph.SelectionSpec",
      "dbt.utils",
      "dbt.contracts.graph.nodes.Exposure",
      "dbt.adapters.base.BaseRelation",
      "dbt.tracking.track_runnable_timing",
      "dbt_common.events.functions.fire_event",
      "dbt_common.events.contextvars.log_contextvars",
      "dbt.artifacts.schemas.results.BaseResult",
      "dbt.events.types.QueryCancelationUnsupported",
      "dbt.contracts.state.PreviousState",
      "dbt.events.types.SkippingDetails",
      "dbt_common.events.functions.warn_or_error",
      "dbt.task.printer.print_run_result_error",
      "dbt.events.types.ArtifactWritten",
      "dbt.contracts.graph.manifest.Manifest",
      "dbt.events.types.DefaultSelector",
      "dbt.events.types.LogCancelLine",
      "dbt_common.utils.formatting.lowercase"
    ],
    "dbt.task.base.BaseTask": [
      "dbt_common.exceptions.base.NotImplementedError",
      "dbt.cli.flags.Flags",
      "dbt_common.exceptions",
      "dbt_common.exceptions.base"
    ],
    "dbt.task.base.ConfiguredTask": [
      "dbt.tracking.active_user",
      "dbt.graph.Graph",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.events.types.LogDbtProjectError",
      "dbt.compilation.Compiler",
      "dbt.cli.flags.Flags",
      "dbt.exceptions.DbtProjectError",
      "dbt.config.RuntimeConfig",
      "dbt_common.exceptions",
      "dbt.events.types.LogDbtProfileError",
      "dbt.tracking",
      "dbt.flags.get_flags",
      "dbt_common.exceptions.DbtInternalError",
      "dbt.exceptions.DbtProfileError",
      "dbt.tracking.track_runnable_timing",
      "dbt_common.events.functions.fire_event",
      "dbt.exceptions",
      "dbt.task.base.BaseTask",
      "dbt.contracts.graph.manifest.Manifest"
    ],
    "dbt.task.base.ExecutionContext": [
      "dbt.artifacts.schemas.results.TimingInfo"
    ],
    "dbt.task.base.BaseRunner": [
      "dbt.events.types.GenericExceptionOnRun",
      "dbt.events.types.LogSkipBecauseError",
      "dbt.artifacts.schemas.results.NodeStatus",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt_common.events.contextvars.get_node_info",
      "dbt_common.exceptions.NotImplementedError",
      "dbt.events.types.NodeCompiling",
      "dbt.task.group_lookup",
      "dbt.artifacts.schemas.run.RunResult",
      "dbt.compilation.Compiler",
      "dbt.events.types.NodeConnectionReleaseError",
      "dbt.events.types.CatchableExceptionOnRun",
      "dbt.artifacts.schemas.results.RunningStatus",
      "dbt.events.types.LogDebugStackTrace",
      "dbt.artifacts.schemas.results.RunStatus",
      "dbt.artifacts.schemas.results.collect_timing_info",
      "dbt.events.types.NodeExecuting",
      "dbt.events.types.InternalErrorOnRun",
      "dbt.flags.get_flags",
      "dbt_common.exceptions.DbtInternalError",
      "dbt_common.events.functions.fire_event",
      "dbt.events.types.SkippingDetails",
      "dbt.task.printer.print_run_result_error",
      "dbt.contracts.graph.manifest.Manifest"
    ],
    "dbt.task.snapshot.SnapshotRunner": [
      "dbt.task.group_lookup",
      "dbt_common.utils.cast_dict_to_dict_of_strings",
      "dbt.artifacts.schemas.results.NodeStatus",
      "dbt.events.types.LogSnapshotResult",
      "dbt_common.events.functions.fire_event",
      "dbt.task.run.ModelRunner",
      "dbt_common.events.base_types.EventLevel"
    ],
    "dbt.task.snapshot.SnapshotTask": [
      "dbt.graph.ResourceTypeSelector",
      "dbt.node_types.NodeType",
      "dbt.task.base.BaseRunner",
      "dbt.task.run.RunTask",
      "dbt_common.exceptions.DbtInternalError"
    ],
    "dbt.task.clone.CloneRunner": [
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt.artifacts.schemas.run.RunResult",
      "dbt.context.providers.generate_runtime_model_context",
      "dbt.task.run._validate_materialization_relations_dict",
      "dbt.adapters.base.BaseRelation",
      "dbt_common.exceptions.CompilationError",
      "dbt.clients.jinja.MacroGenerator",
      "dbt.artifacts.schemas.run.RunStatus",
      "dbt.task.base.BaseRunner",
      "dbt.contracts.graph.manifest.Manifest",
      "dbt_common.exceptions.DbtInternalError"
    ],
    "dbt.task.clone.CloneTask": [
      "dbt.graph.ResourceTypeSelector",
      "dbt.task.runnable.GraphRunnableMode",
      "dbt.artifacts.resources.types.NodeType",
      "dbt.adapters.base.BaseAdapter",
      "dbt.node_types.REFABLE_NODE_TYPES",
      "dbt.adapters.base.BaseRelation",
      "dbt.task.base.resource_types_from_args",
      "dbt.artifacts.schemas.run.RunStatus",
      "dbt.task.base.BaseRunner",
      "dbt.contracts.graph.manifest.Manifest",
      "dbt_common.exceptions.DbtInternalError",
      "dbt.task.runnable.GraphRunnableTask"
    ],
    "dbt.deps.git.GitPackageMixin": [
      "dbt.clients.git"
    ],
    "dbt.deps.git.GitPinnedPackage": [
      "dbt.config.project.PartialProject",
      "dbt.deps.base.PinnedPackage",
      "dbt.events.types.EnsureGitInstalled",
      "dbt_common.events.functions.scrub_secrets",
      "dbt.clients.git",
      "dbt.deps.base.get_downloads_path",
      "dbt_common.events.functions.warn_or_error",
      "dbt_common.events.functions.fire_event",
      "dbt.config.renderer.PackageRenderer",
      "dbt.deps.git.GitPackageMixin",
      "dbt.contracts.project.ProjectPackageMetadata",
      "dbt_common.clients.system",
      "dbt.config.project.Project",
      "dbt.events.types.DepsUnpinned",
      "dbt.events.types.DepsScrubbedPackageName",
      "dbt_common.exceptions.ExecutableError",
      "dbt_common.events.functions.env_secrets"
    ],
    "dbt.deps.git.GitUnpinnedPackage": [
      "dbt.exceptions.MultipleVersionGitDepsError",
      "dbt.contracts.project.GitPackage",
      "dbt.clients.git",
      "dbt.deps.git.GitPackageMixin",
      "dbt.deps.base.UnpinnedPackage"
    ],
    "dbt.deps.registry.RegistryPinnedPackage": [
      "dbt.clients.registry",
      "dbt.deps.base.PinnedPackage",
      "dbt.contracts.project.RegistryPackageMetadata",
      "dbt.deps.registry.RegistryPackageMixin"
    ],
    "dbt.deps.registry.RegistryUnpinnedPackage": [
      "dbt.exceptions.PackageNotFoundError",
      "dbt.contracts.project.RegistryPackage",
      "dbt.version.get_installed_version",
      "dbt_common.exceptions.VersionsNotCompatibleError",
      "dbt.clients.registry",
      "dbt.exceptions.DependencyError",
      "dbt.deps.base.UnpinnedPackage",
      "dbt_common.semver",
      "dbt.deps.registry.RegistryPackageMixin",
      "dbt.exceptions.PackageVersionNotFoundError",
      "dbt.flags.get_flags"
    ],
    "dbt.deps.local.LocalPinnedPackage": [
      "dbt.config.project.PartialProject",
      "dbt.deps.base.PinnedPackage",
      "dbt.config.renderer.PackageRenderer",
      "dbt.config.project.Project",
      "dbt_common.events.functions.fire_event",
      "dbt.contracts.project.ProjectPackageMetadata",
      "dbt.events.types.DepsSymlinkNotAvailable",
      "dbt.deps.local.LocalPackageMixin",
      "dbt_common.clients.system",
      "dbt.events.types.DepsCreatingLocalSymlink"
    ],
    "dbt.deps.local.LocalUnpinnedPackage": [
      "dbt.contracts.project.LocalPackage",
      "dbt.deps.base.UnpinnedPackage",
      "dbt.deps.local.LocalPackageMixin"
    ],
    "dbt.deps.resolver.PackageListing": [
      "dbt.deps.registry.RegistryUnpinnedPackage",
      "dbt.deps.tarball.TarballUnpinnedPackage",
      "dbt.deps.base.PinnedPackage",
      "dbt.contracts.project.PackageSpec",
      "dbt.deps.git.GitUnpinnedPackage",
      "dbt.contracts.project.GitPackage",
      "dbt.contracts.project.PrivatePackage",
      "dbt.exceptions.MismatchedDependencyTypeError",
      "dbt.contracts.project.RegistryPackage",
      "dbt.contracts.project.LocalPackage",
      "dbt.deps.local.LocalUnpinnedPackage",
      "dbt.exceptions.DependencyError",
      "dbt.deps.base.UnpinnedPackage",
      "dbt.contracts.project.TarballPackage",
      "dbt.deps.base.BasePackage"
    ],
    "dbt.deps.tarball.TarballPinnedPackage": [
      "dbt.config.project.PartialProject",
      "dbt.deps.base.PinnedPackage",
      "dbt.deps.base.get_downloads_path",
      "dbt_common.events.functions.warn_or_error",
      "dbt.exceptions.env_secrets",
      "dbt.exceptions.DependencyError",
      "dbt.deps.tarball.TarballPackageMixin",
      "dbt_common.clients.system",
      "dbt.exceptions.scrub_secrets",
      "dbt.events.types.DepsScrubbedPackageName",
      "dbt_common.utils.connection.connection_exception_retry"
    ],
    "dbt.deps.tarball.TarballUnpinnedPackage": [
      "dbt.contracts.project.TarballPackage",
      "dbt.deps.base.UnpinnedPackage",
      "dbt.deps.tarball.TarballPackageMixin"
    ],
    "dbt.deps.base.PinnedPackage": [
      "dbt.contracts.project.ProjectPackageMetadata",
      "dbt_common.clients.system",
      "dbt_common.utils.connection.connection_exception_retry",
      "dbt.deps.base.BasePackage"
    ],
    "dbt.deps.base.UnpinnedPackage": [
      "dbt.deps.base.BasePackage"
    ],
    "dbt.runners.exposure_runner.ExposureRunner": [
      "dbt.runners.no_op_runner.NoOpRunner"
    ],
    "dbt.runners.no_op_runner.NoOpRunner": [
      "dbt.artifacts.schemas.run.RunResult",
      "dbt.artifacts.schemas.results.RunStatus",
      "dbt_common.events.functions.fire_event",
      "dbt.events.types.LogNodeNoOpResult",
      "dbt.task.base.BaseRunner",
      "dbt.contracts.graph.manifest.Manifest"
    ],
    "dbt.runners.saved_query_runner.SavedQueryRunner": [
      "dbt.runners.no_op_runner.NoOpRunner"
    ],
    "dbt.events.types.MainReportVersion": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.MainReportArgs": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.MainTrackingUserState": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.MissingProfileTarget": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.InvalidOptionYAML": [
      "dbt.events.base_types.ErrorLevel"
    ],
    "dbt.events.types.LogDbtProjectError": [
      "dbt.events.base_types.ErrorLevel"
    ],
    "dbt.events.types.LogDbtProfileError": [
      "dbt.events.base_types.ErrorLevel"
    ],
    "dbt.events.types.StarterProjectPath": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.ConfigFolderDirectory": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.NoSampleProfileFound": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.ProfileWrittenWithSample": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.ProfileWrittenWithTargetTemplateYAML": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.ProfileWrittenWithProjectTemplateYAML": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.SettingUpProfile": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.InvalidProfileTemplateYAML": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.ProjectNameAlreadyExists": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.ProjectCreated": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.DeprecatedModel": [
      "dbt_common.ui.line_wrap_message",
      "dbt_common.ui.warning_tag",
      "dbt_common.ui.deprecation_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.PackageRedirectDeprecation": [
      "dbt_common.ui.line_wrap_message",
      "dbt_common.ui.deprecation_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.PackageInstallPathDeprecation": [
      "dbt_common.ui.line_wrap_message",
      "dbt_common.ui.deprecation_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.ConfigSourcePathDeprecation": [
      "dbt_common.ui.line_wrap_message",
      "dbt_common.ui.deprecation_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.ConfigDataPathDeprecation": [
      "dbt_common.ui.line_wrap_message",
      "dbt_common.ui.deprecation_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.MetricAttributesRenamed": [
      "dbt_common.ui.line_wrap_message",
      "dbt_common.ui.deprecation_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.ExposureNameDeprecation": [
      "dbt_common.ui.line_wrap_message",
      "dbt_common.ui.deprecation_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.InternalDeprecation": [
      "dbt_common.ui.warning_tag",
      "dbt_common.ui.deprecation_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.EnvironmentVariableRenamed": [
      "dbt_common.ui.line_wrap_message",
      "dbt_common.ui.deprecation_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.ConfigLogPathDeprecation": [
      "dbt_common.ui.line_wrap_message",
      "dbt_common.ui.deprecation_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.ConfigTargetPathDeprecation": [
      "dbt_common.ui.line_wrap_message",
      "dbt_common.ui.deprecation_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.TestsConfigDeprecation": [
      "dbt_common.ui.line_wrap_message",
      "dbt_common.ui.deprecation_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.ProjectFlagsMovedDeprecation": [
      "dbt_common.ui.deprecation_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.SpacesInResourceNameDeprecation": [
      "dbt_common.ui.warning_tag",
      "dbt.events.base_types.DynamicLevel",
      "dbt_common.ui.line_wrap_message",
      "dbt_common.ui.deprecation_tag",
      "dbt_common.ui.error_tag",
      "dbt_common.events.base_types.EventLevel"
    ],
    "dbt.events.types.ResourceNamesWithSpacesDeprecation": [
      "dbt_common.ui.line_wrap_message",
      "dbt_common.ui.warning_tag",
      "dbt_common.ui.deprecation_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.PackageMaterializationOverrideDeprecation": [
      "dbt_common.ui.line_wrap_message",
      "dbt_common.ui.warning_tag",
      "dbt_common.ui.deprecation_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.SourceFreshnessProjectHooksNotRun": [
      "dbt_common.ui.line_wrap_message",
      "dbt_common.ui.warning_tag",
      "dbt_common.ui.deprecation_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.MFTimespineWithoutYamlConfigurationDeprecation": [
      "dbt_common.ui.line_wrap_message",
      "dbt_common.ui.warning_tag",
      "dbt_common.ui.deprecation_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.MFCumulativeTypeParamsDeprecation": [
      "dbt_common.ui.line_wrap_message",
      "dbt_common.ui.warning_tag",
      "dbt_common.ui.deprecation_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.MicrobatchMacroOutsideOfBatchesDeprecation": [
      "dbt_common.ui.line_wrap_message",
      "dbt_common.ui.warning_tag",
      "dbt_common.ui.deprecation_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.GenericJSONSchemaValidationDeprecation": [
      "dbt_common.ui.line_wrap_message",
      "dbt_common.ui.deprecation_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.UnexpectedJinjaBlockDeprecation": [
      "dbt_common.ui.line_wrap_message",
      "dbt_common.ui.deprecation_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.DuplicateYAMLKeysDeprecation": [
      "dbt_common.ui.line_wrap_message",
      "dbt_common.ui.deprecation_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.CustomTopLevelKeyDeprecation": [
      "dbt_common.ui.line_wrap_message",
      "dbt_common.ui.deprecation_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.CustomKeyInConfigDeprecation": [
      "dbt_common.ui.line_wrap_message",
      "dbt_common.ui.deprecation_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.CustomKeyInObjectDeprecation": [
      "dbt_common.ui.line_wrap_message",
      "dbt_common.ui.deprecation_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.DeprecationsSummary": [
      "dbt_common.ui.line_wrap_message",
      "dbt_common.events.format.pluralize",
      "dbt.events.base_types.WarnLevel",
      "dbt_common.ui.deprecation_tag"
    ],
    "dbt.events.types.CustomOutputPathInSourceFreshnessDeprecation": [
      "dbt_common.ui.line_wrap_message",
      "dbt_common.ui.deprecation_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.PropertyMovedToConfigDeprecation": [
      "dbt_common.ui.line_wrap_message",
      "dbt_common.ui.deprecation_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.WEOIncludeExcludeDeprecation": [
      "dbt_common.ui.line_wrap_message",
      "dbt_common.ui.deprecation_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.ModelParamUsageDeprecation": [
      "dbt_common.ui.line_wrap_message",
      "dbt_common.ui.deprecation_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.ModulesItertoolsUsageDeprecation": [
      "dbt_common.ui.line_wrap_message",
      "dbt_common.ui.deprecation_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.SourceOverrideDeprecation": [
      "dbt_common.ui.line_wrap_message",
      "dbt_common.ui.deprecation_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.EnvironmentVariableNamespaceDeprecation": [
      "dbt_common.ui.line_wrap_message",
      "dbt_common.ui.deprecation_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.MissingPlusPrefixDeprecation": [
      "dbt_common.ui.line_wrap_message",
      "dbt_common.ui.deprecation_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.ArgumentsPropertyInGenericTestDeprecation": [
      "dbt_common.ui.line_wrap_message",
      "dbt_common.ui.deprecation_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.MissingArgumentsPropertyInGenericTestDeprecation": [
      "dbt_common.ui.line_wrap_message",
      "dbt_common.ui.deprecation_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.InputFileDiffError": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.InvalidValueForField": [
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.ValidationWarning": [
      "dbt_common.ui.warning_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.ParsePerfInfoPath": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.PartialParsingErrorProcessingFile": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.PartialParsingError": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.PartialParsingSkipParsing": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.UnableToPartialParse": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.StateCheckVarsHash": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.PartialParsingNotEnabled": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.ParsedFileLoadFailed": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.PartialParsingEnabled": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.PartialParsingFile": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.InvalidDisabledTargetInTestNode": [
      "dbt_common.ui.warning_tag",
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.UnusedResourceConfigPath": [
      "dbt_common.ui.warning_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.SeedIncreased": [
      "dbt.constants.MAXIMUM_SEED_SIZE_NAME",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.SeedExceedsLimitSamePath": [
      "dbt.constants.MAXIMUM_SEED_SIZE_NAME",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.SeedExceedsLimitAndPathChanged": [
      "dbt.constants.MAXIMUM_SEED_SIZE_NAME",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.SeedExceedsLimitChecksumChanged": [
      "dbt.constants.MAXIMUM_SEED_SIZE_NAME",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.UnusedTables": [
      "dbt_common.ui.warning_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.WrongResourceSchemaFile": [
      "dbt_common.ui.line_wrap_message",
      "dbt_common.ui.warning_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.NoNodeForYamlKey": [
      "dbt_common.ui.warning_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.MacroNotFoundForPatch": [
      "dbt_common.ui.warning_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.NodeNotFoundOrDisabled": [
      "dbt_common.ui.warning_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.JinjaLogWarning": [
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.JinjaLogInfo": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.JinjaLogDebug": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.UnpinnedRefNewVersionAvailable": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.UpcomingReferenceDeprecation": [
      "dbt_common.ui.warning_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.DeprecatedReference": [
      "dbt_common.ui.warning_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.UnsupportedConstraintMaterialization": [
      "dbt_common.ui.line_wrap_message",
      "dbt_common.ui.warning_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.ParseInlineNodeError": [
      "dbt.events.base_types.ErrorLevel"
    ],
    "dbt.events.types.SemanticValidationFailure": [
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.UnversionedBreakingChange": [
      "dbt_common.ui.warning_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.WarnStateTargetEqual": [
      "dbt_common.ui.yellow",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.FreshnessConfigProblem": [
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.MicrobatchModelNoEventTimeInputs": [
      "dbt_common.ui.warning_tag",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.InvalidConcurrentBatchesConfig": [
      "dbt_common.ui.line_wrap_message",
      "dbt_common.ui.warning_tag",
      "dbt_common.events.format.pluralize",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.InvalidMacroAnnotation": [
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.GitSparseCheckoutSubdirectory": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.GitProgressCheckoutRevision": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.GitProgressUpdatingExistingDependency": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.GitProgressPullingNewDependency": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.GitNothingToDo": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.GitProgressUpdatedCheckoutRange": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.GitProgressCheckedOutAt": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.RegistryProgressGETRequest": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.RegistryProgressGETResponse": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.SelectorReportInvalidSelector": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.DepsNoPackagesFound": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.DepsStartPackageInstall": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.DepsInstallInfo": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.DepsUpdateAvailable": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.DepsUpToDate": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.DepsListSubdirectory": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.DepsNotifyUpdatesAvailable": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.RegistryIndexProgressGETRequest": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.RegistryIndexProgressGETResponse": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.RegistryResponseUnexpectedType": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.RegistryResponseMissingTopKeys": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.RegistryResponseMissingNestedKeys": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.RegistryResponseExtraNestedKeys": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.DepsSetDownloadDirectory": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.DepsUnpinned": [
      "dbt_common.ui.yellow",
      "dbt.events.base_types.WarnLevel",
      "dbt.constants.PIN_PACKAGE_URL"
    ],
    "dbt.events.types.NoNodesForSelectionCriteria": [
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.DepsLockUpdating": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.DepsAddPackage": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.DepsFoundDuplicatePackage": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.DepsScrubbedPackageName": [
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.ArtifactWritten": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.RunningOperationCaughtError": [
      "dbt.events.base_types.ErrorLevel"
    ],
    "dbt.events.types.CompileComplete": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.FreshnessCheckComplete": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.SeedHeader": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.SQLRunnerException": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.LogTestResult": [
      "dbt_common.ui.red",
      "dbt.events.base_types.DynamicLevel",
      "dbt_common.ui.green",
      "dbt_common.events.format.format_fancy_output_line",
      "dbt_common.ui.yellow",
      "dbt_common.events.base_types.EventLevel"
    ],
    "dbt.events.types.LogNodeResult": [
      "dbt.events.base_types.DynamicLevel"
    ],
    "dbt.events.types.LogStartLine": [
      "dbt_common.events.format.format_fancy_output_line",
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.LogModelResult": [
      "dbt_common.ui.red",
      "dbt.events.base_types.DynamicLevel",
      "dbt_common.ui.green",
      "dbt_common.events.format.format_fancy_output_line",
      "dbt_common.ui.yellow"
    ],
    "dbt.events.types.LogSnapshotResult": [
      "dbt_common.ui.red",
      "dbt.events.base_types.DynamicLevel",
      "dbt_common.ui.green",
      "dbt_common.events.format.format_fancy_output_line"
    ],
    "dbt.events.types.LogSeedResult": [
      "dbt_common.ui.red",
      "dbt.events.base_types.DynamicLevel",
      "dbt_common.ui.green",
      "dbt_common.events.format.format_fancy_output_line"
    ],
    "dbt.events.types.LogFreshnessResult": [
      "dbt_common.ui.red",
      "dbt.events.base_types.DynamicLevel",
      "dbt_common.ui.green",
      "dbt_common.events.format.format_fancy_output_line",
      "dbt_common.ui.yellow",
      "dbt_common.events.base_types.EventLevel"
    ],
    "dbt.events.types.LogNodeNoOpResult": [
      "dbt_common.ui.yellow",
      "dbt_common.events.format.format_fancy_output_line",
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.LogCancelLine": [
      "dbt.events.base_types.ErrorLevel",
      "dbt_common.ui.red",
      "dbt_common.events.format.format_fancy_output_line"
    ],
    "dbt.events.types.DefaultSelector": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.NodeStart": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.NodeFinished": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.QueryCancelationUnsupported": [
      "dbt_common.ui.yellow",
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.ConcurrencyLine": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.WritingInjectedSQLForNode": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.NodeCompiling": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.NodeExecuting": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.LogHookStartLine": [
      "dbt_common.events.format.format_fancy_output_line",
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.LogHookEndLine": [
      "dbt_common.ui.red",
      "dbt_common.ui.green",
      "dbt_common.events.format.format_fancy_output_line",
      "dbt.events.base_types.InfoLevel",
      "dbt_common.ui.yellow"
    ],
    "dbt.events.types.SkippingDetails": [
      "dbt_common.ui.yellow",
      "dbt_common.events.format.format_fancy_output_line",
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.NothingToDo": [
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.RunningOperationUncaughtError": [
      "dbt.events.base_types.ErrorLevel"
    ],
    "dbt.events.types.EndRunResult": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.NoNodesSelected": [
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.CommandCompleted": [
      "dbt_common.events.format.timestamp_to_datetime_string",
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.ShowNode": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.CompiledNode": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.SnapshotTimestampWarning": [
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.MicrobatchExecutionDebug": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.LogStartBatch": [
      "dbt_common.events.format.format_fancy_output_line",
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.LogBatchResult": [
      "dbt_common.ui.red",
      "dbt.events.base_types.DynamicLevel",
      "dbt_common.ui.green",
      "dbt_common.events.format.format_fancy_output_line",
      "dbt_common.ui.yellow"
    ],
    "dbt.events.types.CatchableExceptionOnRun": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.InternalErrorOnRun": [
      "dbt_common.ui.red",
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.GenericExceptionOnRun": [
      "dbt.events.base_types.ErrorLevel",
      "dbt_common.ui.red"
    ],
    "dbt.events.types.NodeConnectionReleaseError": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.FoundStats": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.MainKeyboardInterrupt": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.MainEncounteredError": [
      "dbt.events.base_types.ErrorLevel"
    ],
    "dbt.events.types.MainStackTrace": [
      "dbt.events.base_types.ErrorLevel"
    ],
    "dbt.events.types.TimingInfoCollected": [
      "dbt_common.events.format.timestamp_to_datetime_string",
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.LogDebugStackTrace": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.CheckCleanPath": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.ConfirmCleanPath": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.ProtectedCleanPath": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.FinishedCleanPaths": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.OpenCommand": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.RunResultWarning": [
      "dbt_common.ui.yellow",
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.RunResultFailure": [
      "dbt.events.base_types.ErrorLevel",
      "dbt_common.ui.red"
    ],
    "dbt.events.types.StatsLine": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.RunResultError": [
      "dbt.events.base_types.ErrorLevel"
    ],
    "dbt.events.types.RunResultErrorNoMessage": [
      "dbt.events.base_types.ErrorLevel"
    ],
    "dbt.events.types.SQLCompiledPath": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.CheckNodeTestFailure": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.EndOfRunSummary": [
      "dbt_common.events.format.pluralize",
      "dbt_common.ui.red",
      "dbt_common.ui.green",
      "dbt.events.base_types.InfoLevel",
      "dbt_common.ui.yellow"
    ],
    "dbt.events.types.MarkSkippedChildren": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.LogSkipBecauseError": [
      "dbt.events.base_types.ErrorLevel",
      "dbt_common.ui.red",
      "dbt_common.events.format.format_fancy_output_line"
    ],
    "dbt.events.types.EnsureGitInstalled": [
      "dbt.events.base_types.ErrorLevel"
    ],
    "dbt.events.types.DepsCreatingLocalSymlink": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.DepsSymlinkNotAvailable": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.DisableTracking": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.SendingEvent": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.SendEventFailure": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.FlushEvents": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.FlushEventsFailure": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.TrackingInitializeFailure": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.RunResultWarningMessage": [
      "dbt.events.base_types.WarnLevel"
    ],
    "dbt.events.types.DebugCmdOut": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.DebugCmdResult": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.ListCmdOut": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.ResourceReport": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.types.ArtifactUploadError": [
      "dbt.events.base_types.ErrorLevel"
    ],
    "dbt.events.types.ArtifactUploadSuccess": [
      "dbt.events.base_types.InfoLevel"
    ],
    "dbt.events.types.ArtifactUploadSkipped": [
      "dbt.events.base_types.DebugLevel"
    ],
    "dbt.events.base_types.CoreBaseEvent": [
      "dbt_common.events.base_types.BaseEvent",
      "dbt.events.core_types_pb2"
    ],
    "dbt.events.base_types.DynamicLevel": [
      "dbt.events.base_types.CoreBaseEvent",
      "dbt_common.events.base_types.DynamicLevel"
    ],
    "dbt.events.base_types.TestLevel": [
      "dbt.events.base_types.CoreBaseEvent",
      "dbt_common.events.base_types.TestLevel"
    ],
    "dbt.events.base_types.DebugLevel": [
      "dbt.events.base_types.CoreBaseEvent",
      "dbt_common.events.base_types.DebugLevel"
    ],
    "dbt.events.base_types.InfoLevel": [
      "dbt.events.base_types.CoreBaseEvent",
      "dbt_common.events.base_types.InfoLevel"
    ],
    "dbt.events.base_types.WarnLevel": [
      "dbt.events.base_types.CoreBaseEvent",
      "dbt_common.events.base_types.WarnLevel"
    ],
    "dbt.events.base_types.ErrorLevel": [
      "dbt.events.base_types.CoreBaseEvent",
      "dbt_common.events.base_types.ErrorLevel"
    ],
    "dbt.artifacts.resources.types.AccessType": [
      "dbt_common.dataclass_schema.StrEnum"
    ],
    "dbt.artifacts.resources.types.NodeType": [
      "dbt_common.dataclass_schema.StrEnum"
    ],
    "dbt.artifacts.resources.types.RunHookType": [
      "dbt_common.dataclass_schema.StrEnum"
    ],
    "dbt.artifacts.resources.types.ModelLanguage": [
      "dbt_common.dataclass_schema.StrEnum"
    ],
    "dbt.artifacts.resources.types.ModelHookType": [
      "dbt_common.dataclass_schema.StrEnum"
    ],
    "dbt.artifacts.resources.types.TimePeriod": [
      "dbt_common.dataclass_schema.StrEnum"
    ],
    "dbt.artifacts.resources.types.BatchSize": [
      "dbt_common.dataclass_schema.StrEnum"
    ],
    "dbt.artifacts.resources.base.BaseResource": [
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt.artifacts.resources.types.NodeType"
    ],
    "dbt.artifacts.resources.base.GraphResource": [
      "dbt.artifacts.resources.base.BaseResource"
    ],
    "dbt.artifacts.resources.base.FileHash": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.artifacts.resources.base.Docs": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.artifacts.exceptions.schemas.IncompatibleSchemaError": [
      "dbt_common.exceptions.DbtRuntimeError"
    ],
    "dbt.artifacts.schemas.results.TimingInfo": [
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt_common.events.helpers.datetime_to_json_string"
    ],
    "dbt.artifacts.schemas.results.RunningStatus": [
      "dbt_common.dataclass_schema.StrEnum"
    ],
    "dbt.artifacts.schemas.results.NodeStatus": [
      "dbt_common.dataclass_schema.StrEnum"
    ],
    "dbt.artifacts.schemas.results.RunStatus": [
      "dbt_common.dataclass_schema.StrEnum"
    ],
    "dbt.artifacts.schemas.results.TestStatus": [
      "dbt_common.dataclass_schema.StrEnum"
    ],
    "dbt.artifacts.schemas.results.FreshnessStatus": [
      "dbt_common.dataclass_schema.StrEnum"
    ],
    "dbt.artifacts.schemas.results.BaseResult": [
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt_common.utils.cast_to_int",
      "dbt_common.utils.cast_to_str"
    ],
    "dbt.artifacts.schemas.results.NodeResult": [
      "dbt.contracts.graph.nodes.ResultNode",
      "dbt.artifacts.schemas.results.BaseResult"
    ],
    "dbt.artifacts.schemas.results.ExecutionResult": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.artifacts.schemas.batch_results.BatchResults": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.artifacts.schemas.base.Writable": [
      "dbt_common.clients.system.write_json"
    ],
    "dbt.artifacts.schemas.base.Readable": [
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt_common.clients.system.read_json"
    ],
    "dbt.artifacts.schemas.base.BaseArtifactMetadata": [
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt.version.__version__",
      "dbt_common.invocation.get_invocation_id",
      "dbt_common.invocation.get_invocation_started_at",
      "dbt_common.events.functions.get_metadata_vars"
    ],
    "dbt.artifacts.schemas.base.VersionedSchema": [
      "dbt_common.dataclass_schema.dbtClassMixin",
      "cls.dbt_schema_version",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt_common.clients.system.read_json",
      "dbt.artifacts.exceptions.IncompatibleSchemaError"
    ],
    "dbt.artifacts.schemas.base.ArtifactMixin": [
      "dbt.artifacts.schemas.base.Writable",
      "dbt.artifacts.schemas.base.Readable",
      "cls.dbt_schema_version",
      "dbt.artifacts.schemas.base.VersionedSchema",
      "dbt_common.exceptions.DbtInternalError"
    ],
    "dbt.artifacts.resources.v1.catalog.CatalogWriteIntegrationConfig": [
      "dbt.adapters.catalogs.CatalogIntegrationConfig"
    ],
    "dbt.artifacts.resources.v1.catalog.Catalog": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.artifacts.resources.v1.documentation.Documentation": [
      "dbt.artifacts.resources.base.BaseResource",
      "dbt.artifacts.resources.types.NodeType"
    ],
    "dbt.artifacts.resources.v1.config.Severity": [
      "dbt.artifacts.resources.v1.config.str"
    ],
    "dbt.artifacts.resources.v1.config.ContractConfig": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.artifacts.resources.v1.config.Hook": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.artifacts.resources.v1.config.NodeAndTestConfig": [
      "dbt_common.contracts.config.base.CompareBehavior",
      "dbt_common.contracts.config.base.BaseConfig",
      "dbt_common.contracts.config.metadata.ShowBehavior",
      "dbt_common.contracts.config.base.MergeBehavior"
    ],
    "dbt.artifacts.resources.v1.config.NodeConfig": [
      "dbt.artifacts.resources.base.Docs",
      "dbt_common.contracts.config.materialization.OnConfigurationChangeOption",
      "dbt.artifacts.resources.types.ModelHookType",
      "dbt.artifacts.resources.v1.config.NodeAndTestConfig",
      "dbt.hooks",
      "dbt_common.dataclass_schema.ValidationError",
      "dbt.artifacts.utils.validation.validate_color",
      "dbt_common.contracts.config.base.MergeBehavior"
    ],
    "dbt.artifacts.resources.v1.config.TestConfig": [
      "dbt_common.contracts.config.base.CompareBehavior",
      "dbt_common.dataclass_schema.ValidationError",
      "dbt.artifacts.resources.v1.config.NodeAndTestConfig"
    ],
    "dbt.artifacts.resources.v1.source_definition.SourceConfig": [
      "dbt.artifacts.resources.v1.components.FreshnessThreshold",
      "dbt.artifacts.resources.v1.config.MergeBehavior",
      "dbt.artifacts.resources.v1.config.BaseConfig"
    ],
    "dbt.artifacts.resources.v1.source_definition.ExternalPartition": [
      "dbt_common.contracts.config.properties.AdditionalPropertiesAllowed",
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.artifacts.resources.v1.source_definition.ExternalTable": [
      "dbt_common.contracts.util.Mergeable",
      "dbt_common.contracts.config.properties.AdditionalPropertiesAllowed"
    ],
    "dbt.artifacts.resources.v1.source_definition.ParsedSourceMandatory": [
      "dbt.artifacts.resources.base.GraphResource",
      "dbt.artifacts.resources.types.NodeType",
      "dbt.artifacts.resources.v1.components.HasRelationMetadata"
    ],
    "dbt.artifacts.resources.v1.source_definition.SourceDefinition": [
      "dbt.artifacts.resources.v1.components.FreshnessThreshold",
      "dbt.artifacts.resources.v1.source_definition.ParsedSourceMandatory",
      "dbt.artifacts.resources.v1.components.ColumnInfo",
      "dbt.artifacts.resources.v1.components.Quoting"
    ],
    "dbt.artifacts.resources.v1.analysis.Analysis": [
      "dbt.artifacts.resources.v1.components.CompiledResource",
      "dbt.artifacts.resources.types.NodeType"
    ],
    "dbt.artifacts.resources.v1.semantic_layer_components.WhereFilter": [
      "dbt_semantic_interfaces.call_parameter_sets.JinjaCallParameterSets",
      "dbt_semantic_interfaces.parsing.where_filter.jinja_object_parser.QueryItemLocation",
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt_semantic_interfaces.parsing.where_filter.jinja_object_parser.JinjaObjectParser"
    ],
    "dbt.artifacts.resources.v1.semantic_layer_components.WhereFilterIntersection": [
      "dbt_semantic_interfaces.call_parameter_sets.JinjaCallParameterSets",
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.artifacts.resources.v1.semantic_layer_components.FileSlice": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.artifacts.resources.v1.semantic_layer_components.SourceFileMetadata": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.artifacts.resources.v1.unit_test_definition.UnitTestConfig": [
      "dbt_common.contracts.config.metadata.ShowBehavior",
      "dbt_common.contracts.config.base.CompareBehavior",
      "dbt.artifacts.resources.v1.config.metas",
      "dbt.artifacts.resources.v1.config.list_str",
      "dbt_common.contracts.config.base.MergeBehavior",
      "dbt_common.contracts.config.base.BaseConfig"
    ],
    "dbt.artifacts.resources.v1.unit_test_definition.UnitTestFormat": [
      "dbt_common.dataclass_schema.StrEnum"
    ],
    "dbt.artifacts.resources.v1.unit_test_definition.UnitTestInputFixture": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.artifacts.resources.v1.unit_test_definition.UnitTestOverrides": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.artifacts.resources.v1.unit_test_definition.UnitTestNodeVersions": [
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt.artifacts.resources.NodeVersion"
    ],
    "dbt.artifacts.resources.v1.unit_test_definition.UnitTestOutputFixture": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.artifacts.resources.v1.unit_test_definition.UnitTestDefinition": [
      "dbt.artifacts.resources.base.GraphResource",
      "dbt.artifacts.resources.DependsOn",
      "dbt.artifacts.resources.v1.unit_test_definition.UnitTestDefinitionMandatory",
      "dbt.artifacts.resources.NodeVersion"
    ],
    "dbt.artifacts.resources.v1.semantic_model.SemanticLayerElementConfig": [
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt_common.contracts.config.base.MergeBehavior"
    ],
    "dbt.artifacts.resources.v1.semantic_model.Defaults": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.artifacts.resources.v1.semantic_model.NodeRelation": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.artifacts.resources.v1.semantic_model.DimensionValidityParams": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.artifacts.resources.v1.semantic_model.DimensionTypeParams": [
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt_semantic_interfaces.type_enums.TimeGranularity"
    ],
    "dbt.artifacts.resources.v1.semantic_model.Dimension": [
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt.artifacts.resources.SourceFileMetadata",
      "dbt_semantic_interfaces.type_enums.DimensionType",
      "dbt_semantic_interfaces.references.DimensionReference",
      "dbt_semantic_interfaces.references.TimeDimensionReference"
    ],
    "dbt.artifacts.resources.v1.semantic_model.Entity": [
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt_semantic_interfaces.type_enums.EntityType",
      "dbt_semantic_interfaces.references.EntityReference"
    ],
    "dbt.artifacts.resources.v1.semantic_model.MeasureAggregationParameters": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.artifacts.resources.v1.semantic_model.NonAdditiveDimension": [
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt_semantic_interfaces.type_enums.AggregationType"
    ],
    "dbt.artifacts.resources.v1.semantic_model.Measure": [
      "dbt_semantic_interfaces.references.MeasureReference",
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt_semantic_interfaces.type_enums.AggregationType"
    ],
    "dbt.artifacts.resources.v1.semantic_model.SemanticModelConfig": [
      "dbt_common.contracts.config.base.CompareBehavior",
      "dbt_common.contracts.config.base.BaseConfig",
      "dbt_common.contracts.config.base.MergeBehavior"
    ],
    "dbt.artifacts.resources.v1.semantic_model.SemanticModel": [
      "dbt.artifacts.resources.base.GraphResource",
      "dbt_semantic_interfaces.references.LinkableElementReference",
      "dbt.artifacts.resources.SourceFileMetadata",
      "dbt.artifacts.resources.v1.components.DependsOn",
      "dbt_semantic_interfaces.references.SemanticModelReference",
      "dbt_semantic_interfaces.references.EntityReference",
      "dbt_semantic_interfaces.references.TimeDimensionReference",
      "dbt_semantic_interfaces.references.MeasureReference",
      "dbt.artifacts.resources.v1.components.RefArgs"
    ],
    "dbt.artifacts.resources.v1.exposure.ExposureType": [
      "dbt_common.dataclass_schema.StrEnum"
    ],
    "dbt.artifacts.resources.v1.exposure.MaturityType": [
      "dbt_common.dataclass_schema.StrEnum"
    ],
    "dbt.artifacts.resources.v1.exposure.ExposureConfig": [
      "dbt_common.contracts.config.base.BaseConfig"
    ],
    "dbt.artifacts.resources.v1.exposure.Exposure": [
      "dbt.artifacts.resources.base.GraphResource",
      "dbt.artifacts.resources.v1.components.DependsOn",
      "dbt.artifacts.resources.types.NodeType",
      "dbt.artifacts.resources.v1.owner.Owner",
      "dbt.artifacts.resources.v1.components.RefArgs"
    ],
    "dbt.artifacts.resources.v1.hook.HookNode": [
      "dbt.artifacts.resources.v1.components.CompiledResource",
      "dbt.artifacts.resources.types.NodeType"
    ],
    "dbt.artifacts.resources.v1.saved_query.ExportConfig": [
      "dbt_semantic_interfaces.type_enums.export_destination_type.ExportDestinationType",
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.artifacts.resources.v1.saved_query.Export": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.artifacts.resources.v1.saved_query.QueryParams": [
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt.artifacts.resources.v1.semantic_layer_components.WhereFilterIntersection"
    ],
    "dbt.artifacts.resources.v1.saved_query.SavedQueryCache": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.artifacts.resources.v1.saved_query.SavedQueryConfig": [
      "dbt_common.contracts.config.base.CompareBehavior",
      "dbt_semantic_interfaces.type_enums.export_destination_type.ExportDestinationType",
      "dbt_common.contracts.config.base.BaseConfig",
      "dbt_common.contracts.config.base.MergeBehavior"
    ],
    "dbt.artifacts.resources.v1.saved_query.SavedQueryMandatory": [
      "dbt.artifacts.resources.base.GraphResource"
    ],
    "dbt.artifacts.resources.v1.saved_query.SavedQuery": [
      "dbt.artifacts.resources.v1.components.DependsOn",
      "dbt.artifacts.resources.types.NodeType",
      "dbt.artifacts.resources.v1.saved_query.SavedQueryMandatory",
      "dbt_common.contracts.config.metadata.ShowBehavior",
      "dbt_common.contracts.config.base.CompareBehavior",
      "dbt.artifacts.resources.v1.config.metas",
      "dbt.artifacts.resources.v1.config.list_str",
      "dbt.artifacts.resources.v1.semantic_layer_components.SourceFileMetadata",
      "dbt.artifacts.resources.v1.components.RefArgs",
      "dbt_common.contracts.config.base.MergeBehavior"
    ],
    "dbt.artifacts.resources.v1.owner.Owner": [
      "dbt_common.contracts.config.properties.AdditionalPropertiesAllowed"
    ],
    "dbt.artifacts.resources.v1.generic_test.TestMetadata": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.artifacts.resources.v1.generic_test.GenericTest": [
      "dbt.artifacts.resources.v1.components.CompiledResource",
      "dbt.artifacts.resources.types.NodeType",
      "dbt.artifacts.resources.v1.config.TestConfig"
    ],
    "dbt.artifacts.resources.v1.model.ModelBuildAfter": [
      "dbt_common.dataclass_schema.ExtensibleDbtClassMixin",
      "dbt.artifacts.resources.types.TimePeriod"
    ],
    "dbt.artifacts.resources.v1.model.ModelFreshness": [
      "dbt_common.dataclass_schema.ExtensibleDbtClassMixin",
      "dbt_common.contracts.util.Mergeable"
    ],
    "dbt.artifacts.resources.v1.model.ModelConfig": [
      "dbt_common.contracts.config.base.MergeBehavior",
      "dbt.artifacts.resources.types.AccessType",
      "dbt.artifacts.resources.v1.config.NodeConfig"
    ],
    "dbt.artifacts.resources.v1.model.CustomGranularity": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.artifacts.resources.v1.model.TimeSpine": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.artifacts.resources.v1.model.Model": [
      "dbt.artifacts.resources.v1.components.CompiledResource",
      "dbt.artifacts.resources.types.NodeType",
      "dbt.artifacts.resources.v1.components.DeferRelation",
      "dbt.artifacts.resources.types.AccessType",
      "dbt_common.contracts.constraints.ModelLevelConstraint",
      "dbt.artifacts.resources.v1.components.NodeVersion"
    ],
    "dbt.artifacts.resources.v1.metric.MetricInputMeasure": [
      "dbt_semantic_interfaces.references.MeasureReference",
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt.artifacts.resources.v1.semantic_layer_components.WhereFilterIntersection"
    ],
    "dbt.artifacts.resources.v1.metric.MetricTimeWindow": [
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt_semantic_interfaces.type_enums.TimeGranularity"
    ],
    "dbt.artifacts.resources.v1.metric.MetricInput": [
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt_semantic_interfaces.references.MetricReference",
      "dbt.artifacts.resources.v1.semantic_layer_components.WhereFilterIntersection"
    ],
    "dbt.artifacts.resources.v1.metric.ConstantPropertyInput": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.artifacts.resources.v1.metric.ConversionTypeParams": [
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt_semantic_interfaces.type_enums.ConversionCalculationType"
    ],
    "dbt.artifacts.resources.v1.metric.CumulativeTypeParams": [
      "dbt_semantic_interfaces.type_enums.PeriodAggregation",
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.artifacts.resources.v1.metric.MetricTypeParams": [
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt_semantic_interfaces.type_enums.TimeGranularity"
    ],
    "dbt.artifacts.resources.v1.metric.MetricConfig": [
      "dbt_common.contracts.config.base.CompareBehavior",
      "dbt_common.contracts.config.base.BaseConfig",
      "dbt_common.contracts.config.base.MergeBehavior"
    ],
    "dbt.artifacts.resources.v1.metric.Metric": [
      "dbt.artifacts.resources.base.GraphResource",
      "dbt.artifacts.resources.v1.components.DependsOn",
      "dbt.artifacts.resources.types.NodeType",
      "dbt.artifacts.resources.v1.components.RefArgs",
      "dbt_semantic_interfaces.type_enums.MetricType",
      "dbt_semantic_interfaces.references.MeasureReference",
      "dbt.artifacts.resources.v1.semantic_layer_components.SourceFileMetadata",
      "dbt_common.contracts.config.base.MergeBehavior",
      "dbt.artifacts.resources.v1.semantic_layer_components.WhereFilterIntersection"
    ],
    "dbt.artifacts.resources.v1.sql_operation.SqlOperation": [
      "dbt.artifacts.resources.v1.components.CompiledResource",
      "dbt.artifacts.resources.types.NodeType"
    ],
    "dbt.artifacts.resources.v1.seed.SeedConfig": [
      "dbt_common.dataclass_schema.ValidationError",
      "dbt.artifacts.resources.v1.config.NodeConfig"
    ],
    "dbt.artifacts.resources.v1.seed.Seed": [
      "dbt.artifacts.resources.v1.components.ParsedResource",
      "dbt.artifacts.resources.v1.components.MacroDependsOn",
      "dbt.artifacts.resources.types.NodeType",
      "dbt.artifacts.resources.v1.components.DeferRelation"
    ],
    "dbt.artifacts.resources.v1.singular_test.SingularTest": [
      "dbt.artifacts.resources.v1.components.CompiledResource",
      "dbt.artifacts.resources.types.NodeType",
      "dbt.artifacts.resources.v1.config.TestConfig"
    ],
    "dbt.artifacts.resources.v1.group.GroupConfig": [
      "dbt_common.contracts.config.base.BaseConfig",
      "dbt_common.contracts.config.base.MergeBehavior"
    ],
    "dbt.artifacts.resources.v1.group.Group": [
      "dbt.artifacts.resources.base.BaseResource",
      "dbt.artifacts.resources.types.NodeType",
      "dbt.artifacts.resources.v1.owner.Owner"
    ],
    "dbt.artifacts.resources.v1.components.MacroDependsOn": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.artifacts.resources.v1.components.DependsOn": [
      "dbt.artifacts.resources.v1.components.MacroDependsOn"
    ],
    "dbt.artifacts.resources.v1.components.RefArgs": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.artifacts.resources.v1.components.ColumnConfig": [
      "dbt_common.contracts.config.base.BaseConfig",
      "dbt_common.contracts.config.base.MergeBehavior"
    ],
    "dbt.artifacts.resources.v1.components.ColumnInfo": [
      "dbt_common.dataclass_schema.ExtensibleDbtClassMixin",
      "dbt_common.contracts.constraints.ColumnLevelConstraint",
      "dbt_common.contracts.config.properties.AdditionalPropertiesMixin",
      "dbt_semantic_interfaces.type_enums.TimeGranularity"
    ],
    "dbt.artifacts.resources.v1.components.InjectedCTE": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.artifacts.resources.v1.components.Contract": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.artifacts.resources.v1.components.Quoting": [
      "dbt_common.contracts.util.Mergeable",
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.artifacts.resources.v1.components.Time": [
      "dbt_common.contracts.util.Mergeable",
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt.artifacts.resources.types.TimePeriod"
    ],
    "dbt.artifacts.resources.v1.components.FreshnessThreshold": [
      "dbt.artifacts.schemas.results.FreshnessStatus",
      "dbt_common.contracts.util.Mergeable",
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.artifacts.resources.v1.components.HasRelationMetadata": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.artifacts.resources.v1.components.DeferRelation": [
      "dbt.artifacts.resources.types.NodeType",
      "dbt.artifacts.resources.v1.components.HasRelationMetadata",
      "dbt.artifacts.resources.v1.config.NodeConfig"
    ],
    "dbt.artifacts.resources.v1.components.ParsedResourceMandatory": [
      "dbt.artifacts.resources.base.GraphResource",
      "dbt.artifacts.resources.base.FileHash",
      "dbt.artifacts.resources.v1.components.HasRelationMetadata",
      "dbt.artifacts.resources.v1.config.NodeConfig"
    ],
    "dbt.artifacts.resources.v1.components.ParsedResource": [
      "dbt.artifacts.resources.base.Docs",
      "dbt.artifacts.resources.v1.components.ParsedResourceMandatory"
    ],
    "dbt.artifacts.resources.v1.components.CompiledResource": [
      "dbt.artifacts.resources.v1.components.ParsedResource"
    ],
    "dbt.artifacts.resources.v1.macro.MacroArgument": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.artifacts.resources.v1.macro.Macro": [
      "dbt.artifacts.resources.base.Docs",
      "dbt.artifacts.resources.base.BaseResource",
      "dbt.artifacts.resources.types.NodeType",
      "dbt.artifacts.resources.types.ModelLanguage",
      "dbt.artifacts.resources.v1.components.MacroDependsOn"
    ],
    "dbt.artifacts.resources.v1.snapshot.SnapshotMetaColumnNames": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.artifacts.resources.v1.snapshot.SnapshotConfig": [
      "self.snapshot_meta_column_names.dbt_updated_at",
      "self.snapshot_meta_column_names.dbt_valid_from",
      "dbt_common.dataclass_schema.ValidationError",
      "self.snapshot_meta_column_names.dbt_scd_id",
      "dbt.artifacts.resources.v1.config.NodeConfig",
      "self.snapshot_meta_column_names.dbt_is_deleted",
      "self.snapshot_meta_column_names.dbt_valid_to"
    ],
    "dbt.artifacts.resources.v1.snapshot.Snapshot": [
      "dbt.artifacts.resources.v1.components.CompiledResource",
      "dbt.artifacts.resources.types.NodeType",
      "dbt.artifacts.resources.v1.components.DeferRelation"
    ],
    "dbt.artifacts.schemas.catalog.v1.catalog.CatalogMetadata": [
      "dbt.artifacts.schemas.base.BaseArtifactMetadata",
      "CatalogArtifact.dbt_schema_version"
    ],
    "dbt.artifacts.schemas.catalog.v1.catalog.CatalogResults": [
      "dbt_common.contracts.metadata.CatalogTable",
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.artifacts.schemas.catalog.v1.catalog.CatalogArtifact": [
      "dbt.artifacts.schemas.base.schema_version",
      "dbt_common.contracts.metadata.CatalogTable",
      "dbt.artifacts.schemas.base.ArtifactMixin",
      "dbt.artifacts.schemas.catalog.v1.catalog.CatalogResults"
    ],
    "dbt.artifacts.schemas.manifest.v12.manifest.ManifestMetadata": [
      "dbt.artifacts.schemas.base.BaseArtifactMetadata",
      "WritableManifest.dbt_schema_version",
      "dbt.artifacts.resources.v1.components.Quoting"
    ],
    "dbt.artifacts.schemas.manifest.v12.manifest.WritableManifest": [
      "dbt.artifacts.resources.SourceDefinition",
      "dbt.artifacts.schemas.base.schema_version",
      "dbt.artifacts.schemas.upgrades.upgrade_manifest_json",
      "dbt.artifacts.resources.UnitTestDefinition",
      "dbt.artifacts.resources.Macro",
      "dbt.artifacts.resources.Exposure",
      "dbt.artifacts.resources.SavedQuery",
      "cls.dbt_schema_version",
      "dbt.artifacts.resources.Metric",
      "dbt.artifacts.resources.Group",
      "dbt.artifacts.resources.Documentation",
      "dbt.artifacts.schemas.base.get_artifact_schema_version",
      "cls.dbt_schema_version.version",
      "dbt.artifacts.schemas.base.ArtifactMixin",
      "dbt.artifacts.resources.SemanticModel",
      "dbt_common.exceptions.DbtInternalError"
    ],
    "dbt.artifacts.schemas.freshness.v3.freshness.SourceFreshnessResult": [
      "dbt.artifacts.schemas.results.FreshnessStatus",
      "dbt.artifacts.schemas.results.NodeResult",
      "dbt.contracts.graph.nodes.SourceDefinition"
    ],
    "dbt.artifacts.schemas.freshness.v3.freshness.PartialSourceFreshnessResult": [
      "dbt.artifacts.schemas.results.FreshnessStatus",
      "dbt.artifacts.schemas.results.NodeResult"
    ],
    "dbt.artifacts.schemas.freshness.v3.freshness.FreshnessMetadata": [
      "dbt.artifacts.schemas.base.BaseArtifactMetadata",
      "FreshnessExecutionResultArtifact.dbt_schema_version"
    ],
    "dbt.artifacts.schemas.freshness.v3.freshness.FreshnessResult": [
      "dbt.artifacts.schemas.results.ExecutionResult"
    ],
    "dbt.artifacts.schemas.freshness.v3.freshness.SourceFreshnessOutput": [
      "dbt.artifacts.schemas.results.FreshnessStatus",
      "dbt.artifacts.schemas.results.TimingInfo",
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt.artifacts.resources.FreshnessThreshold"
    ],
    "dbt.artifacts.schemas.freshness.v3.freshness.FreshnessErrorEnum": [
      "dbt_common.dataclass_schema.StrEnum"
    ],
    "dbt.artifacts.schemas.freshness.v3.freshness.SourceFreshnessRuntimeError": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.artifacts.schemas.freshness.v3.freshness.FreshnessExecutionResultArtifact": [
      "dbt.artifacts.schemas.base.schema_version",
      "dbt.artifacts.schemas.base.ArtifactMixin",
      "dbt.artifacts.schemas.base.VersionedSchema"
    ],
    "dbt.artifacts.schemas.run.v5.run.RunResult": [
      "dbt.artifacts.schemas.results.NodeResult",
      "dbt.artifacts.schemas.results.RunStatus",
      "dbt.artifacts.schemas.batch_results.BatchResults",
      "dbt.artifacts.schemas.results.ResultNode"
    ],
    "dbt.artifacts.schemas.run.v5.run.RunResultsMetadata": [
      "dbt.artifacts.schemas.base.BaseArtifactMetadata",
      "RunResultsArtifact.dbt_schema_version"
    ],
    "dbt.artifacts.schemas.run.v5.run.RunResultOutput": [
      "dbt.artifacts.schemas.batch_results.BatchResults",
      "dbt.artifacts.schemas.results.BaseResult"
    ],
    "dbt.artifacts.schemas.run.v5.run.RunExecutionResult": [
      "dbt.artifacts.schemas.results.ExecutionResult"
    ],
    "dbt.artifacts.schemas.run.v5.run.RunResultsArtifact": [
      "dbt.artifacts.schemas.base.schema_version",
      "dbt.artifacts.schemas.results.ExecutionResult",
      "cls.dbt_schema_version",
      "dbt.artifacts.schemas.base.get_artifact_schema_version",
      "dbt_common.clients.system.write_json",
      "dbt.exceptions.scrub_secrets",
      "dbt.artifacts.schemas.base.ArtifactMixin",
      "dbt_common.constants.SECRET_ENV_PREFIX"
    ],
    "dbt.materializations.incremental.microbatch.MicrobatchBuilder": [
      "dbt.exceptions.DbtInternalError",
      "dbt.exceptions.DbtRuntimeError",
      "dbt.contracts.graph.nodes.ModelNode",
      "dbt.contracts.graph.nodes.NodeConfig",
      "dbt.artifacts.schemas.batch_results.BatchType",
      "dbt.artifacts.resources.types.BatchSize"
    ],
    "dbt.contracts.graph.metrics.MetricReference": [
      "dbt.contracts.graph.metrics.object"
    ],
    "dbt.contracts.graph.metrics.ResolvedMetricReference": [
      "dbt.contracts.graph.metrics.MetricReference",
      "dbt.contracts.graph.manifest.Metric",
      "dbt.contracts.graph.manifest.Manifest"
    ],
    "dbt.contracts.graph.unparsed.UnparsedBaseNode": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.contracts.graph.unparsed.HasCode": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.contracts.graph.unparsed.UnparsedMacro": [
      "dbt.node_types.NodeType",
      "dbt.contracts.graph.unparsed.HasCode",
      "dbt.contracts.graph.unparsed.UnparsedBaseNode"
    ],
    "dbt.contracts.graph.unparsed.UnparsedGenericTest": [
      "dbt.node_types.NodeType",
      "dbt.contracts.graph.unparsed.HasCode",
      "dbt.contracts.graph.unparsed.UnparsedBaseNode"
    ],
    "dbt.contracts.graph.unparsed.UnparsedNode": [
      "dbt.node_types.NodeType",
      "dbt.contracts.graph.unparsed.HasCode",
      "dbt.contracts.graph.unparsed.UnparsedBaseNode"
    ],
    "dbt.contracts.graph.unparsed.UnparsedRunHook": [
      "dbt.contracts.graph.unparsed.UnparsedNode",
      "dbt.node_types.NodeType"
    ],
    "dbt.contracts.graph.unparsed.HasColumnProps": [
      "dbt_common.dataclass_schema.ExtensibleDbtClassMixin",
      "dbt.artifacts.resources.Docs",
      "dbt_common.contracts.config.properties.AdditionalPropertiesMixin"
    ],
    "dbt.contracts.graph.unparsed.HasColumnAndTestProps": [
      "dbt.contracts.graph.unparsed.HasColumnProps"
    ],
    "dbt.contracts.graph.unparsed.HasColumnDocs": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.contracts.graph.unparsed.HasYamlMetadata": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.contracts.graph.unparsed.UnparsedColumn": [
      "dbt.contracts.graph.unparsed.HasColumnAndTestProps",
      "dbt.contracts.graph.unparsed.HasConfig"
    ],
    "dbt.contracts.graph.unparsed.HasColumnTests": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.contracts.graph.unparsed.UnparsedVersion": [
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt.artifacts.resources.Docs",
      "dbt_common.helper_types.IncludeExclude",
      "dbt.artifacts.resources.NodeVersion",
      "dbt.exceptions.ParsingError",
      "dbt_common.helper_types"
    ],
    "dbt.contracts.graph.unparsed.UnparsedAnalysisUpdate": [
      "dbt.contracts.graph.unparsed.HasColumnProps",
      "dbt.contracts.graph.unparsed.HasYamlMetadata",
      "dbt.contracts.graph.unparsed.HasColumnDocs",
      "dbt.contracts.graph.unparsed.HasConfig"
    ],
    "dbt.contracts.graph.unparsed.UnparsedSingularTestUpdate": [
      "dbt.contracts.graph.unparsed.HasColumnProps",
      "dbt.contracts.graph.unparsed.HasYamlMetadata",
      "dbt.contracts.graph.unparsed.HasConfig"
    ],
    "dbt.contracts.graph.unparsed.UnparsedNodeUpdate": [
      "dbt.contracts.graph.unparsed.HasColumnTests",
      "dbt.contracts.graph.unparsed.HasConfig",
      "dbt.contracts.graph.unparsed.HasYamlMetadata",
      "dbt.contracts.graph.unparsed.HasColumnAndTestProps"
    ],
    "dbt.contracts.graph.unparsed.UnparsedModelUpdate": [
      "dbt.artifacts.resources.NodeVersion",
      "dbt.contracts.graph.unparsed.UnparsedNodeUpdate",
      "dbt.artifacts.resources.TimeSpine",
      "dbt.exceptions.ParsingError",
      "dbt_common.exceptions.DbtInternalError"
    ],
    "dbt.contracts.graph.unparsed.UnparsedMacroUpdate": [
      "dbt.artifacts.resources.MacroArgument",
      "dbt.contracts.graph.unparsed.HasColumnProps",
      "dbt.contracts.graph.unparsed.HasYamlMetadata",
      "dbt.contracts.graph.unparsed.HasConfig"
    ],
    "dbt.contracts.graph.unparsed.UnparsedSourceTableDefinition": [
      "dbt.contracts.graph.unparsed.HasColumnTests",
      "dbt.artifacts.resources.ExternalTable",
      "dbt.artifacts.resources.FreshnessThreshold",
      "dbt.artifacts.resources.Quoting",
      "dbt.contracts.graph.unparsed.HasColumnAndTestProps"
    ],
    "dbt.contracts.graph.unparsed.UnparsedSourceDefinition": [
      "dbt.artifacts.resources.Quoting",
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt.artifacts.resources.FreshnessThreshold",
      "dbt_common.dataclass_schema.ValidationError"
    ],
    "dbt.contracts.graph.unparsed.SourceTablePatch": [
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt.artifacts.resources.Docs",
      "dbt.artifacts.resources.ExternalTable",
      "dbt.artifacts.resources.FreshnessThreshold",
      "dbt.artifacts.resources.Quoting"
    ],
    "dbt.contracts.graph.unparsed.SourcePatch": [
      "dbt.artifacts.resources.Quoting",
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt.artifacts.resources.FreshnessThreshold"
    ],
    "dbt.contracts.graph.unparsed.UnparsedDocumentation": [
      "dbt.node_types.NodeType",
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.contracts.graph.unparsed.UnparsedDocumentationFile": [
      "dbt.contracts.graph.unparsed.UnparsedDocumentation"
    ],
    "dbt.contracts.graph.unparsed.Maturity": [
      "dbt_common.dataclass_schema.StrEnum"
    ],
    "dbt.contracts.graph.unparsed.UnparsedExposure": [
      "dbt.artifacts.resources.ExposureType",
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt.artifacts.resources.Owner",
      "dbt_common.dataclass_schema.ValidationError",
      "dbt.deprecations",
      "dbt.artifacts.resources.MaturityType"
    ],
    "dbt.contracts.graph.unparsed.MetricFilter": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.contracts.graph.unparsed.MetricTimePeriod": [
      "dbt_common.dataclass_schema.StrEnum"
    ],
    "dbt.contracts.graph.unparsed.MetricTime": [
      "dbt_common.contracts.util.Mergeable",
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.contracts.graph.unparsed.UnparsedMetricInputMeasure": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.contracts.graph.unparsed.UnparsedMetricInput": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.contracts.graph.unparsed.UnparsedConversionTypeParams": [
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt.artifacts.resources.ConstantPropertyInput",
      "dbt_semantic_interfaces.type_enums.ConversionCalculationType"
    ],
    "dbt.contracts.graph.unparsed.UnparsedCumulativeTypeParams": [
      "dbt_semantic_interfaces.type_enums.PeriodAggregation",
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.contracts.graph.unparsed.UnparsedMetricTypeParams": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.contracts.graph.unparsed.UnparsedMetric": [
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt.exceptions.ParsingError"
    ],
    "dbt.contracts.graph.unparsed.UnparsedGroup": [
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt.artifacts.resources.Owner",
      "dbt_common.dataclass_schema.ValidationError"
    ],
    "dbt.contracts.graph.unparsed.UnparsedEntity": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.contracts.graph.unparsed.UnparsedNonAdditiveDimension": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.contracts.graph.unparsed.UnparsedMeasure": [
      "dbt.artifacts.resources.MeasureAggregationParameters",
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.contracts.graph.unparsed.UnparsedDimensionTypeParams": [
      "dbt.artifacts.resources.DimensionValidityParams",
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.contracts.graph.unparsed.UnparsedDimension": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.contracts.graph.unparsed.UnparsedSemanticModel": [
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt.artifacts.resources.Defaults"
    ],
    "dbt.contracts.graph.unparsed.UnparsedQueryParams": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.contracts.graph.unparsed.UnparsedExport": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.contracts.graph.unparsed.UnparsedSavedQuery": [
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt_common.contracts.config.metadata.ShowBehavior",
      "dbt_common.contracts.config.base.CompareBehavior",
      "dbt.artifacts.resources.v1.config.metas",
      "dbt.artifacts.resources.v1.config.list_str",
      "dbt_common.contracts.config.base.MergeBehavior"
    ],
    "dbt.contracts.graph.unparsed.UnparsedUnitTest": [
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt.artifacts.resources.UnitTestOutputFixture",
      "dbt_common.dataclass_schema.ValidationError",
      "dbt.artifacts.resources.UnitTestOverrides",
      "dbt.artifacts.resources.UnitTestInputFixture",
      "dbt.artifacts.resources.UnitTestNodeVersions"
    ],
    "dbt.contracts.graph.node_args.ModelNodeArgs": [
      "dbt.node_types.NodeType",
      "dbt.node_types.AccessType",
      "dbt.artifacts.resources.NodeVersion"
    ],
    "dbt.contracts.graph.model_config.UnitTestNodeConfig": [
      "dbt.artifacts.resources.NodeConfig"
    ],
    "dbt.contracts.graph.manifest.DocLookup": [
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt.artifacts.schemas.manifest.UniqueID",
      "dbt.contracts.graph.nodes.Documentation",
      "dbt_common.exceptions.DbtInternalError",
      "dbt_common.exceptions"
    ],
    "dbt.contracts.graph.manifest.SourceLookup": [
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt.artifacts.schemas.manifest.UniqueID",
      "dbt_common.exceptions",
      "dbt_common.exceptions.DbtInternalError",
      "dbt.contracts.graph.nodes.SourceDefinition"
    ],
    "dbt.contracts.graph.manifest.RefableLookup": [
      "dbt.contracts.graph.nodes.ModelNode",
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt.node_types.VERSIONED_NODE_TYPES",
      "dbt.node_types.REFABLE_NODE_TYPES",
      "dbt.artifacts.resources.NodeVersion",
      "dbt.artifacts.schemas.manifest.UniqueID",
      "dbt.contracts.graph.nodes.GraphMemberNode",
      "dbt.contracts.graph.unparsed.UnparsedVersion",
      "dbt_common.events.functions.fire_event",
      "dbt.exceptions.AmbiguousResourceNameRefError",
      "dbt_common.events.contextvars.get_node_info",
      "dbt_common.exceptions",
      "dbt.events.types.UnpinnedRefNewVersionAvailable",
      "dbt.contracts.graph.nodes.ManifestNode",
      "dbt_common.exceptions.DbtInternalError"
    ],
    "dbt.contracts.graph.manifest.MetricLookup": [
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt.artifacts.schemas.manifest.UniqueID",
      "dbt_common.exceptions",
      "dbt.contracts.graph.nodes.Metric",
      "dbt_common.exceptions.DbtInternalError"
    ],
    "dbt.contracts.graph.manifest.SavedQueryLookup": [
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt.artifacts.schemas.manifest.UniqueID",
      "dbt_common.exceptions",
      "dbt.contracts.graph.nodes.SavedQuery",
      "dbt_common.exceptions.DbtInternalError"
    ],
    "dbt.contracts.graph.manifest.SemanticModelByMeasureLookup": [
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt.contracts.graph.nodes.SemanticModel",
      "dbt.artifacts.schemas.manifest.UniqueID",
      "dbt_common.exceptions.DbtInternalError",
      "dbt_common.exceptions"
    ],
    "dbt.contracts.graph.manifest.DisabledLookup": [
      "dbt.node_types.NodeType",
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt.artifacts.resources.NodeVersion",
      "dbt.contracts.graph.nodes.GraphMemberNode"
    ],
    "dbt.contracts.graph.manifest.AnalysisLookup": [
      "dbt.node_types.NodeType",
      "dbt.contracts.graph.manifest.RefableLookup"
    ],
    "dbt.contracts.graph.manifest.SingularTestLookup": [
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt.artifacts.schemas.manifest.UniqueID",
      "dbt.contracts.graph.nodes.SingularTestNode",
      "dbt_common.exceptions",
      "dbt_common.exceptions.DbtInternalError"
    ],
    "dbt.contracts.graph.manifest.MacroCandidate": [
      "dbt.contracts.graph.nodes.Macro"
    ],
    "dbt.contracts.graph.manifest.MaterializationCandidate": [
      "dbt.contracts.graph.manifest.MacroCandidate",
      "dbt.adapters.exceptions.DuplicateMaterializationNameError"
    ],
    "dbt.contracts.graph.manifest.CandidateList": [
      "dbt.contracts.graph.nodes.Macro"
    ],
    "dbt.contracts.graph.manifest.Searchable": [
      "dbt.node_types.NodeType"
    ],
    "dbt.contracts.graph.manifest.MacroMethods": [
      "dbt.contracts.graph.nodes.Macro",
      "dbt.adapters.factory.get_adapter_package_names"
    ],
    "dbt.contracts.graph.manifest.ManifestStateCheck": [
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt.contracts.files.FileHash"
    ],
    "dbt.contracts.graph.manifest.Manifest": [
      "dbt.contracts.graph.nodes.Macro",
      "dbt.contracts.graph.nodes.ModelNode",
      "dbt.node_types.REFABLE_NODE_TYPES",
      "dbt.exceptions.DuplicateResourceNameError",
      "dbt.contracts.graph.nodes.UnpatchedSourceDefinition",
      "dbt.artifacts.resources.DeferRelation",
      "dbt.artifacts.schemas.manifest.ManifestMetadata",
      "dbt.contracts.graph.nodes.SnapshotNode",
      "dbt.contracts.graph.nodes.Group",
      "dbt.contracts.util.SourceKey",
      "dbt.contracts.graph.nodes.GraphMemberNode",
      "dbt.artifacts.resources.NodeVersion",
      "dbt.contracts.graph.nodes.Documentation",
      "dbt.contracts.graph.nodes.SeedNode",
      "dbt.artifacts.resources.RefArgs",
      "dbt.mp_context.get_mp_context",
      "dbt_common.utils",
      "dbt.artifacts.resources.v1.config.NodeConfig",
      "dbt.adapters.factory.get_adapter_type_names",
      "dbt.artifacts.schemas.manifest.WritableManifest",
      "dbt_common.exceptions",
      "dbt.contracts.graph.nodes.GenericTestNode",
      "dbt.contracts.graph.manifest.MacroMethods",
      "dbt.contracts.graph.nodes.SavedQuery",
      "dbt.clients.jinja_static.statically_parse_ref_or_source",
      "dbt.adapters.exceptions.DuplicateMacroInPackageError",
      "dbt.contracts.files.FixtureSourceFile",
      "dbt.deprecations",
      "dbt.contracts.graph.nodes.RESOURCE_CLASS_TO_NODE_CLASS",
      "dbt.contracts.files.SourceFile",
      "dbt.contracts.graph.unparsed.SourcePatch",
      "dbt.tracking",
      "dbt.contracts.files.AnySourceFile",
      "dbt.contracts.graph.nodes.Metric",
      "dbt.contracts.graph.nodes.ManifestNode",
      "dbt.flags.get_flags",
      "dbt_common.exceptions.DbtInternalError",
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt.contracts.graph.nodes.SemanticModel",
      "dbt_common.helper_types.PathSet",
      "dbt.contracts.graph.nodes.Exposure",
      "dbt.node_types.NodeType",
      "dbt.contracts.graph.nodes.UnitTestFileFixture",
      "dbt_common.events.functions.fire_event",
      "dbt.contracts.files.SchemaSourceFile",
      "dbt_common.utils.get_materialization_macro_name",
      "dbt.events.types.ArtifactWritten",
      "dbt.contracts.graph.nodes.UnitTestDefinition",
      "dbt.node_types.AccessType",
      "dbt.contracts.graph.nodes.SourceDefinition"
    ],
    "dbt.contracts.graph.manifest.MacroManifest": [
      "dbt.contracts.graph.nodes.Macro",
      "dbt.contracts.graph.manifest.MacroMethods",
      "dbt.artifacts.schemas.manifest.ManifestMetadata",
      "dbt.tracking",
      "dbt.flags.get_flags"
    ],
    "dbt.contracts.graph.semantic_manifest.SemanticManifest": [
      "dbt_semantic_interfaces.implementations.project_configuration.PydanticProjectConfiguration",
      "dbt.contracts.graph.nodes.ModelNode",
      "dbt_semantic_interfaces.type_enums.TimeGranularity",
      "dbt_semantic_interfaces.validations.validator_helpers.ValidationIssueContext",
      "dbt_semantic_interfaces.implementations.time_spine.PydanticTimeSpineCustomGranularityColumn",
      "dbt_semantic_interfaces.implementations.time_spine.PydanticTimeSpine",
      "dbt_semantic_interfaces.validations.validator_helpers.FileContext",
      "dbt_semantic_interfaces.implementations.time_spine_table_configuration.PydanticTimeSpineTableConfiguration",
      "dbt.constants.LEGACY_TIME_SPINE_GRANULARITY",
      "dbt.contracts.graph.manifest.Manifest",
      "dbt_semantic_interfaces.implementations.semantic_model.PydanticSemanticModel",
      "dbt.events.types.SemanticValidationFailure",
      "dbt_semantic_interfaces.implementations.time_spine.PydanticTimeSpinePrimaryColumn",
      "dbt_semantic_interfaces.validations.validator_helpers.ValidationError",
      "dbt_semantic_interfaces.implementations.node_relation.PydanticNodeRelation",
      "dbt.deprecations",
      "dbt.flags.get_flags",
      "dbt_common.events.base_types.EventLevel",
      "dbt.constants.LEGACY_TIME_SPINE_MODEL_NAME",
      "dbt_semantic_interfaces.validations.semantic_manifest_validator.SemanticManifestValidator",
      "dbt.constants.MINIMUM_REQUIRED_TIME_SPINE_GRANULARITY",
      "dbt_semantic_interfaces.implementations.semantic_manifest.PydanticSemanticManifest",
      "dbt_common.events.functions.fire_event",
      "dbt_common.clients.system.write_file",
      "dbt.events.types.ArtifactWritten",
      "dbt_semantic_interfaces.implementations.metric.PydanticMetric",
      "dbt.exceptions.ParsingError",
      "dbt_semantic_interfaces.implementations.saved_query.PydanticSavedQuery"
    ],
    "dbt.contracts.graph.nodes.BaseNode": [
      "dbt.node_types.VERSIONED_NODE_TYPES",
      "dbt.artifacts.resources.BaseResource",
      "dbt.node_types.REFABLE_NODE_TYPES"
    ],
    "dbt.contracts.graph.nodes.GraphNode": [
      "dbt.contracts.graph.nodes.BaseNode",
      "dbt.artifacts.resources.GraphResource"
    ],
    "dbt.contracts.graph.nodes.HasRelationMetadata": [
      "dbt.artifacts.resources.HasRelationMetadata"
    ],
    "dbt.contracts.graph.nodes.ParsedNodeMandatory": [
      "dbt.artifacts.resources.ParsedResourceMandatory",
      "dbt.contracts.graph.nodes.GraphNode",
      "dbt.contracts.graph.nodes.HasRelationMetadata"
    ],
    "dbt.contracts.graph.nodes.NodeInfoMixin": [
      "dbt_common.events.contextvars.set_log_contextvars"
    ],
    "dbt.contracts.graph.nodes.ParsedNode": [
      "dbt.artifacts.resources.NodeConfig",
      "dbt.contracts.graph.nodes.ParsedNodeMandatory",
      "dbt.contracts.graph.nodes.NodeInfoMixin",
      "dbt_common.clients.system.write_file",
      "dbt.artifacts.resources.ParsedResource"
    ],
    "dbt.contracts.graph.nodes.CompiledNode": [
      "dbt.artifacts.resources.InjectedCTE",
      "dbt.contracts.graph.nodes.ParsedNode",
      "dbt.artifacts.resources.CompiledResource"
    ],
    "dbt.contracts.graph.nodes.AnalysisNode": [
      "dbt.artifacts.resources.Analysis",
      "dbt.contracts.graph.nodes.CompiledNode"
    ],
    "dbt.contracts.graph.nodes.HookNode": [
      "dbt.artifacts.resources.HookNode",
      "dbt.contracts.graph.nodes.CompiledNode"
    ],
    "dbt.contracts.graph.nodes.BatchContext": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.contracts.graph.nodes.ModelNode": [
      "dbt.artifacts.resources.ModelConfig",
      "dbt.adapters.base.ConstraintSupport",
      "dbt_common.contracts.constraints.ColumnLevelConstraint",
      "dbt.exceptions.ContractBreakingChangeError",
      "dbt.node_types.NodeType",
      "dbt.adapters.factory.get_adapter_constraint_support",
      "dbt_common.events.functions.warn_or_error",
      "dbt.artifacts.resources.FileHash",
      "dbt.artifacts.resources.Model",
      "dbt_common.contracts.constraints.ModelLevelConstraint",
      "dbt.events.types.UnversionedBreakingChange",
      "dbt.artifacts.schemas.batch_results.BatchResults",
      "dbt.contracts.graph.nodes.CompiledNode",
      "dbt_common.contracts.constraints.ConstraintType",
      "dbt.contracts.graph.node_args.ModelNodeArgs",
      "dbt.artifacts.resources.DependsOn",
      "dbt.node_types.AccessType",
      "dbt.clients.jinja_static.statically_extract_has_name_this"
    ],
    "dbt.contracts.graph.nodes.SqlNode": [
      "dbt.contracts.graph.nodes.CompiledNode",
      "dbt.artifacts.resources.SqlOperation"
    ],
    "dbt.contracts.graph.nodes.SeedNode": [
      "dbt.events.types.SeedExceedsLimitSamePath",
      "dbt.artifacts.resources.Seed",
      "dbt.events.types.SeedExceedsLimitAndPathChanged",
      "dbt_common.events.functions.warn_or_error",
      "dbt.contracts.graph.nodes.ParsedNode",
      "dbt.events.types.SeedIncreased",
      "dbt.events.types.SeedExceedsLimitChecksumChanged",
      "dbt.exceptions.ParsingError"
    ],
    "dbt.contracts.graph.nodes.TestShouldStoreFailures": [
      "dbt.flags.get_flags"
    ],
    "dbt.contracts.graph.nodes.SingularTestNode": [
      "dbt.artifacts.resources.SingularTest",
      "dbt.contracts.graph.nodes.CompiledNode",
      "dbt.contracts.graph.nodes.TestShouldStoreFailures"
    ],
    "dbt.contracts.graph.nodes.GenericTestNode": [
      "dbt.artifacts.resources.GenericTest",
      "dbt.contracts.graph.nodes.CompiledNode",
      "dbt.contracts.graph.nodes.TestShouldStoreFailures"
    ],
    "dbt.contracts.graph.nodes.UnitTestSourceDefinition": [
      "dbt.artifacts.resources.Quoting",
      "dbt.contracts.graph.nodes.ModelNode"
    ],
    "dbt.contracts.graph.nodes.UnitTestNode": [
      "dbt.contracts.graph.model_config.UnitTestNodeConfig",
      "dbt.node_types.NodeType",
      "dbt.contracts.graph.nodes.CompiledNode",
      "dbt.contracts.graph.unparsed.UnitTestOverrides"
    ],
    "dbt.contracts.graph.nodes.UnitTestDefinition": [
      "dbt.artifacts.resources.UnitTestDefinition",
      "dbt.contracts.graph.nodes.GraphNode",
      "dbt.contracts.graph.nodes.NodeInfoMixin"
    ],
    "dbt.contracts.graph.nodes.UnitTestFileFixture": [
      "dbt.node_types.NodeType",
      "dbt.contracts.graph.nodes.BaseNode"
    ],
    "dbt.contracts.graph.nodes.SnapshotNode": [
      "dbt.artifacts.resources.Snapshot",
      "dbt.contracts.graph.nodes.CompiledNode"
    ],
    "dbt.contracts.graph.nodes.Macro": [
      "dbt.contracts.graph.nodes.BaseNode",
      "dbt.artifacts.resources.Macro"
    ],
    "dbt.contracts.graph.nodes.Documentation": [
      "dbt.contracts.graph.nodes.BaseNode",
      "dbt.artifacts.resources.Documentation"
    ],
    "dbt.contracts.graph.nodes.UnpatchedSourceDefinition": [
      "dbt.exceptions.ValidationError",
      "dbt.contracts.graph.unparsed.TestDef",
      "dbt.node_types.NodeType",
      "dbt.contracts.graph.unparsed.UnparsedSourceDefinition",
      "dbt.contracts.graph.unparsed.UnparsedSourceTableDefinition",
      "dbt.contracts.graph.unparsed.UnparsedColumn",
      "dbt.contracts.graph.nodes.BaseNode"
    ],
    "dbt.contracts.graph.nodes.SourceDefinition": [
      "dbt.artifacts.resources.SourceDefinition",
      "dbt.contracts.graph.nodes.NodeInfoMixin",
      "dbt.artifacts.resources.DependsOn",
      "dbt.flags.get_flags",
      "dbt.contracts.graph.nodes.GraphNode",
      "dbt.contracts.graph.nodes.HasRelationMetadata"
    ],
    "dbt.contracts.graph.nodes.Exposure": [
      "dbt.contracts.graph.nodes.GraphNode",
      "dbt.artifacts.resources.Exposure",
      "dbt.contracts.graph.nodes.NodeInfoMixin"
    ],
    "dbt.contracts.graph.nodes.Metric": [
      "dbt.artifacts.resources.MetricInputMeasure",
      "dbt.artifacts.resources.Metric",
      "dbt.contracts.graph.nodes.GraphNode"
    ],
    "dbt.contracts.graph.nodes.Group": [
      "dbt.contracts.graph.nodes.BaseNode",
      "dbt.artifacts.resources.Group"
    ],
    "dbt.contracts.graph.nodes.SemanticModel": [
      "dbt.artifacts.resources.SemanticModel",
      "dbt.contracts.graph.nodes.GraphNode"
    ],
    "dbt.contracts.graph.nodes.SavedQuery": [
      "dbt.artifacts.resources.SavedQuery",
      "dbt.contracts.graph.nodes.GraphNode",
      "dbt.contracts.graph.nodes.NodeInfoMixin"
    ],
    "dbt.contracts.graph.nodes.ParsedPatch": [
      "dbt.artifacts.resources.Docs",
      "dbt.contracts.graph.unparsed.HasYamlMetadata"
    ],
    "dbt.contracts.graph.nodes.ParsedNodePatch": [
      "dbt.artifacts.resources.NodeVersion",
      "dbt.artifacts.resources.v1.model.ModelFreshness",
      "dbt.contracts.graph.nodes.ParsedPatch",
      "dbt.artifacts.resources.TimeSpine",
      "dbt.artifacts.resources.ColumnInfo"
    ],
    "dbt.contracts.graph.nodes.ParsedMacroPatch": [
      "dbt.artifacts.resources.MacroArgument",
      "dbt.contracts.graph.nodes.ParsedPatch"
    ],
    "dbt.contracts.graph.nodes.ParsedSingularTestPatch": [
      "dbt.contracts.graph.nodes.ParsedPatch"
    ],
    "dbt.tests.fixtures.project.TestProjInfo": [
      "dbt.tests.util.run_sql_with_adapter",
      "dbt.tests.util.get_connection",
      "dbt.adapters.factory.get_adapter_by_type",
      "dbt.parser.manifest.ManifestLoader"
    ],
    "dbt.adapters.clients.jinja.QueryStringGenerator": [
      "dbt_common.clients.jinja.BaseMacroGenerator",
      "dbt_common.clients.jinja.get_environment"
    ],
    "dbt.adapters.clickhouse.relation.ClickHouseQuotePolicy": [
      "dbt.adapters.base.relation.Policy"
    ],
    "dbt.adapters.clickhouse.relation.ClickHouseIncludePolicy": [
      "dbt.adapters.base.relation.Policy"
    ],
    "dbt.adapters.clickhouse.relation.ClickHouseRelationType": [
      "dbt_common.dataclass_schema.StrEnum"
    ],
    "dbt.adapters.clickhouse.relation.ClickHouseRelation": [
      "dbt_common.utils.deep_merge",
      "dbt.adapters.base.relation.Self",
      "dbt.adapters.clickhouse.query.quote_identifier",
      "dbt.adapters.base.relation.Policy",
      "dbt.adapters.contracts.relation.HasQuoting",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.base.relation.EventTimeFilter",
      "dbt.adapters.base.relation.BaseRelation",
      "dbt.adapters.base.relation.Path",
      "dbt.adapters.contracts.relation.RelationConfig"
    ],
    "dbt.adapters.clickhouse.nativeclient.ChNativeClient": [
      "dbt.adapters.clickhouse.ClickHouseColumn",
      "dbt.adapters.__about__.version",
      "dbt_common.exceptions.DbtDatabaseError",
      "dbt.adapters.clickhouse.dbclient.ChRetryableException",
      "dbt.adapters.clickhouse.util.hide_stack_trace",
      "dbt.adapters.clickhouse.dbclient.ChClientWrapper",
      "dbt.adapters.clickhouse.ClickHouseCredentials",
      "dbt.adapters.clickhouse.__version__.version",
      "dbt.adapters.clickhouse.logger.logger"
    ],
    "dbt.adapters.clickhouse.httpclient.ChHttpClient": [
      "dbt.adapters.clickhouse.ClickHouseColumn",
      "dbt.adapters.__about__.version",
      "dbt_common.exceptions.DbtDatabaseError",
      "dbt.adapters.clickhouse.dbclient.ChRetryableException",
      "dbt.adapters.clickhouse.util.hide_stack_trace",
      "dbt.adapters.clickhouse.dbclient.ChClientWrapper",
      "dbt.adapters.clickhouse.__version__.version"
    ],
    "dbt.adapters.clickhouse.credentials.ClickHouseCredentials": [
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.contracts.connection.Credentials"
    ],
    "dbt.adapters.clickhouse.connections.ClickHouseConnectionManager": [
      "dbt.exceptions.DbtRuntimeError",
      "dbt_common.clients.agate_helper.empty_table",
      "dbt_common.clients.agate_helper.table_from_data_flat",
      "dbt.adapters.sql.SQLConnectionManager",
      "dbt.exceptions",
      "dbt.adapters.clickhouse.dbclient.get_db_client",
      "dbt.adapters.contracts.connection.AdapterResponse",
      "dbt.adapters.clickhouse.logger.logger",
      "dbt.adapters.contracts.connection.Connection"
    ],
    "dbt.adapters.clickhouse.cache.CachedRelation": [
      "dbt.adapters.exceptions.NewNameAlreadyInCacheError"
    ],
    "dbt.adapters.clickhouse.cache.ClickHouseRelationsCache": [
      "dbt.adapters.exceptions.NoneRelationFoundError",
      "dbt.adapters.events.types.CacheAction",
      "dbt_common.events.functions.fire_event",
      "dbt.adapters.events.types.CacheDumpGraph",
      "dbt.adapters.exceptions.TruncatedModelNameCausedCollisionError",
      "dbt_common.events.functions.fire_event_if"
    ],
    "dbt.adapters.clickhouse.dbclient.ChRetryableException": [
      "dbt.adapters.clickhouse.dbclient.Exception"
    ],
    "dbt.adapters.clickhouse.dbclient.ChClientWrapper": [
      "dbt.adapters.clickhouse.errors.lw_deletes_not_enabled_error",
      "dbt_common.exceptions.DbtConfigError",
      "dbt.adapters.exceptions.FailedToConnectError",
      "dbt_common.exceptions.DbtDatabaseError",
      "dbt.adapters.clickhouse.credentials.ClickHouseCredentials",
      "dbt.adapters.clickhouse.query.quote_identifier",
      "dbt.adapters.clickhouse.errors.lw_deletes_not_enabled_warning",
      "dbt.adapters.clickhouse.util.compare_versions",
      "dbt.adapters.clickhouse.errors.nd_mutations_not_enabled_warning",
      "dbt.adapters.clickhouse.logger.logger",
      "dbt.adapters.clickhouse.errors.nd_mutations_not_enabled_error"
    ],
    "dbt.adapters.clickhouse.impl.ClickHouseConfig": [
      "dbt.adapters.base.AdapterConfig"
    ],
    "dbt.adapters.clickhouse.impl.ClickHouseAdapter": [
      "dbt.adapters.base.impl.ConstraintSupport",
      "dbt_common.clients.agate_helper.empty_table",
      "dbt.adapters.sql.SQLAdapter",
      "dbt.adapters.base.impl.BaseAdapter",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt_common.contracts.constraints.ModelLevelConstraint",
      "dbt_common.contracts.constraints.ConstraintType",
      "dbt_common.exceptions.NotImplementedError",
      "dbt.adapters.events.types.ConstraintNotSupported",
      "dbt.adapters.capability.Support",
      "dbt.adapters.clickhouse.column.ClickHouseColumnChanges",
      "dbt.adapters.contracts.relation.Path",
      "dbt.adapters.clickhouse.relation.ClickHouseRelation",
      "dbt.adapters.base.relation.BaseRelation",
      "dbt.adapters.clickhouse.util.compare_versions",
      "dbt.adapters.clickhouse.errors.schema_change_fail_error",
      "dbt.adapters.capability.CapabilitySupport",
      "dbt.adapters.clickhouse.relation.ClickHouseRelationType",
      "dbt.adapters.clickhouse.connections.ClickHouseConnectionManager",
      "dbt.adapters.clickhouse.column.ClickHouseColumn",
      "dbt_common.utils.filter_null_values",
      "dbt.adapters.capability.Capability",
      "dbt.adapters.base.relation.InformationSchema",
      "dbt.adapters.clickhouse.cache.ClickHouseRelationsCache",
      "dbt.adapters.base.available",
      "dbt.adapters.clickhouse.query.quote_identifier",
      "dbt_common.events.functions.warn_or_error",
      "dbt.adapters.capability.CapabilityDict",
      "dbt.adapters.contracts.relation.RelationConfig",
      "dbt.adapters.clickhouse.logger.logger"
    ],
    "dbt.adapters.clickhouse.column.ClickHouseColumn": [
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.base.column.Column"
    ],
    "dbt.adapters.clickhouse.column.ClickHouseColumnChanges": [
      "dbt.adapters.base.column.Column"
    ],
    "dbt.adapters.record.handle.RecordReplayHandle": [
      "dbt.adapters.record.cursor.cursor.RecordReplayCursor",
      "dbt_common.events.functions.fire_event",
      "dbt_common.events.types.RecordReplayIssue",
      "dbt_common.events.base_types.BaseEvent",
      "dbt.adapters.contracts.connection.Connection"
    ],
    "dbt.adapters.record.base.AdapterExecuteResult": [
      "dbt.adapters.contracts.connection.AdapterResponse",
      "dbt.adapters.record.serialization.serialize_agate_table"
    ],
    "dbt.adapters.record.base.AdapterExecuteRecord": [
      "dbt_common.record.Recorder",
      "dbt_common.record.Record"
    ],
    "dbt.adapters.record.base.AdapterTestSqlRecord": [
      "dbt_common.record.Recorder",
      "dbt_common.record.Record"
    ],
    "dbt.adapters.record.base.AdapterGetPartitionsMetadataResult": [
      "dbt.adapters.record.serialization.serialize_agate_table"
    ],
    "dbt.adapters.record.base.AdapterGetPartitionsMetadataRecord": [
      "dbt_common.record.Recorder",
      "dbt_common.record.Record"
    ],
    "dbt.adapters.record.base.AdapterConvertTypeParams": [
      "dbt.adapters.record.serialization.serialize_agate_table"
    ],
    "dbt.adapters.record.base.AdapterConvertTypeRecord": [
      "dbt_common.record.Recorder",
      "dbt_common.record.Record"
    ],
    "dbt.adapters.record.base.AdapterStandardizeGrantsDictParams": [
      "dbt.adapters.record.serialization.serialize_agate_table"
    ],
    "dbt.adapters.record.base.AdapterStandardizeGrantsDictRecord": [
      "dbt_common.record.Recorder",
      "dbt_common.record.Record"
    ],
    "dbt.adapters.trino.relation.TrinoRelation": [
      "dbt.adapters.contracts.relation.ComponentName",
      "dbt.adapters.base.relation.BaseRelation",
      "dbt.adapters.base.relation.Policy",
      "dbt.adapters.base.relation.EventTimeFilter"
    ],
    "dbt.adapters.trino.connections.TrinoCredentials": [
      "dbt.adapters.contracts.connection.Credentials"
    ],
    "dbt.adapters.trino.connections.TrinoNoneCredentials": [
      "dbt.adapters.trino.connections.TrinoCredentials",
      "dbt_common.helper_types.Port"
    ],
    "dbt.adapters.trino.connections.TrinoCertificateCredentials": [
      "dbt.adapters.trino.connections.TrinoCredentials",
      "dbt_common.helper_types.Port"
    ],
    "dbt.adapters.trino.connections.TrinoLdapCredentials": [
      "dbt.adapters.trino.connections.TrinoCredentials",
      "dbt_common.helper_types.Port"
    ],
    "dbt.adapters.trino.connections.TrinoKerberosCredentials": [
      "dbt.adapters.trino.connections.TrinoCredentials",
      "dbt_common.helper_types.Port"
    ],
    "dbt.adapters.trino.connections.TrinoJwtCredentials": [
      "dbt.adapters.trino.connections.TrinoCredentials",
      "dbt_common.helper_types.Port"
    ],
    "dbt.adapters.trino.connections.TrinoOauthCredentials": [
      "dbt.adapters.trino.connections.TrinoCredentials",
      "dbt_common.helper_types.Port"
    ],
    "dbt.adapters.trino.connections.TrinoOauthConsoleCredentials": [
      "dbt.adapters.trino.connections.TrinoCredentials",
      "dbt_common.helper_types.Port"
    ],
    "dbt.adapters.trino.connections.ConnectionWrapper": [
      "dbt.adapters.trino.connections.object"
    ],
    "dbt.adapters.trino.connections.TrinoAdapterResponse": [
      "dbt.adapters.contracts.connection.AdapterResponse"
    ],
    "dbt.adapters.trino.connections.TrinoConnectionManager": [
      "dbt_common.exceptions.DbtDatabaseError",
      "dbt.adapters.exceptions.connection.FailedToConnectError",
      "dbt.adapters.sql.SQLConnectionManager",
      "dbt.adapters.trino.__version__.version",
      "dbt_common.exceptions.DbtRuntimeError"
    ],
    "dbt.adapters.trino.impl.TrinoConfig": [
      "dbt.adapters.base.impl.AdapterConfig"
    ],
    "dbt.adapters.trino.impl.TrinoAdapter": [
      "dbt.adapters.base.impl.ConstraintSupport",
      "dbt.adapters.capability.Support",
      "dbt_common.exceptions.DbtDatabaseError",
      "dbt.adapters.trino.TrinoRelation",
      "dbt.adapters.trino.TrinoConnectionManager",
      "dbt.adapters.sql.SQLAdapter",
      "dbt.adapters.trino.TrinoColumn",
      "dbt.adapters.capability.CapabilityDict",
      "dbt.adapters.capability.Capability",
      "dbt_common.contracts.constraints.ConstraintType",
      "dbt.adapters.capability.CapabilitySupport",
      "dbt_common.behavior_flags.BehaviorFlag"
    ],
    "dbt.adapters.trino.column.TrinoColumn": [
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.base.column.Column"
    ],
    "dbt.adapters.contracts.relation.RelationType": [
      "dbt_common.dataclass_schema.StrEnum"
    ],
    "dbt.adapters.contracts.relation.MaterializationConfig": [
      "dbt_common.contracts.config.materialization.OnConfigurationChangeOption"
    ],
    "dbt.adapters.contracts.relation.ComponentName": [
      "dbt_common.dataclass_schema.StrEnum"
    ],
    "dbt.adapters.contracts.relation.FakeAPIObject": [
      "dbt_common.contracts.util.Replaceable",
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt_common.utils.deep_merge",
      "dbt_common.exceptions.DataclassNotDictError"
    ],
    "dbt.adapters.contracts.relation.Policy": [
      "dbt.adapters.contracts.relation.FakeAPIObject"
    ],
    "dbt.adapters.contracts.relation.Path": [
      "dbt.adapters.contracts.relation.FakeAPIObject",
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.adapters.contracts.connection.Identifier": [
      "dbt_common.dataclass_schema.ValidatedStringMixin"
    ],
    "dbt.adapters.contracts.connection.AdapterResponse": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.adapters.contracts.connection.ConnectionState": [
      "dbt_common.dataclass_schema.StrEnum"
    ],
    "dbt.adapters.contracts.connection.Connection": [
      "dbt_common.dataclass_schema.ExtensibleDbtClassMixin",
      "dbt_common.contracts.util.Replaceable",
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt_common.exceptions.DbtInternalError"
    ],
    "dbt.adapters.contracts.connection.LazyHandle": [
      "dbt.adapters.events.types.NewConnectionOpening",
      "dbt_common.events.functions.fire_event",
      "dbt_common.events.contextvars.get_node_info"
    ],
    "dbt.adapters.contracts.connection.Credentials": [
      "dbt_common.dataclass_schema.ExtensibleDbtClassMixin",
      "dbt_common.contracts.util.Replaceable",
      "dbt.adapters.utils.translate_aliases",
      "dbt_common.utils.md5"
    ],
    "dbt.adapters.contracts.connection.QueryComment": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.adapters.contracts.connection.AdapterRequiredConfig": [
      "dbt.adapters.contracts.connection.HasCredentials"
    ],
    "dbt.adapters.contracts.macros.MacroResolverProtocol": [
      "dbt_common.clients.jinja.MacroProtocol"
    ],
    "dbt.adapters.databricks.logging.DbtCoreHandler": [
      "dbt.adapters.events.logging.AdapterLogger"
    ],
    "dbt.adapters.databricks.relation.DatabricksQuotePolicy": [
      "dbt.adapters.base.relation.Policy"
    ],
    "dbt.adapters.databricks.relation.DatabricksIncludePolicy": [
      "dbt.adapters.base.relation.Policy"
    ],
    "dbt.adapters.databricks.relation.DatabricksRelationType": [
      "dbt_common.dataclass_schema.StrEnum"
    ],
    "dbt.adapters.databricks.relation.DatabricksTableType": [
      "dbt_common.dataclass_schema.StrEnum"
    ],
    "dbt.adapters.databricks.relation.DatabricksInformationSchema": [
      "dbt.adapters.base.relation.InformationSchema",
      "dbt.adapters.base.relation.Policy"
    ],
    "dbt.adapters.databricks.relation.DatabricksRelation": [
      "dbt.adapters.contracts.relation.ComponentName",
      "dbt.adapters.databricks.constraints.TypedConstraint",
      "dbt.adapters.base.relation.Policy",
      "dbt.adapters.utils.classproperty",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt_common.utils.filter_null_values",
      "dbt.adapters.base.relation.BaseRelation",
      "dbt.adapters.databricks.utils.remove_undefined",
      "dbt.adapters.spark.impl.KEY_TABLE_OWNER",
      "dbt_common.contracts.constraints.ConstraintType",
      "dbt.adapters.spark.impl.KEY_TABLE_STATISTICS",
      "dbt.adapters.base.relation.InformationSchema",
      "dbt.adapters.databricks.constraints.process_constraint"
    ],
    "dbt.adapters.databricks.credentials.DatabricksCredentials": [
      "dbt_common.exceptions.DbtConfigError",
      "dbt.adapters.contracts.connection.Credentials",
      "dbt_common.exceptions.DbtValidationError",
      "dbt.adapters.databricks.global_state.GlobalState"
    ],
    "dbt.adapters.databricks.credentials.DatabricksCredentialManager": [
      "dbt.adapters.databricks.logging.logger"
    ],
    "dbt.adapters.databricks.handle.CursorWrapper": [
      "dbt.adapters.databricks.logging.logger",
      "dbt.adapters.contracts.connection.AdapterResponse",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.databricks.utils"
    ],
    "dbt.adapters.databricks.handle.DatabricksHandle": [
      "dbt.adapters.databricks.logging.logger",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.databricks.utils"
    ],
    "dbt.adapters.databricks.handle.SqlUtils": [
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.databricks.__version__.version",
      "dbt.adapters.databricks.credentials.DatabricksCredentials",
      "dbt.adapters.databricks.credentials.DatabricksCredentialManager"
    ],
    "dbt.adapters.databricks.connections.DatabricksMacroQueryStringSetter": [
      "dbt.adapters.base.query_headers.MacroQueryStringSetter",
      "dbt.adapters.contracts.connection.DEFAULT_QUERY_COMMENT"
    ],
    "dbt.adapters.databricks.connections.DatabricksDBTConnection": [
      "dbt.adapters.contracts.connection.Connection"
    ],
    "dbt.adapters.databricks.connections.DatabricksConnectionManager": [
      "dbt.adapters.events.types.ConnectionClosedInCleanup",
      "dbt.adapters.databricks.python_models.run_tracking.PythonRunTracker",
      "dbt.adapters.databricks.events.other_events.QueryError",
      "dbt.adapters.events.types.SQLQueryStatus",
      "dbt.adapters.databricks.logging.logger",
      "dbt.adapters.events.types.NewConnection",
      "dbt.adapters.databricks.handle.CursorWrapper",
      "dbt.adapters.contracts.connection.Identifier",
      "dbt_common.events.contextvars.get_node_info",
      "dbt.adapters.databricks.handle.SqlUtils",
      "dbt.adapters.databricks.events.connection_events.ConnectionCreate",
      "dbt.adapters.events.types.ConnectionReused",
      "dbt.adapters.spark.connections.SparkConnectionManager",
      "dbt.adapters.contracts.connection.LazyHandle",
      "dbt.adapters.databricks.api_client.DatabricksApiClient",
      "dbt.adapters.databricks.events.connection_events.ConnectionCreateError",
      "dbt.adapters.databricks.credentials.DatabricksCredentials",
      "dbt.adapters.contracts.connection.AdapterRequiredConfig",
      "dbt_common.exceptions.DbtDatabaseError",
      "dbt.adapters.contracts.connection.ConnectionState",
      "dbt_common.events.functions.fire_event",
      "dbt.adapters.events.types.ConnectionUsed",
      "dbt_common.utils.cast_to_str",
      "dbt.adapters.databricks.utils.redact_credentials",
      "dbt_common.clients.agate_helper",
      "dbt.adapters.contracts.connection.AdapterResponse",
      "dbt.adapters.databricks.credentials.DatabricksCredentialManager",
      "dbt.adapters.contracts.connection.Connection",
      "dbt.adapters.events.types.SQLQuery",
      "dbt.adapters.databricks.handle.DatabricksHandle"
    ],
    "dbt.adapters.databricks.connections.QueryConfigUtils": [
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.databricks.credentials.DatabricksCredentials"
    ],
    "dbt.adapters.databricks.global_state.GlobalState": [
      "dbt.adapters.databricks.__version__.version"
    ],
    "dbt.adapters.databricks.impl.DatabricksConfig": [
      "dbt.adapters.base.AdapterConfig",
      "dbt.adapters.databricks.relation_configs.table_format.TableFormat"
    ],
    "dbt.adapters.databricks.impl.DatabricksAdapter": [
      "dbt_common.exceptions.DbtConfigError",
      "dbt.adapters.databricks.python_models.python_submissions.WorkflowPythonJobHelper",
      "dbt.adapters.databricks.connections.DatabricksConnectionManager",
      "dbt_common.exceptions.CompilationError",
      "dbt.adapters.databricks.behaviors.columns.GetColumnsBehavior",
      "dbt.adapters.spark.impl.KEY_TABLE_OWNER",
      "dbt.adapters.spark.impl.SparkAdapter",
      "dbt_common.utils.executor",
      "dbt.adapters.base.PythonJobHelper",
      "dbt_common.contracts.config.base.BaseConfig",
      "dbt.adapters.databricks.catalogs.DatabricksCatalogRelation",
      "dbt.adapters.databricks.handle.SqlUtils",
      "dbt.adapters.capability.Support",
      "dbt.adapters.databricks.relation.KEY_TABLE_PROVIDER",
      "dbt.adapters.databricks.utils.handle_missing_objects",
      "dbt.adapters.base.impl.log_code_execution",
      "dbt.adapters.contracts.relation.RelationType",
      "dbt.adapters.databricks.relation.DatabricksRelationType",
      "dbt.adapters.databricks.parse_model",
      "dbt.adapters.databricks.behaviors.columns.GetColumnsByDescribe",
      "dbt.adapters.base.relation.BaseRelation",
      "dbt.adapters.databricks.catalogs.HiveMetastoreCatalogIntegration",
      "dbt.adapters.spark.impl.GET_COLUMNS_IN_RELATION_RAW_MACRO_NAME",
      "dbt.adapters.databricks.relation_configs.column_tags.ColumnTagsProcessor",
      "dbt.adapters.capability.CapabilitySupport",
      "dbt.adapters.databricks.python_models.python_submissions.AllPurposeClusterPythonJobHelper",
      "dbt.adapters.databricks.catalogs.UnityCatalogIntegration",
      "dbt.adapters.databricks.python_models.python_submissions.ServerlessClusterPythonJobHelper",
      "dbt.adapters.capability.Capability",
      "dbt.adapters.spark.impl.KEY_TABLE_STATISTICS",
      "dbt.adapters.base.meta.available",
      "dbt.adapters.databricks.relation_configs.base.DatabricksRelationConfigBase",
      "dbt_common.exceptions.DbtInternalError",
      "dbt.adapters.databricks.relation_configs.column_tags.ColumnTagsConfig",
      "dbt_common.behavior_flags.BehaviorFlag",
      "dbt_common.utils.dict.AttrDict",
      "dbt.adapters.databricks.constants",
      "dbt.adapters.base.impl.catch_as_completed",
      "dbt.adapters.databricks.column.DatabricksColumn",
      "dbt.adapters.databricks.utils.redact_credentials",
      "dbt.adapters.capability.CapabilityDict",
      "dbt.adapters.databricks.python_models.python_submissions.JobClusterPythonJobHelper",
      "dbt.adapters.spark.impl.LIST_SCHEMAS_MACRO_NAME",
      "dbt.adapters.databricks.relation.DatabricksRelation",
      "dbt.adapters.databricks.constraints",
      "dbt.adapters.databricks.behaviors.columns.GetColumnsByInformationSchema",
      "dbt.adapters.contracts.relation.RelationConfig",
      "dbt_common.clients.agate_helper.DEFAULT_TYPE_TESTER",
      "dbt.adapters.contracts.connection.AdapterResponse",
      "dbt.adapters.contracts.connection.Connection",
      "dbt.adapters.catalogs.CatalogRelation"
    ],
    "dbt.adapters.databricks.impl.RelationAPIBase": [
      "dbt.adapters.databricks.relation_configs.base.DatabricksRelationConfig",
      "dbt.adapters.contracts.relation.RelationConfig",
      "dbt.adapters.databricks.relation.DatabricksRelation",
      "dbt.adapters.relation_configs.RelationResults"
    ],
    "dbt.adapters.databricks.impl.DeltaLiveTableAPIBase": [
      "dbt.adapters.databricks.relation_configs.base.DatabricksRelationConfig",
      "dbt.adapters.databricks.relation.DatabricksRelation",
      "dbt.adapters.databricks.relation_configs.tblproperties.TblPropertiesConfig"
    ],
    "dbt.adapters.databricks.impl.MaterializedViewAPI": [
      "dbt.adapters.databricks.utils.get_first_row",
      "dbt.adapters.databricks.relation.DatabricksRelationType",
      "dbt.adapters.spark.impl.DESCRIBE_TABLE_EXTENDED_MACRO_NAME",
      "dbt.adapters.databricks.relation_configs.materialized_view.MaterializedViewConfig",
      "dbt.adapters.databricks.relation.DatabricksRelation",
      "dbt.adapters.relation_configs.RelationResults"
    ],
    "dbt.adapters.databricks.impl.StreamingTableAPI": [
      "dbt.adapters.databricks.relation_configs.streaming_table.StreamingTableConfig",
      "dbt.adapters.databricks.relation.DatabricksRelationType",
      "dbt.adapters.spark.impl.DESCRIBE_TABLE_EXTENDED_MACRO_NAME",
      "dbt.adapters.databricks.relation.DatabricksRelation",
      "dbt.adapters.relation_configs.RelationResults"
    ],
    "dbt.adapters.databricks.impl.IncrementalTableAPI": [
      "dbt.adapters.databricks.relation.DatabricksRelationType",
      "dbt.adapters.spark.impl.DESCRIBE_TABLE_EXTENDED_MACRO_NAME",
      "dbt.adapters.databricks.relation.DatabricksRelation",
      "dbt.adapters.relation_configs.RelationResults",
      "dbt.adapters.databricks.relation_configs.incremental.IncrementalTableConfig"
    ],
    "dbt.adapters.databricks.impl.ViewAPI": [
      "dbt.adapters.databricks.utils.get_first_row",
      "dbt.adapters.databricks.relation.DatabricksRelationType",
      "dbt.adapters.spark.impl.DESCRIBE_TABLE_EXTENDED_MACRO_NAME",
      "dbt.adapters.databricks.relation.DatabricksRelation",
      "dbt.adapters.relation_configs.RelationResults",
      "dbt.adapters.databricks.relation_configs.view.ViewConfig"
    ],
    "dbt.adapters.databricks.constraints.TypedConstraint": [
      "dbt_common.contracts.constraints.ModelLevelConstraint",
      "dbt_common.exceptions.DbtValidationError"
    ],
    "dbt.adapters.databricks.constraints.CustomConstraint": [
      "dbt.adapters.databricks.constraints.TypedConstraint"
    ],
    "dbt.adapters.databricks.constraints.PrimaryKeyConstraint": [
      "dbt.adapters.databricks.constraints.TypedConstraint"
    ],
    "dbt.adapters.databricks.constraints.ForeignKeyConstraint": [
      "dbt.adapters.databricks.constraints.TypedConstraint"
    ],
    "dbt.adapters.databricks.constraints.CheckConstraint": [
      "dbt.adapters.databricks.constraints.TypedConstraint"
    ],
    "dbt.adapters.databricks.api_client.LibraryApi": [
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.databricks.api_client.DatabricksApi"
    ],
    "dbt.adapters.databricks.api_client.ClusterApi": [
      "dbt.adapters.databricks.logging.logger",
      "dbt.adapters.databricks.api_client.DatabricksApi",
      "dbt_common.exceptions.DbtRuntimeError"
    ],
    "dbt.adapters.databricks.api_client.CommandContextApi": [
      "dbt.adapters.databricks.logging.logger",
      "dbt.adapters.databricks.api_client.DatabricksApi",
      "dbt_common.exceptions.DbtRuntimeError"
    ],
    "dbt.adapters.databricks.api_client.SharedFolderApi": [
      "dbt.adapters.databricks.api_client.FolderApi"
    ],
    "dbt.adapters.databricks.api_client.CurrUserApi": [
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.databricks.api_client.DatabricksApi"
    ],
    "dbt.adapters.databricks.api_client.UserFolderApi": [
      "dbt.adapters.databricks.logging.logger",
      "dbt.adapters.databricks.api_client.FolderApi",
      "dbt.adapters.databricks.api_client.DatabricksApi"
    ],
    "dbt.adapters.databricks.api_client.WorkspaceApi": [
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.databricks.api_client.DatabricksApi"
    ],
    "dbt.adapters.databricks.api_client.PollableApi": [
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.databricks.api_client.DatabricksApi"
    ],
    "dbt.adapters.databricks.api_client.CommandApi": [
      "dbt.adapters.databricks.api_client.PollableApi",
      "dbt.adapters.databricks.logging.logger",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.databricks.utils"
    ],
    "dbt.adapters.databricks.api_client.JobRunsApi": [
      "dbt.adapters.databricks.api_client.PollableApi",
      "dbt.adapters.databricks.logging.logger",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.databricks.utils"
    ],
    "dbt.adapters.databricks.api_client.JobPermissionsApi": [
      "dbt.adapters.databricks.logging.logger",
      "dbt.adapters.databricks.api_client.DatabricksApi",
      "dbt_common.exceptions.DbtRuntimeError"
    ],
    "dbt.adapters.databricks.api_client.NotebookPermissionsApi": [
      "dbt.adapters.databricks.logging.logger",
      "dbt.adapters.databricks.api_client.DatabricksApi",
      "dbt_common.exceptions.DbtRuntimeError"
    ],
    "dbt.adapters.databricks.api_client.WorkflowJobApi": [
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.databricks.logging.logger",
      "dbt.adapters.databricks.api_client.DatabricksApi"
    ],
    "dbt.adapters.databricks.api_client.DltPipelineApi": [
      "dbt.adapters.databricks.api_client.PollableApi",
      "dbt_common.exceptions.DbtRuntimeError"
    ],
    "dbt.adapters.databricks.api_client.DatabricksApiClient": [
      "dbt.adapters.databricks.credentials.DatabricksCredentials",
      "dbt.adapters.databricks.credentials.BearerAuth"
    ],
    "dbt.adapters.databricks.column.DatabricksColumn": [
      "dbt.adapters.databricks.utils.quote",
      "dbt.adapters.spark.column.SparkColumn"
    ],
    "dbt.adapters.bigquery.relation.BigQueryRelation": [
      "dbt_common.utils.dict.filter_null_values",
      "dbt.adapters.bigquery.relation_configs.BigQueryMaterializedViewConfig",
      "dbt.adapters.contracts.relation.RelationType",
      "dbt.adapters.bigquery.relation_configs.BigQueryOptionsConfigChange",
      "dbt.adapters.base.relation.EventTimeFilter",
      "dbt.adapters.base.relation.BaseRelation",
      "dbt.adapters.bigquery.relation_configs.BigQueryPartitionConfigChange",
      "dbt.adapters.contracts.relation.RelationConfig",
      "dbt.adapters.base.relation.ComponentName",
      "dbt.adapters.bigquery.relation_configs.BigQueryClusterConfigChange",
      "dbt.adapters.bigquery.relation_configs.BigQueryMaterializedViewConfigChangeset",
      "dbt.adapters.relation_configs.RelationConfigChangeAction"
    ],
    "dbt.adapters.bigquery.relation.BigQueryInformationSchema": [
      "dbt.adapters.base.relation.InformationSchema",
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.adapters.bigquery.token_suppliers.TokenServiceBase": [
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.exceptions.FailedToConnectError"
    ],
    "dbt.adapters.bigquery.token_suppliers.EntraIdpTokenService": [
      "dbt.adapters.bigquery.token_suppliers.TokenServiceBase"
    ],
    "dbt.adapters.bigquery.token_suppliers.EntraTokenSupplier": [
      "dbt.adapters.exceptions.FailedToConnectError"
    ],
    "dbt.adapters.bigquery.credentials.Priority": [
      "dbt_common.dataclass_schema.StrEnum"
    ],
    "dbt.adapters.bigquery.credentials.DataprocBatchConfig": [
      "dbt_common.dataclass_schema.ExtensibleDbtClassMixin"
    ],
    "dbt.adapters.bigquery.credentials.BigQueryConnectionMethod": [
      "dbt_common.dataclass_schema.StrEnum"
    ],
    "dbt.adapters.bigquery.credentials.BigQueryCredentials": [
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.contracts.connection.Credentials"
    ],
    "dbt.adapters.bigquery.connections.BigQueryAdapterResponse": [
      "dbt.adapters.contracts.connection.AdapterResponse"
    ],
    "dbt.adapters.bigquery.connections.BigQueryConnectionManager": [
      "dbt_common.exceptions.DbtDatabaseError",
      "dbt.adapters.exceptions.connection.FailedToConnectError",
      "dbt.adapters.contracts.connection.ConnectionState",
      "dbt_common.clients.agate_helper",
      "dbt_common.events.functions.fire_event",
      "dbt.adapters.bigquery.credentials.Priority",
      "dbt.adapters.contracts.connection.AdapterRequiredConfig",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.bigquery.clients.create_bigquery_client",
      "dbt.adapters.base.BaseConnectionManager",
      "dbt_common.invocation.get_invocation_id",
      "dbt.adapters.bigquery.retry.RetryFactory",
      "dbt_common.events.contextvars.get_node_info",
      "dbt.adapters.events.types.SQLQuery"
    ],
    "dbt.adapters.bigquery.retry.RetryFactory": [
      "dbt.adapters.bigquery.credentials.BigQueryCredentials",
      "dbt.adapters.contracts.connection.Connection"
    ],
    "dbt.adapters.bigquery.impl.GrantTarget": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.adapters.bigquery.impl.BigqueryConfig": [
      "dbt.adapters.base.AdapterConfig"
    ],
    "dbt.adapters.bigquery.impl.BigQueryAdapter": [
      "dbt.adapters.bigquery.catalogs.BigLakeCatalogIntegration",
      "dbt.adapters.bigquery.python_submissions.ClusterDataprocHelper",
      "dbt.adapters.bigquery.catalogs.BigQueryInfoSchemaCatalogIntegration",
      "dbt_common.exceptions.CompilationError",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt_common.contracts.constraints.ModelLevelConstraint",
      "dbt.adapters.base.PythonJobHelper",
      "dbt_common.contracts.constraints.ConstraintType",
      "dbt_common.exceptions.base.NotImplementedError",
      "dbt.adapters.bigquery.connections.BigQueryAdapterResponse",
      "dbt.adapters.bigquery.relation.BigQueryRelation",
      "dbt.adapters.capability.Support",
      "dbt.adapters.base.BaseAdapter",
      "dbt.adapters.bigquery.dataset.is_access_entry_in_dataset",
      "dbt.adapters.bigquery.relation_configs.PartitionConfig",
      "dbt.adapters.bigquery.relation_configs.BigQueryBaseRelationConfig",
      "dbt.adapters.bigquery.catalogs.BigQueryCatalogRelation",
      "dbt.adapters.bigquery.column.BigQueryColumn",
      "dbt.adapters.capability.CapabilitySupport",
      "dbt.adapters.events.types.SchemaCreation",
      "dbt.adapters.events.types.SchemaDrop",
      "dbt.adapters.bigquery.python_submissions.BigFramesHelper",
      "dbt_common.exceptions",
      "dbt.adapters.bigquery.dataset.add_access_entry_to_dataset",
      "dbt.adapters.bigquery.utility.sql_escape",
      "dbt.adapters.base.ConstraintSupport",
      "dbt.adapters.bigquery.column.get_nested_column_data_types",
      "dbt.adapters.bigquery.relation_configs.BigQueryMaterializedViewConfig",
      "dbt_common.contracts.constraints.ColumnLevelConstraint",
      "dbt.adapters.base.SchemaSearchMap",
      "dbt_common.utils.filter_null_values",
      "dbt.adapters.capability.Capability",
      "dbt.adapters.contracts.macros.MacroResolverProtocol",
      "dbt.adapters.bigquery.python_submissions.ServerlessDataProcHelper",
      "dbt.adapters.base.available",
      "dbt_common.exceptions.DbtInternalError",
      "dbt.adapters.bigquery.parse_model",
      "dbt_common.exceptions.base",
      "dbt.adapters.bigquery.constants",
      "dbt.adapters.bigquery.connections.BigQueryConnectionManager",
      "dbt.adapters.base.BaseRelation",
      "dbt_common.events.functions.fire_event",
      "dbt.adapters.base.RelationType",
      "dbt.adapters.capability.CapabilityDict",
      "dbt.adapters.cache._make_ref_key_dict",
      "self._get_dbt_columns_from_bq_table",
      "dbt.adapters.contracts.relation.RelationConfig",
      "dbt.adapters.contracts.connection.AdapterResponse",
      "dbt.adapters.base.impl.FreshnessResponse",
      "dbt.adapters.catalogs.CatalogRelation"
    ],
    "dbt.adapters.bigquery.column.BigQueryColumn": [
      "dbt.adapters.base.column.Column"
    ],
    "dbt.adapters.bigquery.python_submissions._BigQueryPythonHelper": [
      "dbt.adapters.bigquery.BigQueryCredentials",
      "dbt.adapters.bigquery.retry.RetryFactory",
      "dbt.adapters.bigquery.clients.create_gcs_client",
      "dbt.adapters.base.PythonJobHelper"
    ],
    "dbt.adapters.bigquery.python_submissions.ClusterDataprocHelper": [
      "dbt.adapters.bigquery.BigQueryCredentials",
      "dbt.adapters.bigquery.clients.create_dataproc_job_controller_client",
      "dbt.adapters.bigquery.python_submissions._BigQueryPythonHelper"
    ],
    "dbt.adapters.bigquery.python_submissions.ServerlessDataProcHelper": [
      "dbt.adapters.bigquery.BigQueryCredentials",
      "dbt.adapters.bigquery.clients.create_dataproc_batch_controller_client",
      "dbt.adapters.bigquery.python_submissions._BigQueryPythonHelper"
    ],
    "dbt.adapters.bigquery.python_submissions.BigFramesHelper": [
      "dbt.adapters.bigquery.BigQueryCredentials",
      "dbt.adapters.bigquery.clients.create_notebook_client",
      "dbt.adapters.bigquery.python_submissions._BigQueryPythonHelper",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.bigquery.credentials.BigQueryConnectionMethod",
      "dbt.adapters.bigquery.credentials.create_google_credentials",
      "dbt.adapters.bigquery.retry.RetryFactory"
    ],
    "dbt.adapters.snowflake.relation.SnowflakeRelation": [
      "dbt.adapters.snowflake.relation_configs.SnowflakeDynamicTableWarehouseConfigChange",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.events.types.AdapterEventWarning",
      "dbt.adapters.snowflake.relation_configs.SnowflakeDynamicTableTargetLagConfigChange",
      "dbt.adapters.snowflake.relation_configs.SnowflakeDynamicTableConfig",
      "dbt.adapters.snowflake.relation_configs.SnowflakeQuotePolicy",
      "dbt.adapters.base.relation.BaseRelation",
      "dbt.adapters.relation_configs.RelationConfigBase",
      "dbt.adapters.events.types.AdapterEventDebug",
      "dbt.adapters.snowflake.relation_configs.RefreshMode",
      "dbt.adapters.snowflake.relation_configs.SnowflakeDynamicTableRefreshModeConfigChange",
      "dbt.adapters.snowflake.relation_configs.SnowflakeRelationType",
      "dbt.adapters.relation_configs.RelationResults",
      "dbt.adapters.contracts.relation.ComponentName",
      "dbt_common.events.functions.warn_or_error",
      "dbt.adapters.snowflake.constants",
      "dbt.adapters.utils.classproperty",
      "dbt_common.events.functions.fire_event",
      "dbt.adapters.snowflake.relation_configs.SnowflakeDynamicTableConfigChangeset",
      "dbt.adapters.contracts.relation.RelationConfig",
      "dbt.adapters.relation_configs.RelationConfigChangeAction"
    ],
    "dbt.adapters.snowflake.connections.SnowflakeCredentials": [
      "dbt_common.exceptions.DbtConfigError",
      "dbt.adapters.contracts.connection.Credentials",
      "dbt.adapters.exceptions.connection.FailedToConnectError",
      "dbt_common.exceptions.DbtDatabaseError",
      "dbt_common.events.functions.warn_or_error",
      "dbt.adapters.snowflake.auth.private_key_from_string",
      "dbt.adapters.events.types.AdapterEventWarning",
      "dbt.adapters.snowflake.auth.private_key_from_file",
      "dbt_common.exceptions.DbtInternalError",
      "dbt.adapters.events.types.AdapterEventError"
    ],
    "dbt.adapters.snowflake.connections.SnowflakeConnectionManager": [
      "dbt_common.ui.warning_tag",
      "dbt_common.clients.agate_helper.empty_table",
      "dbt_common.exceptions.DbtDatabaseError",
      "dbt.adapters.exceptions.connection.FailedToConnectError",
      "dbt_common.record.RecorderMode",
      "dbt.adapters.snowflake.query_headers.SnowflakeMacroQueryStringSetter",
      "dbt.adapters.sql.SQLConnectionManager",
      "dbt_common.record.get_record_mode_from_env",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt_common.ui.line_wrap_message",
      "dbt.adapters.contracts.connection.AdapterResponse",
      "dbt.adapters.snowflake.record.SnowflakeRecordReplayHandle",
      "dbt.adapters.contracts.connection.Connection"
    ],
    "dbt.adapters.snowflake.query_headers.SnowflakeMacroQueryStringSetter": [
      "dbt.adapters.base.query_headers.MacroQueryStringSetter"
    ],
    "dbt.adapters.snowflake.impl.SnowflakeConfig": [
      "dbt.adapters.base.impl.AdapterConfig"
    ],
    "dbt.adapters.snowflake.impl.SnowflakeAdapter": [
      "dbt.adapters.base.impl.ConstraintSupport",
      "dbt.adapters.snowflake.SnowflakeConnectionManager",
      "dbt.adapters.sql.SQLAdapter",
      "dbt.adapters.snowflake.parse_model",
      "dbt_common.exceptions.CompilationError",
      "dbt.adapters.snowflake.catalogs.InfoSchemaCatalogIntegration",
      "dbt.adapters.snowflake.SnowflakeColumn",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt_common.contracts.constraints.ConstraintType",
      "dbt_common.contracts.metadata.TableMetadata",
      "dbt.adapters.sql.impl.LIST_SCHEMAS_MACRO_NAME",
      "dbt.adapters.capability.Support",
      "dbt.adapters.snowflake.catalogs.BuiltInCatalogIntegration",
      "dbt.adapters.sql.impl.LIST_RELATIONS_MACRO_NAME",
      "dbt.adapters.capability.CapabilitySupport",
      "dbt.adapters.catalogs.CatalogIntegrationConfig",
      "dbt_common.contracts.metadata.CatalogTable",
      "dbt.adapters.snowflake.relation_configs.SnowflakeRelationType",
      "dbt_common.contracts.metadata.StatsItem",
      "dbt_common.utils.filter_null_values",
      "dbt.adapters.capability.Capability",
      "dbt.adapters.base.meta.available",
      "dbt_common.contracts.metadata.ColumnMetadata",
      "dbt.adapters.snowflake.SnowflakeRelation",
      "dbt_common.exceptions.DbtDatabaseError",
      "dbt.adapters.snowflake.constants",
      "dbt.adapters.capability.CapabilityDict",
      "dbt.adapters.contracts.relation.RelationConfig",
      "dbt.adapters.catalogs.CatalogIntegration",
      "dbt_common.contracts.metadata.StatsDict",
      "dbt.adapters.catalogs.CatalogRelation"
    ],
    "dbt.adapters.snowflake.column.SnowflakeColumn": [
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.base.column.Column"
    ],
    "dbt.adapters.exceptions.alias.AliasError": [
      "dbt_common.exceptions.DbtValidationError"
    ],
    "dbt.adapters.exceptions.alias.DuplicateAliasError": [
      "dbt.adapters.exceptions.alias.AliasError"
    ],
    "dbt.adapters.exceptions.database.UnexpectedDbReferenceError": [
      "dbt_common.exceptions.NotImplementedError"
    ],
    "dbt.adapters.exceptions.database.CrossDbReferenceProhibitedError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.adapters.exceptions.database.IndexConfigNotDictError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.adapters.exceptions.database.IndexConfigError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.adapters.exceptions.cache.CacheInconsistencyError": [
      "dbt_common.exceptions.DbtInternalError"
    ],
    "dbt.adapters.exceptions.cache.NewNameAlreadyInCacheError": [
      "dbt.adapters.exceptions.cache.CacheInconsistencyError"
    ],
    "dbt.adapters.exceptions.cache.ReferencedLinkNotCachedError": [
      "dbt.adapters.exceptions.cache.CacheInconsistencyError"
    ],
    "dbt.adapters.exceptions.cache.DependentLinkNotCachedError": [
      "dbt.adapters.exceptions.cache.CacheInconsistencyError"
    ],
    "dbt.adapters.exceptions.cache.TruncatedModelNameCausedCollisionError": [
      "dbt.adapters.exceptions.cache.CacheInconsistencyError"
    ],
    "dbt.adapters.exceptions.cache.NoneRelationFoundError": [
      "dbt.adapters.exceptions.cache.CacheInconsistencyError"
    ],
    "dbt.adapters.exceptions.compilation.MissingConfigError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.adapters.exceptions.compilation.MultipleDatabasesNotAllowedError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.adapters.exceptions.compilation.ApproximateMatchError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.adapters.exceptions.compilation.SnapshotTargetIncompleteError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.adapters.exceptions.compilation.DuplicateMacroInPackageError": [
      "dbt_common.ui.line_wrap_message",
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.adapters.exceptions.compilation.DuplicateMaterializationNameError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.adapters.exceptions.compilation.ColumnTypeMissingError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.adapters.exceptions.compilation.MacroNotFoundError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.adapters.exceptions.compilation.MissingMaterializationError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.adapters.exceptions.compilation.SnapshotTargetNotSnapshotTableError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.adapters.exceptions.compilation.NullRelationDropAttemptedError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.adapters.exceptions.compilation.NullRelationCacheAttemptedError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.adapters.exceptions.compilation.RelationTypeNullError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.adapters.exceptions.compilation.MaterializationNotAvailableError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.adapters.exceptions.compilation.RelationReturnedMultipleResultsError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.adapters.exceptions.compilation.UnexpectedNonTimestampError": [
      "dbt_common.exceptions.DbtDatabaseError"
    ],
    "dbt.adapters.exceptions.compilation.RenameToNoneAttemptedError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.adapters.exceptions.compilation.QuoteConfigTypeError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.adapters.exceptions.compilation.RelationWrongTypeError": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.adapters.exceptions.connection.InvalidConnectionError": [
      "dbt_common.exceptions.DbtRuntimeError"
    ],
    "dbt.adapters.exceptions.connection.FailedToConnectError": [
      "dbt_common.exceptions.DbtDatabaseError"
    ],
    "dbt.adapters.redshift.relation.RedshiftRelation": [
      "dbt.adapters.redshift.relation_configs.RedshiftMaterializedViewConfigChangeset",
      "dbt.adapters.redshift.relation_configs.RedshiftIncludePolicy",
      "dbt.adapters.redshift.relation_configs.RedshiftDistConfigChange",
      "dbt.adapters.redshift.relation_configs.MAX_CHARACTERS_IN_IDENTIFIER",
      "dbt.adapters.relation_configs.RelationConfigBase",
      "dbt.adapters.redshift.relation_configs.RedshiftSortConfigChange",
      "dbt.adapters.base.RelationType",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.base.relation.BaseRelation",
      "dbt.adapters.relation_configs.RelationResults",
      "dbt.adapters.redshift.relation_configs.RedshiftMaterializedViewConfig",
      "dbt.adapters.contracts.relation.RelationConfig",
      "dbt.adapters.redshift.relation_configs.RedshiftQuotePolicy",
      "dbt.adapters.redshift.relation_configs.RedshiftAutoRefreshConfigChange",
      "dbt.adapters.relation_configs.RelationConfigChangeAction"
    ],
    "dbt.adapters.redshift.connections.SSLConfigError": [
      "dbt_common.exceptions.CompilationError",
      "dbt_common.dataclass_schema.ValidationError"
    ],
    "dbt.adapters.redshift.connections.RedshiftConnectionMethod": [
      "dbt_common.dataclass_schema.StrEnum"
    ],
    "dbt.adapters.redshift.connections.UserSSLMode": [
      "dbt_common.dataclass_schema.StrEnum"
    ],
    "dbt.adapters.redshift.connections.RedshiftSSLMode": [
      "dbt_common.dataclass_schema.StrEnum"
    ],
    "dbt.adapters.redshift.connections.RedshiftSSLConfig": [
      "dbt_common.contracts.util.Replaceable",
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt_common.dataclass_schema.ValidationError"
    ],
    "dbt.adapters.redshift.connections.RedshiftCredentials": [
      "dbt.adapters.contracts.connection.Credentials",
      "dbt_common.helper_types.Port"
    ],
    "dbt.adapters.redshift.connections.RedshiftConnectionManager": [
      "dbt_common.exceptions.DbtDatabaseError",
      "dbt.adapters.sql.SQLConnectionManager",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt_common.clients.agate_helper",
      "dbt.adapters.contracts.connection.AdapterResponse",
      "dbt.adapters.contracts.connection.Connection"
    ],
    "dbt.adapters.redshift.auth_providers.TokenServiceBase": [
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.exceptions.FailedToConnectError"
    ],
    "dbt.adapters.redshift.auth_providers.OktaIdpTokenService": [
      "dbt.adapters.redshift.auth_providers.TokenServiceBase",
      "dbt.adapters.exceptions.FailedToConnectError"
    ],
    "dbt.adapters.redshift.auth_providers.EntraIdpTokenService": [
      "dbt.adapters.redshift.auth_providers.TokenServiceBase"
    ],
    "dbt.adapters.redshift.impl.RedshiftConfig": [
      "dbt.adapters.base.impl.AdapterConfig"
    ],
    "dbt.adapters.redshift.impl.RedshiftAdapter": [
      "dbt.adapters.redshift.RedshiftConnectionManager",
      "dbt.adapters.base.impl.ConstraintSupport",
      "dbt.adapters.capability.Support",
      "dbt_common.exceptions.NotImplementedError",
      "dbt.adapters.capability.CapabilitySupport",
      "dbt.adapters.redshift.RedshiftRelation",
      "dbt.adapters.sql.SQLAdapter",
      "dbt_common.exceptions.CompilationError",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.capability.CapabilityDict",
      "dbt_common.contracts.constraints.ConstraintType",
      "dbt.adapters.capability.Capability",
      "dbt.adapters.base.PythonJobHelper",
      "dbt.adapters.base.meta.available",
      "dbt.adapters.contracts.connection.AdapterResponse",
      "dbt_common.exceptions"
    ],
    "dbt.adapters.postgres.relation.PostgresRelation": [
      "dbt.adapters.postgres.relation_configs.PostgresMaterializedViewConfig",
      "dbt.adapters.postgres.relation_configs.MAX_CHARACTERS_IN_IDENTIFIER",
      "dbt.adapters.postgres.relation_configs.PostgresMaterializedViewConfigChangeCollection",
      "dbt.adapters.contracts.relation.RelationType",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.base.relation.BaseRelation",
      "dbt.adapters.relation_configs.RelationResults",
      "dbt.adapters.postgres.relation_configs.PostgresIndexConfig",
      "dbt.adapters.contracts.relation.RelationConfig",
      "dbt.adapters.postgres.relation_configs.PostgresIndexConfigChange",
      "dbt.adapters.relation_configs.RelationConfigChangeAction"
    ],
    "dbt.adapters.postgres.connections.PostgresCredentials": [
      "dbt.adapters.contracts.connection.Credentials",
      "dbt_common.helper_types.Port"
    ],
    "dbt.adapters.postgres.connections.PostgresConnectionManager": [
      "dbt_common.exceptions.DbtDatabaseError",
      "dbt_common.record.RecorderMode",
      "dbt.adapters.sql.SQLConnectionManager",
      "dbt.adapters.postgres.record.PostgresRecordReplayHandle",
      "dbt_common.record.get_record_mode_from_env",
      "dbt_common.events.functions.warn_or_error",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.contracts.connection.AdapterResponse",
      "dbt.adapters.events.types.TypeCodeNotFound"
    ],
    "dbt.adapters.postgres.impl.PostgresIndexConfig": [
      "dbt.adapters.exceptions.IndexConfigNotDictError",
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt.adapters.exceptions.IndexConfigError",
      "dbt_encoding.md5",
      "dbt_common.dataclass_schema.ValidationError",
      "dbt_common.utils.encoding"
    ],
    "dbt.adapters.postgres.impl.PostgresConfig": [
      "dbt.adapters.base.AdapterConfig"
    ],
    "dbt.adapters.postgres.impl.PostgresAdapter": [
      "dbt.adapters.capability.Support",
      "dbt.adapters.exceptions.UnexpectedDbReferenceError",
      "dbt.adapters.postgres.relation.PostgresRelation",
      "dbt.adapters.base.ConstraintSupport",
      "dbt.adapters.sql.SQLAdapter",
      "dbt.adapters.postgres.connections.PostgresConnectionManager",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.capability.CapabilityDict",
      "dbt.adapters.capability.Capability",
      "dbt_common.contracts.constraints.ConstraintType",
      "dbt.adapters.capability.CapabilitySupport",
      "dbt.adapters.base.available",
      "dbt.adapters.postgres.column.PostgresColumn",
      "dbt.adapters.exceptions.CrossDbReferenceProhibitedError"
    ],
    "dbt.adapters.postgres.column.PostgresColumn": [
      "dbt.adapters.base.Column"
    ],
    "dbt.adapters.catalogs._integration.CatalogIntegration": [
      "dbt.adapters.contracts.relation.RelationConfig"
    ],
    "dbt.adapters.catalogs._client.CatalogIntegrationClient": [
      "dbt.adapters.catalogs._exceptions.DbtCatalogIntegrationAlreadyExistsError",
      "dbt.adapters.catalogs._integration.CatalogIntegration",
      "dbt.adapters.catalogs._integration.CatalogIntegrationConfig",
      "dbt.adapters.catalogs._exceptions.DbtCatalogIntegrationNotSupportedError",
      "dbt.adapters.catalogs._exceptions.DbtCatalogIntegrationNotFoundError"
    ],
    "dbt.adapters.catalogs._exceptions.DbtCatalogIntegrationAlreadyExistsError": [
      "dbt_common.exceptions.DbtConfigError"
    ],
    "dbt.adapters.catalogs._exceptions.DbtCatalogIntegrationNotFoundError": [
      "dbt_common.exceptions.DbtConfigError"
    ],
    "dbt.adapters.catalogs._exceptions.DbtCatalogIntegrationNotSupportedError": [
      "dbt_common.exceptions.DbtConfigError"
    ],
    "dbt.adapters.duckdb.relation.DuckDBRelation": [
      "dbt.adapters.base.relation.BaseRelation",
      "dbt.adapters.contracts.relation.HasQuoting",
      "dbt.adapters.contracts.relation.RelationConfig"
    ],
    "dbt.adapters.duckdb.credentials.Attachment": [
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.adapters.duckdb.credentials.PluginConfig": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.adapters.duckdb.credentials.Remote": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.adapters.duckdb.credentials.Retries": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.adapters.duckdb.credentials.Extension": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.adapters.duckdb.credentials.DuckDBCredentials": [
      "dbt.adapters.duckdb.secrets.DEFAULT_SECRET_PREFIX",
      "dbt.adapters.contracts.connection.Credentials",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.duckdb.secrets.Secret"
    ],
    "dbt.adapters.duckdb.connections.DuckDBConnectionManager": [
      "dbt.exceptions.DbtRuntimeError",
      "dbt.adapters.exceptions.FailedToConnectError",
      "dbt.adapters.contracts.connection.ConnectionState",
      "dbt.adapters.exceptions",
      "dbt.adapters.sql.SQLConnectionManager",
      "dbt.adapters.contracts.connection.AdapterRequiredConfig",
      "dbt.exceptions",
      "dbt.adapters",
      "dbt.adapters.contracts.connection.AdapterResponse",
      "dbt.adapters.contracts.connection.Connection"
    ],
    "dbt.adapters.duckdb.cli.DuckdbtShell": [
      "dbt.cli.main.dbtRunnerResult",
      "self._run_dbt_command",
      "dbt.adapters.duckdb.connections.DuckDBConnectionManager",
      "dbt.cli.main.dbtRunner",
      "self.dbt.invoke",
      "self.dbt"
    ],
    "dbt.adapters.duckdb.utils.SourceConfig": [
      "dbt.adapters.contracts.relation.RelationConfig"
    ],
    "dbt.adapters.duckdb.utils.TargetConfig": [
      "dbt.adapters.base.relation.BaseRelation",
      "dbt.adapters.base.column.Column"
    ],
    "dbt.adapters.duckdb.secrets.Secret": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.adapters.duckdb.impl.DuckDBAdapter": [
      "dbt.adapters.base.impl.ConstraintSupport",
      "dbt.adapters.duckdb.utils.TargetConfig",
      "dbt.adapters.contracts.relation.Path",
      "dbt_common.contracts.constraints.ColumnLevelConstraint",
      "dbt.adapters.duckdb.connections.DuckDBConnectionManager",
      "dbt.adapters.sql.SQLAdapter",
      "dbt.adapters.duckdb.utils.TargetLocation",
      "dbt.adapters.base.BaseRelation",
      "dbt.adapters.contracts.relation.RelationType",
      "dbt.adapters.duckdb.relation.DuckDBRelation",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt_common.contracts.constraints.ConstraintType",
      "dbt.adapters.base.column.Column",
      "dbt.adapters.base.meta.available",
      "dbt.adapters.contracts.connection.AdapterResponse",
      "dbt_common.exceptions.DbtInternalError",
      "dbt.adapters.duckdb.column.DuckDBColumn"
    ],
    "dbt.adapters.duckdb.column.DuckDBColumn": [
      "dbt.adapters.base.column.Column"
    ],
    "dbt.adapters.relation_configs.config_validation.RelationConfigValidationRule": [
      "dbt_common.exceptions.DbtRuntimeError"
    ],
    "dbt.adapters.relation_configs.config_change.RelationConfigChangeAction": [
      "dbt_common.dataclass_schema.StrEnum"
    ],
    "dbt.adapters.relation_configs.config_change.RelationConfigChange": [
      "dbt.adapters.relation_configs.config_base.RelationConfigBase"
    ],
    "dbt.adapters.relation_configs.config_base.RelationConfigBase": [
      "dbt_common.utils.filter_null_values"
    ],
    "dbt.adapters.events.logging.AdapterLogger": [
      "dbt_common.events.event_handler.set_package_logging",
      "dbt.adapters.events.types.AdapterEventInfo",
      "dbt_common.events.functions.fire_event",
      "dbt.adapters.events.types.AdapterEventWarning",
      "dbt_common.events.get_event_manager",
      "dbt.adapters.events.types.AdapterEventDebug",
      "dbt_common.events.contextvars.get_node_info",
      "dbt.adapters.events.types.AdapterEventError"
    ],
    "dbt.adapters.events.types.CollectFreshnessReturnSignature": [
      "dbt_common.ui.line_wrap_message",
      "dbt_common.ui.warning_tag",
      "dbt.adapters.events.base_types.WarnLevel"
    ],
    "dbt.adapters.events.types.AdapterDeprecationWarning": [
      "dbt_common.ui.line_wrap_message",
      "dbt_common.ui.warning_tag",
      "dbt.adapters.events.base_types.WarnLevel"
    ],
    "dbt.adapters.events.types.AdapterEventDebug": [
      "dbt.adapters.events.base_types.DebugLevel"
    ],
    "dbt.adapters.events.types.AdapterEventInfo": [
      "dbt.adapters.events.base_types.InfoLevel"
    ],
    "dbt.adapters.events.types.AdapterEventWarning": [
      "dbt.adapters.events.base_types.WarnLevel"
    ],
    "dbt.adapters.events.types.AdapterEventError": [
      "dbt.adapters.events.base_types.ErrorLevel"
    ],
    "dbt.adapters.events.types.NewConnection": [
      "dbt.adapters.events.base_types.DebugLevel"
    ],
    "dbt.adapters.events.types.ConnectionReused": [
      "dbt.adapters.events.base_types.DebugLevel"
    ],
    "dbt.adapters.events.types.ConnectionLeftOpenInCleanup": [
      "dbt.adapters.events.base_types.DebugLevel"
    ],
    "dbt.adapters.events.types.ConnectionClosedInCleanup": [
      "dbt.adapters.events.base_types.DebugLevel"
    ],
    "dbt.adapters.events.types.RollbackFailed": [
      "dbt.adapters.events.base_types.DebugLevel"
    ],
    "dbt.adapters.events.types.ConnectionClosed": [
      "dbt.adapters.events.base_types.DebugLevel"
    ],
    "dbt.adapters.events.types.ConnectionLeftOpen": [
      "dbt.adapters.events.base_types.DebugLevel"
    ],
    "dbt.adapters.events.types.Rollback": [
      "dbt.adapters.events.base_types.DebugLevel"
    ],
    "dbt.adapters.events.types.CacheMiss": [
      "dbt.adapters.events.base_types.DebugLevel"
    ],
    "dbt.adapters.events.types.ListRelations": [
      "dbt.adapters.events.base_types.DebugLevel"
    ],
    "dbt.adapters.events.types.ConnectionUsed": [
      "dbt.adapters.events.base_types.DebugLevel"
    ],
    "dbt.adapters.events.types.SQLQuery": [
      "dbt.adapters.events.base_types.DebugLevel"
    ],
    "dbt.adapters.events.types.SQLQueryStatus": [
      "dbt.adapters.events.base_types.DebugLevel"
    ],
    "dbt.adapters.events.types.SQLCommit": [
      "dbt.adapters.events.base_types.DebugLevel"
    ],
    "dbt.adapters.events.types.ColTypeChange": [
      "dbt.adapters.events.base_types.DebugLevel"
    ],
    "dbt.adapters.events.types.SchemaCreation": [
      "dbt.adapters.events.base_types.DebugLevel"
    ],
    "dbt.adapters.events.types.SchemaDrop": [
      "dbt.adapters.events.base_types.DebugLevel"
    ],
    "dbt.adapters.events.types.CacheAction": [
      "dbt.adapters.events.base_types.DebugLevel"
    ],
    "dbt.adapters.events.types.CacheDumpGraph": [
      "dbt.adapters.events.base_types.DebugLevel"
    ],
    "dbt.adapters.events.types.AdapterRegistered": [
      "dbt.adapters.events.base_types.DynamicLevel"
    ],
    "dbt.adapters.events.types.AdapterImportError": [
      "dbt.adapters.events.base_types.InfoLevel"
    ],
    "dbt.adapters.events.types.PluginLoadError": [
      "dbt.adapters.events.base_types.DebugLevel"
    ],
    "dbt.adapters.events.types.NewConnectionOpening": [
      "dbt.adapters.events.base_types.DebugLevel"
    ],
    "dbt.adapters.events.types.CodeExecution": [
      "dbt.adapters.events.base_types.DebugLevel"
    ],
    "dbt.adapters.events.types.CodeExecutionStatus": [
      "dbt.adapters.events.base_types.DebugLevel"
    ],
    "dbt.adapters.events.types.CatalogGenerationError": [
      "dbt.adapters.events.base_types.WarnLevel"
    ],
    "dbt.adapters.events.types.WriteCatalogFailure": [
      "dbt.adapters.events.base_types.ErrorLevel"
    ],
    "dbt.adapters.events.types.CatalogWritten": [
      "dbt.adapters.events.base_types.InfoLevel"
    ],
    "dbt.adapters.events.types.CannotGenerateDocs": [
      "dbt.adapters.events.base_types.InfoLevel"
    ],
    "dbt.adapters.events.types.BuildingCatalog": [
      "dbt.adapters.events.base_types.InfoLevel"
    ],
    "dbt.adapters.events.types.DatabaseErrorRunningHook": [
      "dbt.adapters.events.base_types.InfoLevel"
    ],
    "dbt.adapters.events.types.HooksRunning": [
      "dbt.adapters.events.base_types.InfoLevel"
    ],
    "dbt.adapters.events.types.FinishedRunningStats": [
      "dbt.adapters.events.base_types.InfoLevel"
    ],
    "dbt.adapters.events.types.ConstraintNotEnforced": [
      "dbt_common.ui.line_wrap_message",
      "dbt_common.ui.warning_tag",
      "dbt.adapters.events.base_types.WarnLevel"
    ],
    "dbt.adapters.events.types.ConstraintNotSupported": [
      "dbt_common.ui.line_wrap_message",
      "dbt_common.ui.warning_tag",
      "dbt.adapters.events.base_types.WarnLevel"
    ],
    "dbt.adapters.events.types.TypeCodeNotFound": [
      "dbt.adapters.events.base_types.DebugLevel",
      "dbt_common.ui.line_wrap_message",
      "dbt_common.ui.warning_tag"
    ],
    "dbt.adapters.events.base_types.AdapterBaseEvent": [
      "dbt_common.events.base_types.BaseEvent",
      "dbt.adapters.events.adapter_types_pb2"
    ],
    "dbt.adapters.events.base_types.DynamicLevel": [
      "dbt.adapters.events.base_types.AdapterBaseEvent",
      "dbt_common.events.base_types.DynamicLevel"
    ],
    "dbt.adapters.events.base_types.TestLevel": [
      "dbt_common.events.base_types.TestLevel",
      "dbt.adapters.events.base_types.AdapterBaseEvent"
    ],
    "dbt.adapters.events.base_types.DebugLevel": [
      "dbt.adapters.events.base_types.AdapterBaseEvent",
      "dbt_common.events.base_types.DebugLevel"
    ],
    "dbt.adapters.events.base_types.InfoLevel": [
      "dbt_common.events.base_types.InfoLevel",
      "dbt.adapters.events.base_types.AdapterBaseEvent"
    ],
    "dbt.adapters.events.base_types.WarnLevel": [
      "dbt.adapters.events.base_types.AdapterBaseEvent",
      "dbt_common.events.base_types.WarnLevel"
    ],
    "dbt.adapters.events.base_types.ErrorLevel": [
      "dbt.adapters.events.base_types.AdapterBaseEvent",
      "dbt_common.events.base_types.ErrorLevel"
    ],
    "dbt.adapters.base.relation.EventTimeFilter": [
      "dbt.adapters.contracts.relation.FakeAPIObject"
    ],
    "dbt.adapters.base.relation.BaseRelation": [
      "dbt.adapters.contracts.relation.ComponentName",
      "self.dbt_created",
      "dbt_common.utils.deep_merge",
      "dbt.adapters.contracts.relation.Path",
      "dbt.adapters.contracts.relation.RelationType",
      "dbt.adapters.contracts.relation.Policy",
      "dbt.adapters.contracts.relation.HasQuoting",
      "dbt.adapters.utils.classproperty",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt_common.utils.filter_null_values",
      "dbt.adapters.exceptions.ApproximateMatchError",
      "dbt.adapters.contracts.relation.RelationConfig",
      "dbt.adapters.contracts.relation.FakeAPIObject"
    ],
    "dbt.adapters.base.relation.InformationSchema": [
      "dbt.adapters.contracts.relation.Path",
      "dbt.adapters.contracts.relation.RelationType",
      "dbt.adapters.contracts.relation.Policy",
      "dbt_common.exceptions.CompilationError",
      "dbt.adapters.base.relation.BaseRelation"
    ],
    "dbt.adapters.base.relation.SchemaSearchMap": [
      "dbt.adapters.exceptions.MultipleDatabasesNotAllowedError"
    ],
    "dbt.adapters.base.relation.AdapterTrackingRelationInfo": [
      "dbt.adapters.contracts.relation.FakeAPIObject"
    ],
    "dbt.adapters.base.connections.BaseConnectionManager": [
      "dbt.adapters.events.types.ConnectionClosedInCleanup",
      "dbt.adapters.events.types.ConnectionLeftOpen",
      "dbt.adapters.base.query_headers.MacroQueryStringSetter",
      "dbt.adapters.events.types.NewConnection",
      "dbt.adapters.exceptions.InvalidConnectionError",
      "dbt.adapters.events.types.Rollback",
      "dbt.adapters.contracts.connection.Identifier",
      "dbt.adapters.events.types.RollbackFailed",
      "dbt_common.events.contextvars.get_node_info",
      "dbt_common.exceptions.NotImplementedError",
      "dbt.adapters.exceptions.FailedToConnectError",
      "dbt.adapters.events.logging.AdapterLogger",
      "dbt.adapters.events.types.ConnectionReused",
      "dbt.adapters.events.types.ConnectionLeftOpenInCleanup",
      "dbt.adapters.contracts.connection.LazyHandle",
      "dbt.adapters.events.types.ConnectionClosed",
      "dbt.adapters.contracts.connection.AdapterRequiredConfig",
      "dbt_common.exceptions.DbtInternalError",
      "dbt.adapters.contracts.connection.ConnectionState",
      "dbt_common.events.functions.fire_event",
      "dbt_common.utils.cast_to_str",
      "dbt.adapters.contracts.connection.AdapterResponse",
      "dbt.adapters.contracts.connection.Connection"
    ],
    "dbt.adapters.base.query_headers._QueryComment": [
      "dbt_common.exceptions.DbtRuntimeError"
    ],
    "dbt.adapters.base.query_headers.MacroQueryStringSetter": [
      "dbt.adapters.contracts.connection.AdapterRequiredConfig",
      "dbt.adapters.contracts.connection.QueryComment",
      "dbt.adapters.clients.jinja.QueryStringGenerator"
    ],
    "dbt.adapters.base.plugin.AdapterPlugin": [
      "dbt.adapters.contracts.connection.Credentials",
      "dbt.adapters.protocol.AdapterProtocol"
    ],
    "dbt.adapters.base.impl.ConstraintSupport": [
      "dbt.adapters.base.impl.str"
    ],
    "dbt.adapters.base.impl.PythonJobHelper": [
      "dbt_common.exceptions.NotImplementedError",
      "dbt.adapters.contracts.connection.Credentials"
    ],
    "dbt.adapters.base.impl.BaseAdapter": [
      "dbt.adapters.events.types.CollectFreshnessReturnSignature",
      "dbt.adapters.protocol.MacroContextGeneratorCallable",
      "dbt.adapters.cache.RelationsCache",
      "dbt.adapters.base.connections.BaseConnectionManager",
      "dbt.adapters.exceptions.RenameToNoneAttemptedError",
      "dbt.adapters.base.meta.available_property",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt_common.contracts.constraints.ModelLevelConstraint",
      "dbt_common.clients.agate_helper.get_column_value_uncased",
      "dbt.adapters.catalogs.CatalogIntegrationClient",
      "dbt_common.clients.jinja.CallableMacroGenerator",
      "dbt.adapters.events.types.ConstraintNotEnforced",
      "dbt_common.utils.executor",
      "dbt.adapters.base.connections.AdapterResponse",
      "dbt_common.contracts.constraints.ConstraintType",
      "dbt.adapters.exceptions.NullRelationDropAttemptedError",
      "dbt_common.exceptions.MacroArgTypeError",
      "dbt_common.exceptions.MacroResultError",
      "dbt.adapters.events.types.ListRelations",
      "dbt_common.exceptions.NotImplementedError",
      "dbt_common.clients.agate_helper.Integer",
      "dbt.adapters.events.types.ConstraintNotSupported",
      "dbt.adapters.contracts.relation.RelationConfig",
      "dbt.adapters.base.relation.BaseRelation",
      "dbt.adapters.base.column.Column",
      "dbt_common.record.auto_record_function",
      "dbt.adapters.exceptions.NullRelationCacheAttemptedError",
      "dbt.adapters.catalogs.CatalogIntegrationConfig",
      "dbt_common.record.supports_replay",
      "dbt.adapters.record.base.AdapterGetPartitionsMetadataRecord",
      "dbt_common.exceptions.DbtValidationError",
      "dbt_common.utils.AttrDict",
      "dbt.adapters.base.connections.Connection",
      "dbt_common.contracts.constraints.ColumnLevelConstraint",
      "dbt_common.contracts.metadata.CatalogTable",
      "dbt_common.utils.filter_null_values",
      "dbt.adapters.base.relation.AdapterTrackingRelationInfo",
      "dbt.adapters.capability.Capability",
      "dbt.adapters.contracts.macros.MacroResolverProtocol",
      "dbt.adapters.base.meta.available",
      "dbt.adapters.base.relation.InformationSchema",
      "dbt_common.exceptions.DbtInternalError",
      "dbt_common.clients.agate_helper.table_from_rows",
      "dbt_common.behavior_flags.BehaviorFlag",
      "dbt_common.record.record_function",
      "dbt.adapters.exceptions.QuoteConfigTypeError",
      "dbt.adapters.record.base.AdapterExecuteRecord",
      "dbt_common.behavior_flags.Behavior",
      "dbt.adapters.exceptions.RelationReturnedMultipleResultsError",
      "dbt_common.events.functions.warn_or_error",
      "dbt.adapters.record.base.AdapterConvertTypeRecord",
      "dbt_common.events.functions.fire_event",
      "dbt.adapters.protocol.AdapterConfig",
      "dbt.adapters.events.types.CacheMiss",
      "dbt_common.utils.cast_to_str",
      "dbt.adapters.capability.CapabilityDict",
      "dbt.adapters.base.relation.SchemaSearchMap",
      "dbt.adapters.record.base.AdapterStandardizeGrantsDictRecord",
      "dbt.adapters.exceptions.SnapshotTargetNotSnapshotTableError",
      "dbt.adapters.cache._make_ref_key_dict",
      "dbt.adapters.base.meta.AdapterMeta",
      "dbt.adapters.catalogs.CatalogIntegration",
      "dbt.adapters.base.relation.ComponentName",
      "dbt.adapters.catalogs.CatalogRelation"
    ],
    "dbt.adapters.base.column.Column": [
      "dbt_common.exceptions.DbtRuntimeError"
    ],
    "dbt.adapters.base.meta._Available": [
      "dbt_common.events.functions.warn_or_error",
      "dbt.adapters.events.types.AdapterDeprecationWarning"
    ],
    "dbt.adapters.base.meta.available_property": [
      "dbt.adapters.base.meta.property"
    ],
    "dbt.adapters.spark.relation.SparkQuotePolicy": [
      "dbt.adapters.base.relation.Policy"
    ],
    "dbt.adapters.spark.relation.SparkIncludePolicy": [
      "dbt.adapters.base.relation.Policy"
    ],
    "dbt.adapters.spark.relation.SparkRelation": [
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.base.relation.BaseRelation",
      "dbt.adapters.base.relation.Policy"
    ],
    "dbt.adapters.spark.connections.SparkConnectionMethod": [
      "dbt_common.dataclass_schema.StrEnum"
    ],
    "dbt.adapters.spark.connections.SparkCredentials": [
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.contracts.connection.Credentials"
    ],
    "dbt.adapters.spark.connections.PyhiveConnectionWrapper": [
      "dbt_common.exceptions.DbtDatabaseError",
      "dbt.adapters.spark.connections.SparkConnectionWrapper"
    ],
    "dbt.adapters.spark.connections.PyodbcConnectionWrapper": [
      "dbt.adapters.spark.connections.PyhiveConnectionWrapper"
    ],
    "dbt.adapters.spark.connections.SparkConnectionManager": [
      "dbt_common.exceptions.DbtConfigError",
      "dbt.adapters.exceptions.FailedToConnectError",
      "dbt.adapters.contracts.connection.ConnectionState",
      "dbt.adapters.sql.SQLConnectionManager",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.contracts.connection.AdapterResponse",
      "dbt.adapters.spark.__version__"
    ],
    "dbt.adapters.spark.session.Cursor": [
      "dbt_common.exceptions.DbtRuntimeError"
    ],
    "dbt.adapters.spark.session.SessionConnectionWrapper": [
      "dbt.adapters.spark.connections.SparkConnectionWrapper"
    ],
    "dbt.adapters.spark.impl.SparkConfig": [
      "dbt.adapters.base.AdapterConfig"
    ],
    "dbt.adapters.spark.impl.SparkAdapter": [
      "dbt.adapters.base.impl.ConstraintSupport",
      "dbt.adapters.spark.python_submissions.JobClusterPythonJobHelper",
      "dbt.adapters.sql.SQLAdapter",
      "dbt_common.exceptions.CompilationError",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt_common.utils.executor",
      "dbt_common.contracts.constraints.ConstraintType",
      "dbt.adapters.base.PythonJobHelper",
      "dbt.adapters.contracts.relation.RelationType",
      "dbt.adapters.spark.python_submissions.AllPurposeClusterPythonJobHelper",
      "dbt_common.utils.AttrDict",
      "dbt.adapters.spark.SparkRelation",
      "dbt.adapters.base.relation.InformationSchema",
      "dbt.adapters.spark.SparkConnectionManager",
      "dbt.adapters.base.impl.catch_as_completed",
      "dbt.adapters.base.BaseRelation",
      "dbt.adapters.spark.SparkColumn",
      "dbt.adapters.contracts.relation.RelationConfig",
      "dbt.adapters.contracts.connection.AdapterResponse",
      "dbt_common.clients.agate_helper.DEFAULT_TYPE_TESTER"
    ],
    "dbt.adapters.spark.column.SparkColumn": [
      "dbt.adapters.base.column.Column",
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.adapters.spark.python_submissions.BaseDatabricksHelper": [
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.spark.SparkCredentials",
      "dbt.adapters.base.PythonJobHelper"
    ],
    "dbt.adapters.spark.python_submissions.JobClusterPythonJobHelper": [
      "dbt.adapters.spark.python_submissions.BaseDatabricksHelper"
    ],
    "dbt.adapters.spark.python_submissions.DBContext": [
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.spark.SparkCredentials"
    ],
    "dbt.adapters.spark.python_submissions.DBCommand": [
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.spark.SparkCredentials"
    ],
    "dbt.adapters.spark.python_submissions.AllPurposeClusterPythonJobHelper": [
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.spark.python_submissions.BaseDatabricksHelper"
    ],
    "dbt.adapters.athena.relation.AthenaIncludePolicy": [
      "dbt.adapters.base.relation.Policy"
    ],
    "dbt.adapters.athena.relation.AthenaHiveIncludePolicy": [
      "dbt.adapters.base.relation.Policy"
    ],
    "dbt.adapters.athena.relation.AthenaRelation": [
      "dbt.adapters.base.relation.EventTimeFilter",
      "dbt.adapters.base.relation.BaseRelation",
      "dbt.adapters.base.relation.Policy"
    ],
    "dbt.adapters.athena.relation.AthenaSchemaSearchMap": [
      "dbt.adapters.base.relation.InformationSchema"
    ],
    "dbt.adapters.athena.config.AthenaSparkSessionConfig": [
      "dbt.adapters.athena.constants.DEFAULT_CALCULATION_TIMEOUT",
      "dbt.adapters.athena.constants.LOGGER",
      "dbt.adapters.athena.constants.DEFAULT_POLLING_INTERVAL",
      "dbt.adapters.athena.constants.DEFAULT_SPARK_MAX_CONCURRENT_DPUS",
      "dbt.adapters.athena.constants.DEFAULT_SPARK_COORDINATOR_DPU_SIZE",
      "dbt.adapters.athena.constants.DEFAULT_SPARK_PROPERTIES",
      "dbt.adapters.athena.constants.DEFAULT_SPARK_EXECUTOR_DPU_SIZE"
    ],
    "dbt.adapters.athena.connections.AthenaAdapterResponse": [
      "dbt.adapters.contracts.connection.AdapterResponse"
    ],
    "dbt.adapters.athena.connections.AthenaCredentials": [
      "dbt.adapters.contracts.connection.Credentials",
      "dbt_common.utils.md5"
    ],
    "dbt.adapters.athena.connections.AthenaCursor": [
      "dbt.adapters.athena.constants.LOGGER"
    ],
    "dbt.adapters.athena.connections.AthenaConnectionManager": [
      "dbt.adapters.athena.constants.LOGGER",
      "dbt.adapters.athena.session.get_boto3_session",
      "dbt.adapters.contracts.connection.ConnectionState",
      "dbt.adapters.sql.SQLConnectionManager",
      "dbt_common.exceptions.ConnectionError",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.athena.query_headers.AthenaMacroQueryStringSetter",
      "dbt.adapters.athena.config.get_boto3_config",
      "dbt.adapters.contracts.connection.Connection"
    ],
    "dbt.adapters.athena.session.AthenaSparkSessionManager": [
      "dbt.adapters.athena.constants.LOGGER",
      "dbt.adapters.athena.constants.SESSION_IDLE_TIMEOUT_MIN",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.athena.config.get_boto3_config",
      "dbt.adapters.athena.constants.DEFAULT_THREAD_COUNT"
    ],
    "dbt.adapters.athena.query_headers.AthenaMacroQueryStringSetter": [
      "dbt.adapters.contracts.connection.AdapterRequiredConfig",
      "dbt.adapters.base.query_headers.MacroQueryStringSetter"
    ],
    "dbt.adapters.athena.query_headers._AthenaQueryComment": [
      "dbt.adapters.base.query_headers._QueryComment"
    ],
    "dbt.adapters.athena.lakeformation.LfTagsManager": [
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.athena.relation.AthenaRelation"
    ],
    "dbt.adapters.athena.lakeformation.LfPermissions": [
      "dbt.adapters.athena.relation.AthenaRelation"
    ],
    "dbt.adapters.athena.exceptions.SnapshotMigrationRequired": [
      "dbt_common.exceptions.CompilationError"
    ],
    "dbt.adapters.athena.exceptions.S3LocationException": [
      "dbt_common.exceptions.DbtRuntimeError"
    ],
    "dbt.adapters.athena.impl.AthenaConfig": [
      "dbt.adapters.base.impl.AdapterConfig"
    ],
    "dbt.adapters.athena.impl.AthenaAdapter": [
      "dbt.adapters.athena.AthenaConnectionManager",
      "dbt.adapters.athena.utils.ellipsis_comment",
      "dbt.adapters.sql.SQLAdapter",
      "dbt.adapters.athena.s3.S3DataNaming",
      "dbt.adapters.athena.utils.is_valid_table_parameter_key",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.athena.utils.AthenaCatalogType",
      "dbt.adapters.base.PythonJobHelper",
      "dbt_common.contracts.constraints.ConstraintType",
      "dbt.adapters.athena.constants.LOGGER",
      "dbt.adapters.contracts.relation.RelationConfig",
      "dbt.adapters.athena.utils.get_catalog_type",
      "dbt.adapters.athena.exceptions.S3LocationException",
      "dbt.adapters.athena.utils.clean_sql_comment",
      "dbt.adapters.base.relation.BaseRelation",
      "dbt.adapters.athena.relation.get_table_type",
      "dbt.adapters.athena.config.get_boto3_config",
      "dbt.adapters.athena.relation.AthenaRelation",
      "dbt.adapters.athena.relation.TableType",
      "dbt.adapters.athena.connections.AthenaCursor",
      "dbt.adapters.athena.lakeformation.LfPermissions",
      "dbt.adapters.athena.column.AthenaColumn",
      "dbt.adapters.athena.utils.get_chunks",
      "dbt.adapters.base.ConstraintSupport",
      "dbt.adapters.athena.exceptions.SnapshotMigrationRequired",
      "dbt.adapters.base.relation.InformationSchema",
      "dbt.adapters.base.available",
      "dbt_common.clients.agate_helper.table_from_rows",
      "dbt.adapters.athena.lakeformation.LfTagsManager",
      "dbt.adapters.athena.lakeformation.LfGrantsConfig",
      "dbt.adapters.athena.lakeformation.LfTagsConfig",
      "dbt.adapters.athena.utils.get_catalog_id",
      "dbt.adapters.athena.python_submissions.AthenaPythonJobHelper",
      "dbt.adapters.athena.utils.stringify_table_parameter_value",
      "dbt.adapters.athena.relation.AthenaSchemaSearchMap",
      "dbt.adapters.contracts.connection.AdapterResponse"
    ],
    "dbt.adapters.athena.column.AthenaColumn": [
      "dbt.adapters.athena.relation.TableType",
      "dbt.adapters.base.column.Column",
      "dbt_common.exceptions.DbtRuntimeError"
    ],
    "dbt.adapters.athena.python_submissions.AthenaPythonJobHelper": [
      "dbt.adapters.athena.constants.LOGGER",
      "dbt.adapters.athena.connections.AthenaCredentials",
      "dbt.adapters.athena.config.AthenaSparkSessionConfig",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.athena.session.AthenaSparkSessionManager",
      "dbt.adapters.base.PythonJobHelper"
    ],
    "dbt.adapters.sql.connections.SQLConnectionManager": [
      "dbt_common.exceptions.NotImplementedError",
      "dbt.adapters.events.types.SQLCommit",
      "dbt_common.clients.agate_helper.empty_table",
      "dbt.adapters.contracts.connection.Connection",
      "dbt.adapters.contracts.connection.ConnectionState",
      "dbt_common.clients.agate_helper.table_from_data_flat",
      "dbt.adapters.events.types.SQLQueryStatus",
      "dbt_common.events.functions.fire_event",
      "dbt.adapters.events.types.ConnectionUsed",
      "dbt_common.utils.cast_to_str",
      "dbt_common.events.contextvars.get_node_info",
      "dbt.adapters.base.BaseConnectionManager",
      "dbt.adapters.contracts.connection.AdapterResponse",
      "dbt.adapters.events.types.AdapterEventDebug",
      "dbt_common.exceptions.DbtInternalError",
      "dbt.adapters.events.types.SQLQuery"
    ],
    "dbt.adapters.sql.impl.SQLAdapter": [
      "dbt.adapters.exceptions.RelationTypeNullError",
      "dbt.adapters.contracts.connection.Connection",
      "dbt.adapters.base.BaseAdapter",
      "dbt_common.record.record_function",
      "dbt.adapters.sql.connections.SQLConnectionManager",
      "dbt.adapters.base.BaseRelation",
      "dbt_common.events.functions.fire_event",
      "dbt.adapters.cache._make_ref_key_dict",
      "dbt.adapters.events.types.ColTypeChange",
      "dbt.adapters.record.base.AdapterTestSqlRecord",
      "dbt.adapters.contracts.connection.AdapterResponse",
      "dbt.adapters.events.types.SchemaCreation",
      "dbt.adapters.base.available",
      "dbt.adapters.events.types.SchemaDrop"
    ],
    "dbt.adapters.record.cursor.description.CursorGetDescriptionRecord": [
      "dbt_common.record.Recorder",
      "dbt_common.record.Record"
    ],
    "dbt.adapters.record.cursor.execute.CursorExecuteParams": [
      "dbt.adapters.record.cursor.fetchall.CursorFetchAllResult"
    ],
    "dbt.adapters.record.cursor.execute.CursorExecuteRecord": [
      "dbt_common.record.Recorder",
      "dbt_common.record.Record"
    ],
    "dbt.adapters.record.cursor.fetchall.CursorFetchAllRecord": [
      "dbt_common.record.Recorder",
      "dbt_common.record.Record"
    ],
    "dbt.adapters.record.cursor.fetchmany.CursorFetchManyRecord": [
      "dbt_common.record.Recorder",
      "dbt_common.record.Record"
    ],
    "dbt.adapters.record.cursor.rowcount.CursorGetRowCountRecord": [
      "dbt_common.record.Recorder",
      "dbt_common.record.Record"
    ],
    "dbt.adapters.record.cursor.fetchone.CursorFetchOneRecord": [
      "dbt_common.record.Recorder",
      "dbt_common.record.Record"
    ],
    "dbt.adapters.record.cursor.cursor.RecordReplayCursor": [
      "dbt.adapters.record.cursor.fetchone.CursorFetchOneRecord",
      "dbt.adapters.record.cursor.fetchall.CursorFetchAllRecord",
      "dbt_common.record.record_function",
      "dbt.adapters.record.cursor.fetchmany.CursorFetchManyRecord",
      "dbt_common.events.functions.fire_event",
      "dbt.adapters.record.cursor.execute.CursorExecuteRecord",
      "dbt_common.events.types.RecordReplayIssue",
      "dbt_common.events.base_types.BaseEvent",
      "dbt.adapters.record.cursor.rowcount.CursorGetRowCountRecord",
      "dbt.adapters.record.cursor.description.CursorGetDescriptionRecord",
      "dbt.adapters.contracts.connection.Connection"
    ],
    "dbt.adapters.databricks.python_models.run_tracking.PythonRunTracker": [
      "dbt.adapters.databricks.logging.logger",
      "dbt.adapters.databricks.api_client.DatabricksApiClient",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.databricks.api_client.CommandExecution"
    ],
    "dbt.adapters.databricks.python_models.python_submissions.BaseDatabricksHelper": [
      "dbt.adapters.databricks.python_models.run_tracking.PythonRunTracker",
      "dbt.adapters.databricks.api_client.DatabricksApiClient",
      "dbt.adapters.databricks.python_models.python_config.ParsedPythonModel",
      "dbt.adapters.base.PythonJobHelper",
      "dbt.adapters.databricks.credentials.DatabricksCredentials"
    ],
    "dbt.adapters.databricks.python_models.python_submissions.PythonCommandSubmitter": [
      "dbt.adapters.databricks.python_models.run_tracking.PythonRunTracker",
      "dbt.adapters.databricks.api_client.DatabricksApiClient",
      "dbt.adapters.databricks.api_client.CommandExecution",
      "dbt.adapters.databricks.logging.logger",
      "dbt.adapters.databricks.python_models.python_submissions.PythonSubmitter"
    ],
    "dbt.adapters.databricks.python_models.python_submissions.PythonNotebookUploader": [
      "dbt.adapters.databricks.logging.logger",
      "dbt.adapters.databricks.python_models.python_config.ParsedPythonModel",
      "dbt.adapters.databricks.api_client.DatabricksApiClient",
      "dbt_common.exceptions.DbtRuntimeError"
    ],
    "dbt.adapters.databricks.python_models.python_submissions.PythonPermissionBuilder": [
      "dbt.adapters.databricks.api_client.DatabricksApiClient"
    ],
    "dbt.adapters.databricks.python_models.python_submissions.PythonJobConfigCompiler": [
      "dbt.adapters.databricks.python_models.python_config.ParsedPythonModel",
      "dbt.adapters.databricks.api_client.DatabricksApiClient"
    ],
    "dbt.adapters.databricks.python_models.python_submissions.PythonNotebookSubmitter": [
      "dbt.adapters.databricks.python_models.run_tracking.PythonRunTracker",
      "dbt.adapters.databricks.api_client.DatabricksApiClient",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.databricks.python_models.python_config.ParsedPythonModel",
      "dbt.adapters.databricks.logging.logger",
      "dbt.adapters.databricks.python_models.python_submissions.PythonSubmitter"
    ],
    "dbt.adapters.databricks.python_models.python_submissions.JobClusterPythonJobHelper": [
      "dbt.adapters.databricks.python_models.python_submissions.BaseDatabricksHelper"
    ],
    "dbt.adapters.databricks.python_models.python_submissions.AllPurposeClusterPythonJobHelper": [
      "dbt.adapters.databricks.credentials.DatabricksCredentials",
      "dbt.adapters.databricks.api_client.DatabricksApiClient",
      "dbt.adapters.databricks.python_models.python_submissions.BaseDatabricksHelper",
      "dbt.adapters.databricks.python_models.python_config.ParsedPythonModel"
    ],
    "dbt.adapters.databricks.python_models.python_submissions.ServerlessClusterPythonJobHelper": [
      "dbt.adapters.databricks.python_models.python_submissions.BaseDatabricksHelper"
    ],
    "dbt.adapters.databricks.python_models.python_submissions.PythonWorkflowConfigCompiler": [
      "dbt.adapters.databricks.python_models.python_config.ParsedPythonModel"
    ],
    "dbt.adapters.databricks.python_models.python_submissions.PythonWorkflowCreator": [
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.databricks.api_client.WorkflowJobApi"
    ],
    "dbt.adapters.databricks.python_models.python_submissions.PythonNotebookWorkflowSubmitter": [
      "dbt.adapters.databricks.python_models.run_tracking.PythonRunTracker",
      "dbt.adapters.databricks.api_client.DatabricksApiClient",
      "dbt.adapters.databricks.python_models.python_config.ParsedPythonModel",
      "dbt.adapters.databricks.logging.logger",
      "dbt.adapters.databricks.python_models.python_submissions.PythonSubmitter"
    ],
    "dbt.adapters.databricks.python_models.python_submissions.WorkflowPythonJobHelper": [
      "dbt.adapters.databricks.python_models.python_submissions.BaseDatabricksHelper"
    ],
    "dbt.adapters.databricks.behaviors.columns.GetColumnsBehavior": [
      "dbt_common.utils.dict.AttrDict",
      "dbt.adapters.databricks.utils.handle_missing_objects",
      "dbt.adapters.sql.SQLAdapter",
      "dbt.adapters.databricks.column.DatabricksColumn",
      "dbt.adapters.databricks.relation.DatabricksRelation"
    ],
    "dbt.adapters.databricks.behaviors.columns.GetColumnsByDescribe": [
      "dbt_common.utils.dict.AttrDict",
      "dbt_common.exceptions.DbtDatabaseError",
      "dbt.adapters.sql.SQLAdapter",
      "dbt.adapters.databricks.column.DatabricksColumn",
      "dbt.adapters.databricks.behaviors.columns.GetColumnsBehavior",
      "dbt.adapters.databricks.relation.DatabricksRelation"
    ],
    "dbt.adapters.databricks.behaviors.columns.GetColumnsByInformationSchema": [
      "dbt_common.utils.dict.AttrDict",
      "dbt.adapters.sql.SQLAdapter",
      "dbt.adapters.databricks.column.DatabricksColumn",
      "dbt.adapters.databricks.behaviors.columns.GetColumnsByDescribe",
      "dbt.adapters.databricks.relation.DatabricksRelation"
    ],
    "dbt.adapters.databricks.catalogs._unity.UnityCatalogIntegration": [
      "dbt.adapters.databricks.constants",
      "dbt.adapters.databricks.catalogs._relation.DatabricksCatalogRelation",
      "dbt.adapters.databricks.parse_model",
      "dbt.adapters.contracts.relation.RelationConfig",
      "dbt.adapters.catalogs.CatalogIntegration",
      "dbt.adapters.catalogs.CatalogIntegrationConfig"
    ],
    "dbt.adapters.databricks.catalogs._hive_metastore.HiveMetastoreCatalogIntegration": [
      "dbt.adapters.databricks.constants",
      "dbt.adapters.databricks.catalogs._relation.DatabricksCatalogRelation",
      "dbt.adapters.databricks.parse_model",
      "dbt.adapters.contracts.relation.RelationConfig",
      "dbt.adapters.catalogs.CatalogIntegration",
      "dbt.adapters.catalogs.CatalogIntegrationConfig"
    ],
    "dbt.adapters.databricks.catalogs._relation.DatabricksCatalogRelation": [
      "dbt_common.exceptions.DbtConfigError",
      "dbt.adapters.databricks.constants"
    ],
    "dbt.adapters.databricks.relation_configs.tags.TagsConfig": [
      "dbt.adapters.databricks.relation_configs.base.DatabricksComponentConfig"
    ],
    "dbt.adapters.databricks.relation_configs.tags.TagsProcessor": [
      "dbt.adapters.relation_configs.config_base.RelationResults",
      "dbt.adapters.databricks.relation_configs.base",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.databricks.relation_configs.base.DatabricksComponentProcessor",
      "dbt.adapters.contracts.relation.RelationConfig"
    ],
    "dbt.adapters.databricks.relation_configs.liquid_clustering.LiquidClusteringConfig": [
      "dbt.adapters.databricks.relation_configs.base.DatabricksComponentConfig"
    ],
    "dbt.adapters.databricks.relation_configs.liquid_clustering.LiquidClusteringProcessor": [
      "dbt.adapters.relation_configs.config_base.RelationResults",
      "dbt.adapters.databricks.relation_configs.base",
      "dbt.adapters.databricks.relation_configs.base.DatabricksComponentProcessor",
      "dbt.adapters.contracts.relation.RelationConfig"
    ],
    "dbt.adapters.databricks.relation_configs.table_format.TableFormat": [
      "dbt.adapters.databricks.constants",
      "dbt_common.dataclass_schema.StrEnum"
    ],
    "dbt.adapters.databricks.relation_configs.streaming_table.StreamingTableConfig": [
      "dbt.adapters.databricks.relation_configs.refresh.RefreshConfig",
      "dbt.adapters.databricks.relation_configs.refresh.RefreshProcessor",
      "dbt.adapters.databricks.relation_configs.base.DatabricksComponentConfig",
      "dbt.adapters.databricks.relation_configs.comment.CommentProcessor",
      "dbt.adapters.databricks.relation_configs.tblproperties.TblPropertiesProcessor",
      "dbt.adapters.databricks.relation_configs.base.DatabricksRelationChangeSet",
      "dbt.adapters.databricks.relation_configs.base.DatabricksRelationConfigBase",
      "dbt.adapters.databricks.relation_configs.partitioning.PartitionedByProcessor"
    ],
    "dbt.adapters.databricks.relation_configs.comment.CommentConfig": [
      "dbt.adapters.databricks.relation_configs.base.DatabricksComponentConfig"
    ],
    "dbt.adapters.databricks.relation_configs.comment.CommentProcessor": [
      "dbt.adapters.relation_configs.config_base.RelationResults",
      "dbt.adapters.databricks.relation_configs.base.DatabricksComponentProcessor",
      "dbt.adapters.contracts.relation.RelationConfig"
    ],
    "dbt.adapters.databricks.relation_configs.materialized_view.MaterializedViewConfig": [
      "dbt.adapters.databricks.relation_configs.refresh.RefreshProcessor",
      "dbt.adapters.databricks.relation_configs.base.DatabricksComponentConfig",
      "dbt.adapters.databricks.relation_configs.comment.CommentProcessor",
      "dbt.adapters.databricks.relation_configs.query.QueryProcessor",
      "dbt.adapters.databricks.relation_configs.tblproperties.TblPropertiesProcessor",
      "dbt.adapters.databricks.relation_configs.base.DatabricksRelationChangeSet",
      "dbt.adapters.databricks.relation_configs.base.DatabricksRelationConfigBase",
      "dbt.adapters.databricks.relation_configs.partitioning.PartitionedByProcessor"
    ],
    "dbt.adapters.databricks.relation_configs.query.QueryConfig": [
      "dbt.adapters.databricks.relation_configs.base.DatabricksComponentConfig"
    ],
    "dbt.adapters.databricks.relation_configs.query.QueryProcessor": [
      "dbt.adapters.relation_configs.config_base.RelationResults",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.databricks.relation_configs.base.DatabricksComponentProcessor",
      "dbt.adapters.contracts.relation.RelationConfig",
      "dbt.adapters.databricks.handle.SqlUtils"
    ],
    "dbt.adapters.databricks.relation_configs.column_mask.ColumnMaskConfig": [
      "dbt.adapters.databricks.relation_configs.base.DatabricksComponentConfig"
    ],
    "dbt.adapters.databricks.relation_configs.column_mask.ColumnMaskProcessor": [
      "dbt.adapters.relation_configs.config_base.RelationResults",
      "dbt.adapters.databricks.relation_configs.base.DatabricksComponentProcessor",
      "dbt.adapters.contracts.relation.RelationConfig"
    ],
    "dbt.adapters.databricks.relation_configs.column_tags.ColumnTagsConfig": [
      "dbt.adapters.databricks.relation_configs.base.DatabricksComponentConfig"
    ],
    "dbt.adapters.databricks.relation_configs.column_tags.ColumnTagsProcessor": [
      "dbt.adapters.relation_configs.config_base.RelationResults",
      "dbt.exceptions.DbtRuntimeError",
      "dbt.adapters.databricks.relation_configs.base.DatabricksComponentProcessor",
      "dbt.adapters.contracts.relation.RelationConfig"
    ],
    "dbt.adapters.databricks.relation_configs.tblproperties.TblPropertiesConfig": [
      "dbt.adapters.databricks.relation_configs.base.DatabricksComponentConfig"
    ],
    "dbt.adapters.databricks.relation_configs.tblproperties.TblPropertiesProcessor": [
      "dbt.adapters.relation_configs.config_base.RelationResults",
      "dbt.adapters.databricks.relation_configs.base",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.databricks.relation_configs.base.DatabricksComponentProcessor",
      "dbt.adapters.contracts.relation.RelationConfig"
    ],
    "dbt.adapters.databricks.relation_configs.partitioning.PartitionedByConfig": [
      "dbt.adapters.databricks.relation_configs.base.DatabricksComponentConfig"
    ],
    "dbt.adapters.databricks.relation_configs.partitioning.PartitionedByProcessor": [
      "dbt.adapters.relation_configs.config_base.RelationResults",
      "dbt.adapters.databricks.relation_configs.base",
      "dbt.adapters.databricks.relation_configs.base.DatabricksComponentProcessor",
      "dbt.adapters.contracts.relation.RelationConfig"
    ],
    "dbt.adapters.databricks.relation_configs.view.ViewConfig": [
      "dbt.adapters.databricks.relation_configs.tags.TagsProcessor",
      "dbt.adapters.databricks.relation_configs.comment.CommentProcessor",
      "dbt.adapters.databricks.logging.logger",
      "dbt.adapters.databricks.relation_configs.query.QueryProcessor",
      "dbt.adapters.databricks.relation_configs.tblproperties.TblPropertiesProcessor",
      "dbt.adapters.databricks.relation_configs.base.DatabricksRelationChangeSet",
      "dbt.adapters.databricks.relation_configs.column_tags.ColumnTagsProcessor",
      "dbt.adapters.databricks.relation_configs.base.DatabricksRelationConfigBase",
      "dbt.adapters.databricks.relation_configs.column_comments.ColumnCommentsProcessor"
    ],
    "dbt.adapters.databricks.relation_configs.column_comments.ColumnCommentsConfig": [
      "dbt.adapters.databricks.logging.logger",
      "dbt.adapters.databricks.relation_configs.base.DatabricksComponentConfig"
    ],
    "dbt.adapters.databricks.relation_configs.column_comments.ColumnCommentsProcessor": [
      "dbt.adapters.relation_configs.config_base.RelationResults",
      "dbt.adapters.databricks.relation_configs.base.DatabricksComponentProcessor",
      "dbt.adapters.contracts.relation.RelationConfig"
    ],
    "dbt.adapters.databricks.relation_configs.refresh.RefreshConfig": [
      "dbt.adapters.databricks.relation_configs.base.DatabricksComponentConfig"
    ],
    "dbt.adapters.databricks.relation_configs.refresh.RefreshProcessor": [
      "dbt.adapters.relation_configs.config_base.RelationResults",
      "dbt.adapters.databricks.relation_configs.base",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.databricks.relation_configs.base.DatabricksComponentProcessor",
      "dbt.adapters.contracts.relation.RelationConfig"
    ],
    "dbt.adapters.databricks.relation_configs.constraints.ConstraintsConfig": [
      "dbt.adapters.databricks.constraints.TypedConstraint",
      "dbt.adapters.databricks.relation_configs.base.DatabricksComponentConfig",
      "dbt.adapters.databricks.constraints.CheckConstraint"
    ],
    "dbt.adapters.databricks.relation_configs.constraints.ConstraintsProcessor": [
      "dbt.adapters.databricks.constraints.TypedConstraint",
      "dbt.adapters.databricks.constraints.CheckConstraint",
      "dbt.adapters.databricks.constraints.ConstraintType",
      "dbt.adapters.databricks.constraints.PrimaryKeyConstraint",
      "dbt.adapters.relation_configs.config_base.RelationResults",
      "dbt.adapters.databricks.constraints.parse_constraints",
      "dbt.adapters.databricks.relation_configs.base.DatabricksComponentProcessor",
      "dbt.adapters.contracts.relation.RelationConfig",
      "dbt.adapters.databricks.constraints.ForeignKeyConstraint"
    ],
    "dbt.adapters.databricks.relation_configs.base.DatabricksComponentProcessor": [
      "dbt.adapters.relation_configs.config_base.RelationResults",
      "dbt.adapters.contracts.relation.RelationConfig"
    ],
    "dbt.adapters.databricks.relation_configs.base.DatabricksRelationConfigBase": [
      "dbt.adapters.relation_configs.config_base.RelationResults",
      "dbt.adapters.contracts.relation.RelationConfig"
    ],
    "dbt.adapters.databricks.relation_configs.incremental.IncrementalTableConfig": [
      "dbt.adapters.databricks.relation_configs.tags.TagsProcessor",
      "dbt.adapters.databricks.relation_configs.comment.CommentProcessor",
      "dbt.adapters.databricks.relation_configs.tblproperties.TblPropertiesProcessor",
      "dbt.adapters.databricks.relation_configs.constraints.ConstraintsProcessor",
      "dbt.adapters.databricks.relation_configs.liquid_clustering.LiquidClusteringProcessor",
      "dbt.adapters.databricks.relation_configs.column_tags.ColumnTagsProcessor",
      "dbt.adapters.databricks.relation_configs.column_mask.ColumnMaskProcessor",
      "dbt.adapters.databricks.relation_configs.base.DatabricksRelationConfigBase",
      "dbt.adapters.databricks.relation_configs.column_comments.ColumnCommentsProcessor"
    ],
    "dbt.adapters.databricks.events.other_events.QueryError": [
      "dbt.adapters.databricks.events.base.SQLErrorEvent"
    ],
    "dbt.adapters.databricks.events.credential_events.CredentialLoadError": [
      "dbt.adapters.databricks.events.base.ErrorEvent"
    ],
    "dbt.adapters.databricks.events.credential_events.CredentialSaveError": [
      "dbt.adapters.databricks.events.base.ErrorEvent"
    ],
    "dbt.adapters.databricks.events.connection_events.ConnectionCreateError": [
      "dbt.adapters.databricks.events.base.SQLErrorEvent",
      "dbt.adapters.databricks.events.connection_events.ConnectionEvent"
    ],
    "dbt.adapters.databricks.events.connection_events.ConnectionReset": [
      "dbt.adapters.databricks.events.connection_events.ConnectionWrapperEvent"
    ],
    "dbt.adapters.databricks.events.connection_events.ConnectionReuse": [
      "dbt.adapters.databricks.events.connection_events.ConnectionWrapperEvent"
    ],
    "dbt.adapters.databricks.events.connection_events.ConnectionCreate": [
      "dbt.adapters.databricks.events.connection_events.ConnectionWrapperEvent"
    ],
    "dbt.adapters.databricks.events.connection_events.ConnectionIdleClose": [
      "dbt.adapters.databricks.events.connection_events.ConnectionWrapperEvent"
    ],
    "dbt.adapters.databricks.events.connection_events.ConnectionCreated": [
      "dbt.adapters.databricks.events.connection_events.ConnectionWrapperEvent"
    ],
    "dbt.adapters.databricks.events.pipeline_events.PipelineRefresh": [
      "dbt.adapters.databricks.events.pipeline_events.PipelineEvent"
    ],
    "dbt.adapters.databricks.events.pipeline_events.PipelineRefreshError": [
      "dbt.adapters.databricks.events.pipeline_events.PipelineEvent"
    ],
    "dbt.adapters.bigquery.catalogs._relation.BigQueryCatalogRelation": [
      "dbt.adapters.bigquery.constants",
      "dbt.adapters.catalogs.CatalogRelation"
    ],
    "dbt.adapters.bigquery.catalogs._biglake_metastore.BigLakeCatalogIntegration": [
      "dbt.adapters.bigquery.constants",
      "dbt.adapters.catalogs.CatalogIntegration",
      "dbt.adapters.bigquery.catalogs._relation.BigQueryCatalogRelation",
      "dbt.adapters.contracts.relation.RelationConfig"
    ],
    "dbt.adapters.bigquery.catalogs._info_schema.BigQueryInfoSchemaCatalogIntegration": [
      "dbt.adapters.bigquery.constants",
      "dbt.adapters.catalogs.CatalogIntegration",
      "dbt.adapters.bigquery.catalogs._relation.BigQueryCatalogRelation",
      "dbt.adapters.contracts.relation.RelationConfig"
    ],
    "dbt.adapters.bigquery.relation_configs._materialized_view.BigQueryMaterializedViewConfig": [
      "dbt.adapters.contracts.relation.ComponentName",
      "dbt.adapters.bigquery.relation_configs._options.BigQueryOptionsConfig",
      "dbt.adapters.bigquery.relation_configs._base.BigQueryBaseRelationConfig",
      "dbt.adapters.bigquery.relation_configs._cluster.BigQueryClusterConfig",
      "dbt.adapters.bigquery.relation_configs._partition.PartitionConfig",
      "dbt.adapters.contracts.relation.RelationConfig"
    ],
    "dbt.adapters.bigquery.relation_configs._materialized_view.BigQueryMaterializedViewConfigChangeset": [
      "dbt.adapters.bigquery.relation_configs._options.BigQueryOptionsConfigChange",
      "dbt.adapters.bigquery.relation_configs._cluster.BigQueryClusterConfigChange",
      "dbt.adapters.bigquery.relation_configs._partition.BigQueryPartitionConfigChange"
    ],
    "dbt.adapters.bigquery.relation_configs._base.BigQueryBaseRelationConfig": [
      "dbt.adapters.contracts.relation.ComponentName",
      "dbt.adapters.base.relation.Policy",
      "dbt.adapters.bigquery.relation_configs._policies.BigQueryIncludePolicy",
      "dbt.adapters.contracts.relation.RelationConfig",
      "dbt.adapters.relation_configs.RelationConfigBase",
      "dbt.adapters.bigquery.relation_configs._policies.BigQueryQuotePolicy"
    ],
    "dbt.adapters.bigquery.relation_configs._options.BigQueryOptionsConfig": [
      "dbt.adapters.bigquery.utility.float_setting",
      "dbt.adapters.bigquery.relation_configs._base.BigQueryBaseRelationConfig",
      "dbt.adapters.bigquery.utility.bool_setting",
      "dbt.adapters.contracts.relation.RelationConfig",
      "dbt.adapters.bigquery.utility.sql_escape"
    ],
    "dbt.adapters.bigquery.relation_configs._options.BigQueryOptionsConfigChange": [
      "dbt.adapters.relation_configs.RelationConfigChange"
    ],
    "dbt.adapters.bigquery.relation_configs._partition.PartitionConfig": [
      "dbt_common.exceptions.base",
      "dbt_common.dataclass_schema.dbtClassMixin",
      "dbt_common.exceptions.base.DbtValidationError",
      "dbt_common.exceptions.CompilationError",
      "dbt_common.dataclass_schema.ValidationError",
      "dbt.adapters.contracts.relation.RelationConfig",
      "dbt_common.exceptions"
    ],
    "dbt.adapters.bigquery.relation_configs._partition.BigQueryPartitionConfigChange": [
      "dbt.adapters.relation_configs.RelationConfigChange"
    ],
    "dbt.adapters.bigquery.relation_configs._cluster.BigQueryClusterConfig": [
      "dbt.adapters.bigquery.relation_configs._base.BigQueryBaseRelationConfig",
      "dbt.adapters.contracts.relation.RelationConfig"
    ],
    "dbt.adapters.bigquery.relation_configs._cluster.BigQueryClusterConfigChange": [
      "dbt.adapters.relation_configs.RelationConfigChange"
    ],
    "dbt.adapters.bigquery.relation_configs._policies.BigQueryIncludePolicy": [
      "dbt.adapters.base.relation.Policy"
    ],
    "dbt.adapters.bigquery.relation_configs._policies.BigQueryQuotePolicy": [
      "dbt.adapters.base.relation.Policy"
    ],
    "dbt.adapters.snowflake.record.handle.SnowflakeRecordReplayHandle": [
      "dbt.adapters.snowflake.record.cursor.cursor.SnowflakeRecordReplayCursor",
      "dbt.adapters.record.RecordReplayHandle"
    ],
    "dbt.adapters.snowflake.catalogs._info_schema.InfoSchemaCatalogRelation": [
      "dbt.adapters.snowflake.constants"
    ],
    "dbt.adapters.snowflake.catalogs._info_schema.InfoSchemaCatalogIntegration": [
      "dbt.adapters.snowflake.parse_model",
      "dbt.adapters.snowflake.constants",
      "dbt.adapters.contracts.relation.RelationConfig",
      "dbt.adapters.catalogs.CatalogIntegration",
      "dbt.adapters.catalogs.CatalogIntegrationConfig"
    ],
    "dbt.adapters.snowflake.catalogs._built_in.BuiltInCatalogRelation": [
      "dbt.adapters.snowflake.constants"
    ],
    "dbt.adapters.snowflake.catalogs._built_in.BuiltInCatalogIntegration": [
      "dbt.adapters.snowflake.constants.SnowflakeIcebergTableRelationParameters",
      "dbt.adapters.snowflake.parse_model",
      "dbt.adapters.snowflake.constants",
      "dbt.adapters.contracts.relation.RelationConfig",
      "dbt.adapters.catalogs.CatalogIntegration",
      "dbt.adapters.catalogs.CatalogIntegrationConfig"
    ],
    "dbt.adapters.snowflake.relation_configs.dynamic_table.RefreshMode": [
      "dbt_common.dataclass_schema.StrEnum"
    ],
    "dbt.adapters.snowflake.relation_configs.dynamic_table.Initialize": [
      "dbt_common.dataclass_schema.StrEnum"
    ],
    "dbt.adapters.snowflake.relation_configs.dynamic_table.SnowflakeDynamicTableConfig": [
      "dbt.adapters.contracts.relation.ComponentName",
      "dbt.adapters.contracts.relation.RelationConfig",
      "dbt.adapters.snowflake.relation_configs.base.SnowflakeRelationConfigBase",
      "dbt.adapters.relation_configs.RelationResults"
    ],
    "dbt.adapters.snowflake.relation_configs.dynamic_table.SnowflakeDynamicTableTargetLagConfigChange": [
      "dbt.adapters.relation_configs.RelationConfigChange"
    ],
    "dbt.adapters.snowflake.relation_configs.dynamic_table.SnowflakeDynamicTableWarehouseConfigChange": [
      "dbt.adapters.relation_configs.RelationConfigChange"
    ],
    "dbt.adapters.snowflake.relation_configs.dynamic_table.SnowflakeDynamicTableRefreshModeConfigChange": [
      "dbt.adapters.relation_configs.RelationConfigChange"
    ],
    "dbt.adapters.snowflake.relation_configs.policies.SnowflakeRelationType": [
      "dbt_common.dataclass_schema.StrEnum"
    ],
    "dbt.adapters.snowflake.relation_configs.policies.SnowflakeIncludePolicy": [
      "dbt.adapters.base.relation.Policy"
    ],
    "dbt.adapters.snowflake.relation_configs.policies.SnowflakeQuotePolicy": [
      "dbt.adapters.base.relation.Policy"
    ],
    "dbt.adapters.snowflake.relation_configs.base.SnowflakeRelationConfigBase": [
      "dbt.adapters.contracts.relation.ComponentName",
      "dbt.adapters.contracts.relation.RelationConfig",
      "dbt.adapters.base.relation.Policy",
      "dbt.adapters.snowflake.relation_configs.policies.SnowflakeQuotePolicy",
      "dbt.adapters.snowflake.relation_configs.policies.SnowflakeIncludePolicy",
      "dbt.adapters.relation_configs.RelationResults",
      "dbt.adapters.relation_configs.RelationConfigBase"
    ],
    "dbt.adapters.snowflake.record.cursor.sqlstate.CursorGetSqlStateRecord": [
      "dbt_common.record.Recorder",
      "dbt_common.record.Record"
    ],
    "dbt.adapters.snowflake.record.cursor.sfqid.CursorGetSfqidRecord": [
      "dbt_common.record.Recorder",
      "dbt_common.record.Record"
    ],
    "dbt.adapters.snowflake.record.cursor.cursor.SnowflakeRecordReplayCursor": [
      "dbt.adapters.record.RecordReplayCursor",
      "dbt.adapters.snowflake.record.cursor.sfqid.CursorGetSfqidRecord",
      "dbt_common.record.record_function",
      "dbt.adapters.snowflake.record.cursor.sqlstate.CursorGetSqlStateRecord"
    ],
    "dbt.adapters.redshift.relation_configs.materialized_view.RedshiftMaterializedViewConfig": [
      "dbt.adapters.contracts.relation.ComponentName",
      "dbt.adapters.redshift.relation_configs.dist.RedshiftDistStyle",
      "dbt.adapters.contracts.relation.RelationConfig",
      "dbt.adapters.relation_configs.RelationConfigValidationRule",
      "dbt.adapters.redshift.relation_configs.dist.RedshiftDistConfig",
      "dbt.adapters.redshift.relation_configs.policies.MAX_CHARACTERS_IN_IDENTIFIER",
      "dbt.adapters.relation_configs.RelationConfigValidationMixin",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.redshift.utility.evaluate_bool",
      "dbt.adapters.redshift.relation_configs.sort.RedshiftSortConfig",
      "dbt.adapters.relation_configs.RelationResults",
      "dbt.adapters.redshift.relation_configs.base.RedshiftRelationConfigBase"
    ],
    "dbt.adapters.redshift.relation_configs.materialized_view.RedshiftAutoRefreshConfigChange": [
      "dbt.adapters.relation_configs.RelationConfigChange"
    ],
    "dbt.adapters.redshift.relation_configs.materialized_view.RedshiftMaterializedViewConfigChangeset": [
      "dbt.adapters.redshift.relation_configs.dist.RedshiftDistConfigChange",
      "dbt.adapters.redshift.relation_configs.sort.RedshiftSortConfigChange"
    ],
    "dbt.adapters.redshift.relation_configs.sort.RedshiftSortStyle": [
      "dbt_common.dataclass_schema.StrEnum"
    ],
    "dbt.adapters.redshift.relation_configs.sort.RedshiftSortConfig": [
      "dbt.adapters.relation_configs.RelationConfigValidationRule",
      "dbt.adapters.relation_configs.RelationConfigValidationMixin",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.contracts.relation.RelationConfig",
      "dbt.adapters.redshift.relation_configs.base.RedshiftRelationConfigBase"
    ],
    "dbt.adapters.redshift.relation_configs.sort.RedshiftSortConfigChange": [
      "dbt.adapters.relation_configs.RelationConfigValidationRule",
      "dbt.adapters.relation_configs.RelationConfigChange",
      "dbt.adapters.relation_configs.RelationConfigValidationMixin",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.relation_configs.RelationConfigChangeAction"
    ],
    "dbt.adapters.redshift.relation_configs.policies.RedshiftIncludePolicy": [
      "dbt.adapters.base.relation.Policy"
    ],
    "dbt.adapters.redshift.relation_configs.policies.RedshiftQuotePolicy": [
      "dbt.adapters.base.relation.Policy"
    ],
    "dbt.adapters.redshift.relation_configs.dist.RedshiftDistStyle": [
      "dbt_common.dataclass_schema.StrEnum"
    ],
    "dbt.adapters.redshift.relation_configs.dist.RedshiftDistConfig": [
      "dbt.adapters.relation_configs.RelationConfigValidationRule",
      "dbt.adapters.relation_configs.RelationConfigValidationMixin",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.contracts.relation.RelationConfig",
      "dbt.adapters.redshift.relation_configs.base.RedshiftRelationConfigBase"
    ],
    "dbt.adapters.redshift.relation_configs.dist.RedshiftDistConfigChange": [
      "dbt.adapters.relation_configs.RelationConfigValidationRule",
      "dbt.adapters.relation_configs.RelationConfigChange",
      "dbt.adapters.relation_configs.RelationConfigValidationMixin",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.relation_configs.RelationConfigChangeAction"
    ],
    "dbt.adapters.redshift.relation_configs.base.RedshiftRelationConfigBase": [
      "dbt.adapters.contracts.relation.ComponentName",
      "dbt.adapters.contracts.relation.RelationConfig",
      "dbt.adapters.base.relation.Policy",
      "dbt.adapters.redshift.relation_configs.policies.RedshiftQuotePolicy",
      "dbt.adapters.redshift.relation_configs.policies.RedshiftIncludePolicy",
      "dbt.adapters.relation_configs.RelationResults",
      "dbt.adapters.relation_configs.RelationConfigBase"
    ],
    "dbt.adapters.postgres.record.handle.PostgresRecordReplayHandle": [
      "dbt.adapters.postgres.record.cursor.cursor.PostgresRecordReplayCursor",
      "dbt.adapters.record.RecordReplayHandle"
    ],
    "dbt.adapters.postgres.relation_configs.materialized_view.PostgresMaterializedViewConfig": [
      "dbt.adapters.contracts.relation.RelationConfig",
      "dbt.adapters.relation_configs.RelationConfigValidationRule",
      "dbt.adapters.postgres.relation_configs.constants.MAX_CHARACTERS_IN_IDENTIFIER",
      "dbt.adapters.relation_configs.RelationConfigValidationMixin",
      "dbt.adapters.postgres.relation_configs.index.PostgresIndexConfig",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.relation_configs.RelationResults",
      "dbt.adapters.relation_configs.RelationConfigBase"
    ],
    "dbt.adapters.postgres.relation_configs.materialized_view.PostgresMaterializedViewConfigChangeCollection": [
      "dbt.adapters.postgres.relation_configs.index.PostgresIndexConfigChange"
    ],
    "dbt.adapters.postgres.relation_configs.index.PostgresIndexMethod": [
      "dbt_common.dataclass_schema.StrEnum"
    ],
    "dbt.adapters.postgres.relation_configs.index.PostgresIndexConfig": [
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.relation_configs.RelationConfigBase",
      "dbt.adapters.relation_configs.RelationConfigValidationMixin",
      "dbt.adapters.relation_configs.RelationConfigValidationRule"
    ],
    "dbt.adapters.postgres.relation_configs.index.PostgresIndexConfigChange": [
      "dbt.adapters.relation_configs.RelationConfigValidationRule",
      "dbt.adapters.relation_configs.RelationConfigChange",
      "dbt.adapters.relation_configs.RelationConfigValidationMixin",
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.relation_configs.RelationConfigChangeAction"
    ],
    "dbt.adapters.postgres.record.cursor.status.CursorGetStatusMessageRecord": [
      "dbt_common.record.Recorder",
      "dbt_common.record.Record"
    ],
    "dbt.adapters.postgres.record.cursor.cursor.PostgresRecordReplayCursor": [
      "dbt.adapters.record.RecordReplayCursor",
      "dbt.adapters.postgres.record.cursor.status.CursorGetStatusMessageRecord",
      "dbt_common.record.record_function"
    ],
    "dbt.adapters.duckdb.plugins.__init__.PluginConfig": [
      "dbt_common.dataclass_schema.dbtClassMixin"
    ],
    "dbt.adapters.duckdb.plugins.excel.Plugin": [
      "dbt.adapters.duckdb.plugins.excel.BasePlugin"
    ],
    "dbt.adapters.duckdb.plugins.motherduck.Plugin": [
      "dbt.adapters.duckdb.plugins.motherduck.BasePlugin",
      "dbt.adapters.duckdb.credentials.DuckDBCredentials",
      "dbt.adapters.duckdb.__version__.version",
      "dbt.version.__version__"
    ],
    "dbt.adapters.duckdb.plugins.glue.UnsupportedFormatType": [
      "dbt.adapters.duckdb.plugins.glue.Exception"
    ],
    "dbt.adapters.duckdb.plugins.glue.UnsupportedType": [
      "dbt.adapters.duckdb.plugins.glue.Exception"
    ],
    "dbt.adapters.duckdb.plugins.glue.UndetectedType": [
      "dbt.adapters.duckdb.plugins.glue.Exception"
    ],
    "dbt.adapters.duckdb.plugins.glue.Plugin": [
      "dbt.adapters.duckdb.plugins.glue.BasePlugin"
    ],
    "dbt.adapters.duckdb.plugins.sqlalchemy.Plugin": [
      "dbt.adapters.duckdb.plugins.sqlalchemy.BasePlugin"
    ],
    "dbt.adapters.duckdb.plugins.iceberg.Plugin": [
      "dbt.adapters.duckdb.plugins.iceberg.BasePlugin"
    ],
    "dbt.adapters.duckdb.plugins.delta.Plugin": [
      "dbt.adapters.duckdb.plugins.delta.BasePlugin"
    ],
    "dbt.adapters.duckdb.plugins.postgres.Plugin": [
      "dbt.adapters.events.logging.AdapterLogger",
      "dbt.adapters.duckdb.plugins.postgres.BasePlugin"
    ],
    "dbt.adapters.duckdb.plugins.gsheet.GSheetConfig": [
      "dbt.adapters.duckdb.plugins.gsheet.PluginConfig"
    ],
    "dbt.adapters.duckdb.plugins.gsheet.Plugin": [
      "dbt.adapters.duckdb.plugins.gsheet.BasePlugin"
    ],
    "dbt.adapters.duckdb.environments.local.DuckDBCursorWrapper": [
      "dbt_common.exceptions.DbtRuntimeError"
    ],
    "dbt.adapters.duckdb.environments.local.LocalEnvironment": [
      "dbt.adapters.duckdb.environments.local.Environment",
      "dbt.adapters.contracts.connection.AdapterResponse",
      "dbt.adapters.contracts.connection.Connection"
    ],
    "dbt.adapters.duckdb.environments.__init__.Environment": [
      "dbt_common.exceptions.DbtRuntimeError",
      "dbt.adapters.contracts.connection.AdapterResponse",
      "dbt.adapters.contracts.connection.Connection",
      "module.dbtObj"
    ],
    "dbt.adapters.duckdb.environments.motherduck.MotherDuckEnvironment": [
      "dbt.adapters.contracts.connection.AdapterResponse"
    ],
    "dbt.adapters.duckdb.environments.buenavista.BVEnvironment": [
      "dbt.adapters.contracts.connection.AdapterResponse",
      "dbt.adapters.contracts.connection.Connection",
      "dbt.adapters.duckdb.environments.buenavista.Environment"
    ],
    "dbt.task.docs.generate.Catalog": [
      "dbt.artifacts.schemas.catalog.CatalogKey",
      "dbt.artifacts.schemas.catalog.CatalogTable",
      "dbt.exceptions.AmbiguousCatalogMatchError",
      "dbt.artifacts.schemas.catalog.PrimitiveDict",
      "dbt_common.exceptions.CompilationError",
      "dbt.graph.graph.UniqueId",
      "dbt.artifacts.schemas.catalog.ColumnMetadata",
      "dbt.contracts.graph.manifest.Manifest",
      "dbt_common.exceptions"
    ],
    "dbt.task.docs.generate.GenerateTask": [
      "dbt.artifacts.schemas.catalog.CatalogTable",
      "dbt.artifacts.schemas.catalog.CatalogArtifact",
      "dbt.artifacts.schemas.results.NodeStatus",
      "dbt.artifacts.schemas.catalog.PrimitiveDict",
      "dbt.utils.artifact_upload.add_artifact_produced",
      "dbt.constants.MANIFEST_FILE_NAME",
      "dbt.adapters.factory.get_adapter",
      "dbt.adapters.events.types.WriteCatalogFailure",
      "dbt.adapters.events.types.CannotGenerateDocs",
      "dbt.artifacts.schemas.catalog.CatalogResults",
      "dbt.contracts.graph.nodes.ResultNode",
      "dbt.node_types.EXECUTABLE_NODE_TYPES",
      "dbt.graph.ResourceTypeSelector",
      "dbt.parser.manifest.write_manifest",
      "dbt_common.exceptions.DbtInternalError",
      "dbt.adapters.events.types.CatalogWritten",
      "dbt.utils",
      "dbt.adapters.events.types.BuildingCatalog",
      "dbt.utils._coerce_decimal",
      "dbt.node_types.NodeType",
      "dbt.graph.graph.UniqueId",
      "dbt_common.events.functions.fire_event",
      "dbt.task.compile.CompileTask",
      "dbt.events.types.ArtifactWritten",
      "dbt_common.clients.system.load_file_contents",
      "dbt.contracts.graph.manifest.Manifest",
      "dbt.constants.CATALOG_FILENAME",
      "dbt.task.docs.DOCS_INDEX_FILE_PATH"
    ],
    "dbt.task.docs.serve.ServeTask": [
      "dbt.task.base.ConfiguredTask",
      "dbt.task.docs.DOCS_INDEX_FILE_PATH"
    ]
  },
  "strongly_connected_components": [
    [
      "dbt.parser.schema_yaml_readers.SavedQueryParser",
      "dbt.parser.schemas.SchemaParser",
      "dbt.parser.schema_yaml_readers.GroupParser",
      "dbt.parser.schema_yaml_readers.SemanticModelParser",
      "dbt.parser.schema_yaml_readers.MetricParser",
      "dbt.parser.unit_tests.UnitTestParser",
      "dbt.parser.schema_yaml_readers.ExposureParser"
    ]
  ]
}