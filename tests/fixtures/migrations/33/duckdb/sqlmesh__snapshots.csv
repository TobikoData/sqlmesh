name,identifier,version,snapshot,kind_name
raw.demographics,1140349482,1271445562,"{""name"": ""raw.demographics"", ""fingerprint"": {""data_hash"": ""2505907372"", ""metadata_hash"": ""1382137008"", ""parent_data_hash"": ""0"", ""parent_metadata_hash"": ""0""}, ""node"": {""name"": ""raw.demographics"", ""project"": """", ""description"": ""Table containing demographics information"", ""cron"": ""@daily"", ""tags"": [], ""dialect"": ""duckdb"", ""kind"": {""name"": ""EXTERNAL""}, ""partitioned_by"": [], ""clustered_by"": [], ""columns"": {""customer_id"": ""INT"", ""zip"": ""TEXT""}, ""audits"": [], ""grains"": [], ""references"": [], ""hash_raw_query"": false, ""allow_partials"": false, ""signals"": [], ""jinja_macros"": {""packages"": {}, ""root_macros"": {}, ""global_objs"": {}, ""top_level_packages"": []}, ""mapping_schema"": {}, ""source_type"": ""external""}, ""parents"": [], ""audits"": [], ""created_ts"": 1701883459182, ""updated_ts"": 1701883459999, ""ttl"": ""in 1 week"", ""previous_versions"": [], ""indirect_versions"": {}, ""version"": ""1271445562"", ""change_category"": 1, ""unpaused_ts"": 1701820800000, ""migrated"": false, ""unrestorable"": false}",EXTERNAL
sushi.items,3912298820,4184930416,"{""name"": ""sushi.items"", ""fingerprint"": {""data_hash"": ""1981833488"", ""metadata_hash"": ""2181700583"", ""parent_data_hash"": ""0"", ""parent_metadata_hash"": ""0""}, ""node"": {""name"": ""sushi.items"", ""project"": """", ""start"": ""1 week ago"", ""cron"": ""@daily"", ""tags"": [], ""dialect"": """", ""kind"": {""name"": ""INCREMENTAL_BY_TIME_RANGE"", ""batch_size"": 30, ""forward_only"": false, ""disable_restatement"": false, ""time_column"": {""column"": ""event_date"", ""format"": ""%Y-%m-%d""}}, ""partitioned_by"": [], ""clustered_by"": [], ""depends_on"": [], ""columns"": {""id"": ""INT"", ""name"": ""TEXT"", ""price"": ""DOUBLE"", ""event_date"": ""DATE""}, ""audits"": [[""accepted_values"", {""column"": ""name"", ""is_in"": ""('Ahi', 'Aji', 'Amaebi', 'Anago', 'Aoyagi', 'Bincho', 'Katsuo', 'Ebi', 'Escolar', 'Hamachi', 'Hamachi Toro', 'Hirame', 'Hokigai', 'Hotate', 'Ika', 'Ikura', 'Iwashi', 'Kani', 'Kanpachi', 'Maguro', 'Saba', 'Sake', 'Sake Toro', 'Tai', 'Tako', 'Tamago', 'Tobiko', 'Toro', 'Tsubugai', 'Umi Masu', 'Unagi', 'Uni')""}], [""not_null"", {""columns"": ""(name, price)""}], [""assert_items_price_exceeds_threshold"", {""price"": ""0""}]], ""grains"": [], ""references"": [], ""hash_raw_query"": false, ""session_properties"": ""('string_prop' = 'some_value', 'int_prop' = 1, 'float_prop' = 1.0, 'bool_prop' = TRUE)"", ""allow_partials"": false, ""signals"": [], ""python_env"": {""execute"": {""payload"": ""def execute(context, start, end, execution_time, **kwargs):\n    dfs = []\n    for dt in iter_dates(start, end):\n        num_items = random.randint(10, len(ITEMS))\n        dfs.append(pd.DataFrame({'name': random.sample(ITEMS, num_items),\n            'price': np.random.uniform(3.0, 10.0, size=num_items).round(2),\n            'event_date': to_date(dt)}).reset_index().rename(columns={\n            'index': 'id'}))\n    return pd.concat(dfs)"", ""kind"": ""definition"", ""name"": ""execute"", ""path"": ""models/items.py""}, ""iter_dates"": {""payload"": ""def iter_dates(start, end):\n    for i in range((end - start).days + 1):\n        dt = start + timedelta(days=i)\n        set_seed(dt)\n        yield dt"", ""kind"": ""definition"", ""name"": ""iter_dates"", ""path"": ""helper.py""}, ""timedelta"": {""payload"": ""from datetime import timedelta"", ""kind"": ""import""}, ""set_seed"": {""payload"": ""def set_seed(dt):\n    ts = int(dt.timestamp())\n    random.seed(ts)\n    np.random.seed(ts)"", ""kind"": ""definition"", ""name"": ""set_seed"", ""path"": ""helper.py""}, ""random"": {""payload"": ""import random"", ""kind"": ""import""}, ""np"": {""payload"": ""import numpy as np"", ""kind"": ""import""}, ""ITEMS"": {""payload"": ""['Ahi', 'Aji', 'Amaebi', 'Anago', 'Aoyagi', 'Bincho', 'Katsuo', 'Ebi', 'Escolar', 'Hamachi', 'Hamachi Toro', 'Hirame', 'Hokigai', 'Hotate', 'Ika', 'Ikura', 'Iwashi', 'Kani', 'Kanpachi', 'Maguro', 'Saba', 'Sake', 'Sake Toro', 'Tai', 'Tako', 'Tamago', 'Tobiko', 'Toro', 'Tsubugai', 'Umi Masu', 'Unagi', 'Uni']"", ""kind"": ""value""}, ""pd"": {""payload"": ""import pandas as pd"", ""kind"": ""import""}, ""to_date"": {""payload"": ""from sqlmesh.utils.date import to_date"", ""kind"": ""import""}}, ""jinja_macros"": {""packages"": {}, ""root_macros"": {}, ""global_objs"": {}, ""top_level_packages"": []}, ""mapping_schema"": {}, ""entrypoint"": ""execute"", ""source_type"": ""python""}, ""parents"": [], ""audits"": [{""name"": ""assert_items_price_exceeds_threshold"", ""dialect"": ""duckdb"", ""skip"": false, ""blocking"": true, ""standalone"": false, ""query"": ""SELECT *\nFROM @this_model\nWHERE price <= @price;"", ""defaults"": {}, ""expressions"": [], ""jinja_macros"": {""packages"": {}, ""root_macros"": {}, ""global_objs"": {}, ""top_level_packages"": []}}], ""created_ts"": 1701883459184, ""updated_ts"": 1701883460002, ""ttl"": ""in 1 week"", ""previous_versions"": [], ""indirect_versions"": {}, ""version"": ""4184930416"", ""change_category"": 1, ""unpaused_ts"": 1701820800000, ""migrated"": false, ""unrestorable"": false}",INCREMENTAL_BY_TIME_RANGE
sushi.orders,3181421729,1209065160,"{""name"": ""sushi.orders"", ""fingerprint"": {""data_hash"": ""161674549"", ""metadata_hash"": ""2952531836"", ""parent_data_hash"": ""0"", ""parent_metadata_hash"": ""0""}, ""node"": {""name"": ""sushi.orders"", ""project"": """", ""description"": ""Table of sushi orders."", ""start"": ""1 week ago"", ""cron"": ""@daily"", ""tags"": [], ""dialect"": """", ""kind"": {""name"": ""INCREMENTAL_BY_TIME_RANGE"", ""batch_size"": 30, ""forward_only"": false, ""disable_restatement"": false, ""time_column"": {""column"": ""event_date"", ""format"": ""%Y-%m-%d""}}, ""partitioned_by"": [], ""clustered_by"": [], ""depends_on"": [], ""columns"": {""id"": ""INT"", ""customer_id"": ""INT"", ""waiter_id"": ""INT"", ""start_ts"": ""INT"", ""end_ts"": ""INT"", ""event_date"": ""DATE""}, ""audits"": [], ""grains"": [""id AS order_id""], ""references"": [""customer_id"", ""waiter_id""], ""hash_raw_query"": false, ""allow_partials"": false, ""signals"": [], ""python_env"": {""execute"": {""payload"": ""def execute(context, start, end, execution_time, **kwargs):\n    dfs = []\n    for dt in iter_dates(start, end):\n        num_orders = random.randint(10, 30)\n        start_ts = [int((dt + timedelta(seconds=random.randint(0, 80000))).\n            timestamp()) for _ in range(num_orders)]\n        end_ts = [int(s + random.randint(0, 60 * 60)) for s in start_ts]\n        dfs.append(pd.DataFrame({'customer_id': random.choices(CUSTOMERS, k\n            =num_orders), 'waiter_id': random.choices(WAITERS, k=num_orders\n            ), 'start_ts': start_ts, 'end_ts': end_ts, 'event_date':\n            to_date(dt)}).reset_index().rename(columns={'index': 'id'}))\n    return pd.concat(dfs)"", ""kind"": ""definition"", ""name"": ""execute"", ""path"": ""models/orders.py""}, ""iter_dates"": {""payload"": ""def iter_dates(start, end):\n    for i in range((end - start).days + 1):\n        dt = start + timedelta(days=i)\n        set_seed(dt)\n        yield dt"", ""kind"": ""definition"", ""name"": ""iter_dates"", ""path"": ""helper.py""}, ""timedelta"": {""payload"": ""from datetime import timedelta"", ""kind"": ""import""}, ""set_seed"": {""payload"": ""def set_seed(dt):\n    ts = int(dt.timestamp())\n    random.seed(ts)\n    np.random.seed(ts)"", ""kind"": ""definition"", ""name"": ""set_seed"", ""path"": ""helper.py""}, ""random"": {""payload"": ""import random"", ""kind"": ""import""}, ""np"": {""payload"": ""import numpy as np"", ""kind"": ""import""}, ""pd"": {""payload"": ""import pandas as pd"", ""kind"": ""import""}, ""CUSTOMERS"": {""payload"": ""[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]"", ""kind"": ""value""}, ""WAITERS"": {""payload"": ""[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]"", ""kind"": ""value""}, ""to_date"": {""payload"": ""from sqlmesh.utils.date import to_date"", ""kind"": ""import""}}, ""jinja_macros"": {""packages"": {}, ""root_macros"": {}, ""global_objs"": {}, ""top_level_packages"": []}, ""mapping_schema"": {}, ""entrypoint"": ""execute"", ""source_type"": ""python""}, ""parents"": [], ""audits"": [], ""created_ts"": 1701883459183, ""updated_ts"": 1701883460003, ""ttl"": ""in 1 week"", ""previous_versions"": [], ""indirect_versions"": {}, ""version"": ""1209065160"", ""change_category"": 1, ""unpaused_ts"": 1701820800000, ""migrated"": false, ""unrestorable"": false}",INCREMENTAL_BY_TIME_RANGE
sushi.raw_marketing,4205311084,580496419,"{""name"": ""sushi.raw_marketing"", ""fingerprint"": {""data_hash"": ""1234488415"", ""metadata_hash"": ""1096964904"", ""parent_data_hash"": ""0"", ""parent_metadata_hash"": ""0""}, ""node"": {""name"": ""sushi.raw_marketing"", ""project"": """", ""description"": ""Table of marketing status."", ""start"": ""1 week ago"", ""cron"": ""@daily"", ""tags"": [], ""dialect"": """", ""kind"": {""name"": ""FULL""}, ""partitioned_by"": [], ""clustered_by"": [], ""depends_on"": [], ""columns"": {""customer_id"": ""INT"", ""status"": ""TEXT"", ""updated_at"": ""TIMESTAMP""}, ""audits"": [], ""grains"": [""customer_id""], ""references"": [], ""hash_raw_query"": false, ""allow_partials"": false, ""signals"": [], ""python_env"": {""execute"": {""payload"": ""def execute(context, end, execution_time, **kwargs):\n    existing_table = context.table('sushi.raw_marketing')\n    df_existing = context.fetchdf(exp.select('customer_id', 'status',\n        'updated_at').from_(existing_table), quote_identifiers=True)\n    seed = int(end.strftime('%Y%m%d'))\n    np.random.seed(seed)\n    num_customers = random.randint(30, 100)\n    exec_time = execution_time.replace(tzinfo=None)\n    df_new = pd.DataFrame({'customer_id': random.sample(range(0, 100), k=\n        num_customers), 'status': np.random.choice(['active', 'inactive'],\n        size=num_customers, p=[0.8, 0.2]), 'updated_at': [exec_time] *\n        num_customers})\n    df = df_new.merge(df_existing, on='customer_id', how='left', suffixes=(\n        None, '_old'))\n    df['updated_at'] = pd.to_datetime(np.where(df['status_old'] != df[\n        'status'], execution_time, df['updated_at_old']), errors='coerce',\n        utc=True)\n    df = df.drop(columns=['status_old', 'updated_at_old'])\n    return df"", ""kind"": ""definition"", ""name"": ""execute"", ""path"": ""models/raw_marketing.py""}, ""exp"": {""payload"": ""import sqlglot.expressions as exp"", ""kind"": ""import""}, ""np"": {""payload"": ""import numpy as np"", ""kind"": ""import""}, ""random"": {""payload"": ""import random"", ""kind"": ""import""}, ""pd"": {""payload"": ""import pandas as pd"", ""kind"": ""import""}}, ""jinja_macros"": {""packages"": {}, ""root_macros"": {}, ""global_objs"": {}, ""top_level_packages"": []}, ""mapping_schema"": {}, ""entrypoint"": ""execute"", ""source_type"": ""python""}, ""parents"": [], ""audits"": [], ""created_ts"": 1701883459183, ""updated_ts"": 1701883460004, ""ttl"": ""in 1 week"", ""previous_versions"": [], ""indirect_versions"": {}, ""version"": ""580496419"", ""change_category"": 1, ""unpaused_ts"": 1701820800000, ""migrated"": false, ""unrestorable"": false}",FULL
sushi.waiter_names,2187544572,235351925,"{""name"": ""sushi.waiter_names"", ""fingerprint"": {""data_hash"": ""2267718226"", ""metadata_hash"": ""1165429974"", ""parent_data_hash"": ""0"", ""parent_metadata_hash"": ""0""}, ""node"": {""name"": ""sushi.waiter_names"", ""project"": """", ""owner"": ""jen"", ""cron"": ""@daily"", ""tags"": [], ""dialect"": ""duckdb"", ""kind"": {""name"": ""SEED"", ""path"": ""../seeds/waiter_names.csv"", ""batch_size"": 5}, ""partitioned_by"": [], ""clustered_by"": [], ""depends_on"": [], ""audits"": [], ""grains"": [""id""], ""references"": [], ""hash_raw_query"": false, ""allow_partials"": false, ""signals"": [], ""python_env"": {}, ""jinja_macros"": {""packages"": {}, ""root_macros"": {}, ""global_objs"": {""gateway"": """"}, ""top_level_packages"": []}, ""mapping_schema"": {}, ""pre_statements"": [], ""post_statements"": [], ""seed"": {""content"": """"}, ""column_hashes"": {""id"": ""3679804453"", ""name"": ""537745575""}, ""is_hydrated"": false, ""source_type"": ""seed""}, ""parents"": [], ""audits"": [], ""created_ts"": 1701883459180, ""updated_ts"": 1701883460006, ""ttl"": ""in 1 week"", ""previous_versions"": [], ""indirect_versions"": {}, ""version"": ""235351925"", ""change_category"": 1, ""unpaused_ts"": 1701820800000, ""migrated"": false, ""unrestorable"": false}",SEED
assert_item_price_above_zero,1065102714,2619866769,"{""name"": ""assert_item_price_above_zero"", ""fingerprint"": {""data_hash"": ""0"", ""metadata_hash"": ""1259873412"", ""parent_data_hash"": ""2928075993"", ""parent_metadata_hash"": ""2875052333""}, ""node"": {""name"": ""assert_item_price_above_zero"", ""project"": """", ""description"": ""Asserts that the price of an item is above zero."", ""cron"": ""@daily"", ""tags"": [], ""dialect"": ""duckdb"", ""skip"": false, ""blocking"": false, ""standalone"": true, ""query"": ""SELECT *\nFROM sushi.items\nWHERE price <= 0"", ""defaults"": {}, ""expressions"": [], ""jinja_macros"": {""packages"": {}, ""root_macros"": {}, ""global_objs"": {}, ""top_level_packages"": []}, ""hash_raw_query"": false, ""python_env"": {}, ""source_type"": ""audit""}, ""parents"": [{""name"": ""sushi.items"", ""identifier"": ""3912298820""}], ""audits"": [], ""created_ts"": 1701883459185, ""updated_ts"": 1701883460007, ""ttl"": ""in 1 week"", ""previous_versions"": [], ""indirect_versions"": {}, ""version"": ""2619866769"", ""change_category"": 1, ""unpaused_ts"": 1701820800000, ""migrated"": false, ""unrestorable"": false}",
sushi.marketing,3802474580,2156224001,"{""name"": ""sushi.marketing"", ""fingerprint"": {""data_hash"": ""2965482676"", ""metadata_hash"": ""699524351"", ""parent_data_hash"": ""541361774"", ""parent_metadata_hash"": ""999531829""}, ""node"": {""name"": ""sushi.marketing"", ""project"": """", ""owner"": ""jen"", ""cron"": ""@daily"", ""tags"": [], ""dialect"": ""duckdb"", ""kind"": {""name"": ""SCD_TYPE_2"", ""unique_key"": [""customer_id""], ""valid_from_name"": ""valid_from"", ""valid_to_name"": ""valid_to"", ""updated_at_name"": ""updated_at"", ""forward_only"": true, ""disable_restatement"": true}, ""partitioned_by"": [], ""clustered_by"": [], ""audits"": [], ""grains"": [""customer_id""], ""references"": [], ""hash_raw_query"": false, ""allow_partials"": false, ""signals"": [], ""python_env"": {}, ""jinja_macros"": {""packages"": {}, ""root_macros"": {}, ""global_objs"": {""gateway"": """"}, ""top_level_packages"": []}, ""mapping_schema"": {""sushi"": {""raw_marketing"": {""customer_id"": ""INT"", ""status"": ""TEXT"", ""updated_at"": ""TIMESTAMP""}}}, ""pre_statements"": [], ""post_statements"": [], ""query"": ""SELECT\n    customer_id::INT AS customer_id,\n    status::TEXT AS status,\n    updated_at::TIMESTAMP AS updated_at\nFROM\n    sushi.raw_marketing"", ""source_type"": ""sql""}, ""parents"": [{""name"": ""sushi.raw_marketing"", ""identifier"": ""4205311084""}], ""audits"": [], ""created_ts"": 1701883459157, ""updated_ts"": 1701883460008, ""ttl"": ""in 1 week"", ""previous_versions"": [], ""indirect_versions"": {}, ""version"": ""2156224001"", ""change_category"": 1, ""unpaused_ts"": 1701820800000, ""migrated"": false, ""unrestorable"": false}",SCD_TYPE_2
sushi.order_items,2963293006,1900977740,"{""name"": ""sushi.order_items"", ""fingerprint"": {""data_hash"": ""2465461762"", ""metadata_hash"": ""3625023341"", ""parent_data_hash"": ""727069761"", ""parent_metadata_hash"": ""1721242531""}, ""node"": {""name"": ""sushi.order_items"", ""project"": """", ""cron"": ""@daily"", ""tags"": [], ""dialect"": """", ""kind"": {""name"": ""INCREMENTAL_BY_TIME_RANGE"", ""batch_size"": 30, ""forward_only"": false, ""disable_restatement"": false, ""time_column"": {""column"": ""event_date"", ""format"": ""%Y-%m-%d""}}, ""partitioned_by"": [], ""clustered_by"": [], ""depends_on"": [""sushi.orders"", ""sushi.items""], ""columns"": {""id"": ""INT"", ""order_id"": ""INT"", ""item_id"": ""INT"", ""quantity"": ""INT"", ""event_date"": ""DATE""}, ""audits"": [[""not_null"", {""columns"": ""(id, order_id, item_id, quantity)""}], [""assert_order_items_quantity_exceeds_threshold"", {""quantity"": ""0""}]], ""grains"": [], ""references"": [], ""hash_raw_query"": false, ""allow_partials"": false, ""signals"": [], ""python_env"": {""execute"": {""payload"": ""def execute(context, start, end, execution_time, **kwargs):\n    orders_table = context.table('sushi.orders')\n    items_table = context.table(ITEMS)\n    for dt in iter_dates(start, end):\n        orders = context.fetchdf(exp.select('*').from_(orders_table).where(\n            f\""event_date = CAST('{to_ds(dt)}' AS DATE)\""), quote_identifiers\n            =True)\n        orders = orders.rename(columns={col: col.lower() for col in orders.\n            columns})\n        items = context.fetchdf(exp.select('*').from_(items_table).where(\n            f\""event_date = CAST('{to_ds(dt)}' AS DATE)\""), quote_identifiers\n            =True)\n        items = items.rename(columns={col: col.lower() for col in items.\n            columns})\n        dfs = []\n        for order_id in orders['id']:\n            n = random.randint(1, 5)\n            dfs.append(pd.DataFrame({'order_id': order_id, 'item_id': items\n                .sample(n=n)['id'], 'quantity': np.random.randint(1, 10, n),\n                'event_date': to_date(dt)}).reset_index().rename(columns={\n                'index': 'id'}))\n        yield pd.concat(dfs)"", ""kind"": ""definition"", ""name"": ""execute"", ""path"": ""models/order_items.py""}, ""ITEMS"": {""payload"": ""'sushi.items'"", ""kind"": ""value""}, ""iter_dates"": {""payload"": ""def iter_dates(start, end):\n    for i in range((end - start).days + 1):\n        dt = start + timedelta(days=i)\n        set_seed(dt)\n        yield dt"", ""kind"": ""definition"", ""name"": ""iter_dates"", ""path"": ""helper.py""}, ""timedelta"": {""payload"": ""from datetime import timedelta"", ""kind"": ""import""}, ""set_seed"": {""payload"": ""def set_seed(dt):\n    ts = int(dt.timestamp())\n    random.seed(ts)\n    np.random.seed(ts)"", ""kind"": ""definition"", ""name"": ""set_seed"", ""path"": ""helper.py""}, ""random"": {""payload"": ""import random"", ""kind"": ""import""}, ""np"": {""payload"": ""import numpy as np"", ""kind"": ""import""}, ""exp"": {""payload"": ""import sqlglot.expressions as exp"", ""kind"": ""import""}, ""to_ds"": {""payload"": ""from sqlmesh.utils.date import to_ds"", ""kind"": ""import""}, ""pd"": {""payload"": ""import pandas as pd"", ""kind"": ""import""}, ""to_date"": {""payload"": ""from sqlmesh.utils.date import to_date"", ""kind"": ""import""}}, ""jinja_macros"": {""packages"": {}, ""root_macros"": {}, ""global_objs"": {}, ""top_level_packages"": []}, ""mapping_schema"": {""sushi"": {""orders"": {""id"": ""INT"", ""customer_id"": ""INT"", ""waiter_id"": ""INT"", ""start_ts"": ""INT"", ""end_ts"": ""INT"", ""event_date"": ""DATE""}, ""items"": {""id"": ""INT"", ""name"": ""TEXT"", ""price"": ""DOUBLE"", ""event_date"": ""DATE""}}}, ""entrypoint"": ""execute"", ""source_type"": ""python""}, ""parents"": [{""name"": ""sushi.orders"", ""identifier"": ""3181421729""}, {""name"": ""sushi.items"", ""identifier"": ""3912298820""}], ""audits"": [{""name"": ""assert_order_items_quantity_exceeds_threshold"", ""dialect"": ""duckdb"", ""skip"": false, ""blocking"": true, ""standalone"": false, ""query"": ""SELECT *\nFROM @this_model\nWHERE quantity <= @quantity"", ""defaults"": {}, ""expressions"": [], ""jinja_macros"": {""packages"": {}, ""root_macros"": {}, ""global_objs"": {}, ""top_level_packages"": []}}], ""created_ts"": 1701883459182, ""updated_ts"": 1701883460009, ""ttl"": ""in 1 week"", ""previous_versions"": [], ""indirect_versions"": {}, ""version"": ""1900977740"", ""change_category"": 1, ""unpaused_ts"": 1701820800000, ""migrated"": false, ""unrestorable"": false}",INCREMENTAL_BY_TIME_RANGE
sushi.waiters,722693143,905810529,"{""name"": ""sushi.waiters"", ""fingerprint"": {""data_hash"": ""1301065882"", ""metadata_hash"": ""546896225"", ""parent_data_hash"": ""3150493374"", ""parent_metadata_hash"": ""2482667216""}, ""node"": {""name"": ""sushi.waiters"", ""project"": """", ""owner"": ""jen"", ""cron"": ""@daily"", ""tags"": [], ""dialect"": ""duckdb"", ""kind"": {""name"": ""EMBEDDED""}, ""partitioned_by"": [], ""clustered_by"": [], ""audits"": [], ""grains"": [], ""references"": [], ""hash_raw_query"": false, ""allow_partials"": false, ""signals"": [], ""python_env"": {""entrypoint"": {""payload"": ""def entrypoint(evaluator):\n    if evaluator.runtime_stage != 'loading':\n        snapshot = evaluator.get_snapshot('sushi.waiters')\n        assert snapshot is not None\n        parent_snapshots = snapshot.parents\n        assert len(parent_snapshots) == 1\n    excluded = {'id', 'customer_id', 'start_ts', 'end_ts'}\n    projections = []\n    for column, dtype in evaluator.columns_to_types('sushi.orders').items():\n        if column not in excluded:\n            projections.append(f'{column}::{dtype}')\n    return exp.select(*projections).from_('sushi.orders AS o').where(\n        incremental_by_ds(evaluator, exp.to_column('event_date'))).distinct()"", ""kind"": ""definition"", ""name"": ""entrypoint"", ""path"": ""models/waiters.py""}, ""exp"": {""payload"": ""import sqlglot.expressions as exp"", ""kind"": ""import""}, ""incremental_by_ds"": {""payload"": ""def incremental_by_ds(evaluator, column):\n    return between(evaluator, column, evaluator.locals['start_date'],\n        evaluator.locals['end_date'])"", ""kind"": ""definition"", ""name"": ""incremental_by_ds"", ""path"": ""macros/macros.py""}, ""between"": {""payload"": ""def between(evaluator, value, start, end):\n    return value.between(start, end)"", ""kind"": ""definition"", ""name"": ""between"", ""path"": ""macros/utils.py""}}, ""jinja_macros"": {""packages"": {}, ""root_macros"": {}, ""global_objs"": {}, ""top_level_packages"": []}, ""mapping_schema"": {""sushi"": {""orders"": {""id"": ""INT"", ""customer_id"": ""INT"", ""waiter_id"": ""INT"", ""start_ts"": ""INT"", ""end_ts"": ""INT"", ""event_date"": ""DATE""}}}, ""pre_statements"": [], ""post_statements"": [], ""query"": ""@entrypoint()"", ""source_type"": ""sql""}, ""parents"": [{""name"": ""sushi.orders"", ""identifier"": ""3181421729""}], ""audits"": [], ""created_ts"": 1701883459184, ""updated_ts"": 1701883460010, ""ttl"": ""in 1 week"", ""previous_versions"": [], ""indirect_versions"": {}, ""version"": ""905810529"", ""change_category"": 1, ""unpaused_ts"": 1701820800000, ""migrated"": false, ""unrestorable"": false}",EMBEDDED
sushi.customer_revenue_by_day,2332822855,3794141510,"{""name"": ""sushi.customer_revenue_by_day"", ""fingerprint"": {""data_hash"": ""723519491"", ""metadata_hash"": ""219433722"", ""parent_data_hash"": ""771274795"", ""parent_metadata_hash"": ""1784483295""}, ""node"": {""name"": ""sushi.customer_revenue_by_day"", ""project"": """", ""description"": ""Table of revenue from customers by day."", ""owner"": ""jen"", ""cron"": ""@daily"", ""tags"": [""expensive""], ""dialect"": ""hive"", ""kind"": {""name"": ""INCREMENTAL_BY_TIME_RANGE"", ""batch_size"": 10, ""forward_only"": false, ""disable_restatement"": false, ""time_column"": {""column"": ""event_date"", ""format"": ""%Y-%m-%d""}}, ""partitioned_by"": [], ""clustered_by"": [], ""audits"": [], ""grains"": [""[customer_id, event_date]""], ""references"": [], ""hash_raw_query"": false, ""allow_partials"": false, ""signals"": [], ""python_env"": {}, ""jinja_macros"": {""packages"": {}, ""root_macros"": {}, ""global_objs"": {""gateway"": """"}, ""top_level_packages"": []}, ""mapping_schema"": {""sushi"": {""orders"": {""id"": ""INT"", ""customer_id"": ""INT"", ""waiter_id"": ""INT"", ""start_ts"": ""INT"", ""end_ts"": ""INT"", ""event_date"": ""DATE""}, ""order_items"": {""id"": ""INT"", ""order_id"": ""INT"", ""item_id"": ""INT"", ""quantity"": ""INT"", ""event_date"": ""DATE""}, ""items"": {""id"": ""INT"", ""name"": ""STRING"", ""price"": ""DOUBLE"", ""event_date"": ""DATE""}}}, ""pre_statements"": [], ""post_statements"": [], ""query"": ""WITH order_total AS (\n  SELECT\n    oi.order_id AS order_id,\n    SUM(oi.quantity * i.price) AS total,\n    oi.event_date AS event_date\n  FROM sushi.order_items AS oi\n  LEFT JOIN sushi.items AS i\n    ON oi.item_id = i.id AND oi.event_date = i.event_date\n  WHERE\n    oi.event_date BETWEEN CAST('{{ start_ds }}' as DATE) AND CAST('{{ end_ds }}' as DATE)\n  GROUP BY\n    oi.order_id,\n    oi.event_date\n)\nSELECT\n  o.customer_id::INT AS customer_id, /* Customer id */\n  SUM(ot.total)::DOUBLE AS revenue, /* Revenue from orders made by this customer */\n  o.event_date::DATE AS event_date /* Date */\nFROM sushi.orders AS o\nLEFT JOIN order_total AS ot\n  ON o.id = ot.order_id AND o.event_date = ot.event_date\nWHERE\n  o.event_date BETWEEN CAST('{{ start_ds }}' as DATE) AND CAST('{{ end_ds }}' as DATE)\nGROUP BY\n  o.customer_id,\n  o.event_date"", ""source_type"": ""sql""}, ""parents"": [{""name"": ""sushi.orders"", ""identifier"": ""3181421729""}, {""name"": ""sushi.order_items"", ""identifier"": ""2963293006""}, {""name"": ""sushi.items"", ""identifier"": ""3912298820""}], ""audits"": [], ""created_ts"": 1701883459174, ""updated_ts"": 1701883460011, ""ttl"": ""in 1 week"", ""previous_versions"": [], ""indirect_versions"": {}, ""version"": ""3794141510"", ""change_category"": 1, ""unpaused_ts"": 1701820800000, ""migrated"": false, ""unrestorable"": false}",INCREMENTAL_BY_TIME_RANGE
sushi.customer_revenue_lifetime,1489314432,224166080,"{""name"": ""sushi.customer_revenue_lifetime"", ""fingerprint"": {""data_hash"": ""1517019278"", ""metadata_hash"": ""4126779900"", ""parent_data_hash"": ""771274795"", ""parent_metadata_hash"": ""1784483295""}, ""node"": {""name"": ""sushi.customer_revenue_lifetime"", ""project"": """", ""description"": ""Table of lifetime customer revenue.\n    Date is available to get lifetime value up to a certain date.\n    Use latest date to get current lifetime value."", ""owner"": ""jen"", ""cron"": ""@daily"", ""tags"": [], ""dialect"": ""hive"", ""kind"": {""name"": ""INCREMENTAL_BY_TIME_RANGE"", ""batch_size"": 1, ""forward_only"": false, ""disable_restatement"": false, ""time_column"": {""column"": ""event_date"", ""format"": ""%Y-%m-%d""}}, ""partitioned_by"": [], ""clustered_by"": [], ""columns"": {""customer_id"": ""INT"", ""revenue"": ""DOUBLE"", ""event_date"": ""DATE""}, ""audits"": [], ""grains"": [""[customer_id, event_date]""], ""references"": [], ""hash_raw_query"": false, ""allow_partials"": false, ""signals"": [], ""python_env"": {}, ""jinja_macros"": {""packages"": {}, ""root_macros"": {}, ""global_objs"": {""gateway"": """"}, ""top_level_packages"": []}, ""mapping_schema"": {""sushi"": {""orders"": {""id"": ""INT"", ""customer_id"": ""INT"", ""waiter_id"": ""INT"", ""start_ts"": ""INT"", ""end_ts"": ""INT"", ""event_date"": ""DATE""}, ""order_items"": {""id"": ""INT"", ""order_id"": ""INT"", ""item_id"": ""INT"", ""quantity"": ""INT"", ""event_date"": ""DATE""}, ""items"": {""id"": ""INT"", ""name"": ""STRING"", ""price"": ""DOUBLE"", ""event_date"": ""DATE""}}}, ""pre_statements"": [], ""post_statements"": [], ""query"": ""WITH order_total AS (\n  SELECT\n    oi.order_id AS order_id,\n    SUM(oi.quantity * i.price) AS total\n  FROM sushi.order_items AS oi\n  LEFT JOIN sushi.items AS i\n    ON oi.item_id = i.id AND oi.event_date = i.event_date\n  WHERE\n    oi.event_date = @end_date\n  GROUP BY\n    oi.order_id\n), incremental_total AS (\n  SELECT\n    o.customer_id::INT AS customer_id,\n    SUM(ot.total)::DOUBLE AS revenue,\n  FROM sushi.orders AS o\n  LEFT JOIN order_total AS ot\n    ON o.id = ot.order_id\n  WHERE\n    o.event_date = @end_date\n  GROUP BY\n    o.customer_id\n), prev_total AS (\n  SELECT\n    crl.customer_id,\n    crl.revenue\n  FROM sushi.customer_revenue_lifetime AS crl\n  WHERE\n    crl.event_date = @end_date - INTERVAL 1 DAY\n)\nSELECT\n  COALESCE(it.customer_id, prev_total.customer_id) AS customer_id, /* Customer id */\n  COALESCE(it.revenue, 0) + COALESCE(prev_total.revenue, 0) AS revenue, /* Lifetime revenue from this customer */\n  @end_date AS event_date /* End date of the lifetime calculation */\nFROM incremental_total AS it\nFULL OUTER JOIN prev_total AS prev_total\n  ON it.customer_id = prev_total.customer_id"", ""source_type"": ""sql""}, ""parents"": [{""name"": ""sushi.orders"", ""identifier"": ""3181421729""}, {""name"": ""sushi.order_items"", ""identifier"": ""2963293006""}, {""name"": ""sushi.items"", ""identifier"": ""3912298820""}], ""audits"": [], ""created_ts"": 1701883459169, ""updated_ts"": 1701883460012, ""ttl"": ""in 1 week"", ""previous_versions"": [], ""indirect_versions"": {}, ""version"": ""224166080"", ""change_category"": 1, ""unpaused_ts"": 1701820800000, ""migrated"": false, ""unrestorable"": false}",INCREMENTAL_BY_TIME_RANGE
sushi.customers,2022612049,755912653,"{""name"": ""sushi.customers"", ""fingerprint"": {""data_hash"": ""277943218"", ""metadata_hash"": ""2893067831"", ""parent_data_hash"": ""489185620"", ""parent_metadata_hash"": ""3424206008""}, ""node"": {""name"": ""sushi.customers"", ""project"": """", ""owner"": ""jen"", ""cron"": ""@daily"", ""tags"": [""pii"", ""fact""], ""dialect"": ""duckdb"", ""kind"": {""name"": ""FULL""}, ""partitioned_by"": [], ""clustered_by"": [], ""audits"": [], ""grains"": [""customer_id""], ""references"": [], ""hash_raw_query"": false, ""allow_partials"": false, ""signals"": [], ""python_env"": {}, ""jinja_macros"": {""packages"": {}, ""root_macros"": {}, ""global_objs"": {""gateway"": """"}, ""top_level_packages"": []}, ""mapping_schema"": {""sushi"": {""orders"": {""id"": ""INT"", ""customer_id"": ""INT"", ""waiter_id"": ""INT"", ""start_ts"": ""INT"", ""end_ts"": ""INT"", ""event_date"": ""DATE""}, ""marketing"": {""customer_id"": ""INT"", ""status"": ""TEXT"", ""updated_at"": ""TIMESTAMP"", ""valid_from"": ""TIMESTAMP"", ""valid_to"": ""TIMESTAMP""}}, ""raw"": {""demographics"": {""customer_id"": ""INT"", ""zip"": ""TEXT""}}}, ""pre_statements"": [""CREATE SCHEMA IF NOT EXISTS raw"", ""DROP TABLE IF EXISTS raw.demographics"", ""CREATE TABLE raw.demographics AS (\n  SELECT 1 AS customer_id, '00000' AS zip\n)""], ""post_statements"": [], ""query"": ""WITH current_marketing AS (\n  SELECT\n    customer_id,\n    status\n  FROM sushi.marketing\n  WHERE valid_to is null\n)\nSELECT DISTINCT\n  o.customer_id::INT AS customer_id,\n  m.status,\n  d.zip\nFROM sushi.orders AS o\nLEFT JOIN current_marketing AS m\n    ON o.customer_id = m.customer_id\nLEFT JOIN raw.demographics AS d\n    ON o.customer_id = d.customer_id"", ""source_type"": ""sql""}, ""parents"": [{""name"": ""sushi.orders"", ""identifier"": ""3181421729""}, {""name"": ""sushi.marketing"", ""identifier"": ""3802474580""}, {""name"": ""raw.demographics"", ""identifier"": ""1140349482""}], ""audits"": [], ""created_ts"": 1701883459171, ""updated_ts"": 1701883460013, ""ttl"": ""in 1 week"", ""previous_versions"": [], ""indirect_versions"": {}, ""version"": ""755912653"", ""change_category"": 1, ""unpaused_ts"": 1701820800000, ""migrated"": false, ""unrestorable"": false}",FULL
sushi.waiter_revenue_by_day,2311908619,797243606,"{""name"": ""sushi.waiter_revenue_by_day"", ""fingerprint"": {""data_hash"": ""955136522"", ""metadata_hash"": ""1029258546"", ""parent_data_hash"": ""771274795"", ""parent_metadata_hash"": ""1784483295""}, ""node"": {""name"": ""sushi.waiter_revenue_by_day"", ""project"": """", ""description"": ""Table of revenue generated by waiters by day."", ""owner"": ""jen"", ""cron"": ""@daily"", ""tags"": [], ""dialect"": ""duckdb"", ""kind"": {""name"": ""INCREMENTAL_BY_TIME_RANGE"", ""batch_size"": 10, ""forward_only"": false, ""disable_restatement"": false, ""time_column"": {""column"": ""event_date"", ""format"": ""%Y-%m-%d""}}, ""partitioned_by"": [], ""clustered_by"": [], ""audits"": [[""number_of_rows"", {""threshold"": ""0""}]], ""grains"": [""(waiter_id, event_date)""], ""references"": [], ""hash_raw_query"": false, ""allow_partials"": false, ""signals"": [], ""python_env"": {}, ""jinja_macros"": {""packages"": {}, ""root_macros"": {}, ""global_objs"": {""gateway"": """"}, ""top_level_packages"": []}, ""mapping_schema"": {""sushi"": {""orders"": {""id"": ""INT"", ""customer_id"": ""INT"", ""waiter_id"": ""INT"", ""start_ts"": ""INT"", ""end_ts"": ""INT"", ""event_date"": ""DATE""}, ""order_items"": {""id"": ""INT"", ""order_id"": ""INT"", ""item_id"": ""INT"", ""quantity"": ""INT"", ""event_date"": ""DATE""}, ""items"": {""id"": ""INT"", ""name"": ""TEXT"", ""price"": ""DOUBLE"", ""event_date"": ""DATE""}}}, ""pre_statements"": [], ""post_statements"": [], ""query"": ""SELECT\n  o.waiter_id::INT AS waiter_id, /* Waiter id */\n  SUM(oi.quantity * i.price)::DOUBLE AS revenue, /* Revenue from orders taken by this waiter */\n  o.event_date::DATE AS event_date /* Date */\nFROM sushi.orders AS o\nLEFT JOIN sushi.order_items AS oi\n  ON o.id = oi.order_id AND o.event_date = oi.event_date\nLEFT JOIN sushi.items AS i\n  ON oi.item_id = i.id AND oi.event_date = i.event_date\nWHERE\n  o.event_date BETWEEN @start_date AND @end_date\nGROUP BY\n  o.waiter_id,\n  o.event_date"", ""source_type"": ""sql""}, ""parents"": [{""name"": ""sushi.orders"", ""identifier"": ""3181421729""}, {""name"": ""sushi.order_items"", ""identifier"": ""2963293006""}, {""name"": ""sushi.items"", ""identifier"": ""3912298820""}], ""audits"": [], ""created_ts"": 1701883459159, ""updated_ts"": 1701883460014, ""ttl"": ""in 1 week"", ""previous_versions"": [], ""indirect_versions"": {}, ""version"": ""797243606"", ""change_category"": 1, ""unpaused_ts"": 1701820800000, ""migrated"": false, ""unrestorable"": false}",INCREMENTAL_BY_TIME_RANGE
sushi.top_waiters,754251913,2524838182,"{""name"": ""sushi.top_waiters"", ""fingerprint"": {""data_hash"": ""473918249"", ""metadata_hash"": ""452484583"", ""parent_data_hash"": ""2491989976"", ""parent_metadata_hash"": ""462296410""}, ""node"": {""name"": ""sushi.top_waiters"", ""project"": """", ""description"": ""View of top waiters."", ""owner"": ""jen"", ""cron"": ""@daily"", ""tags"": [], ""dialect"": ""duckdb"", ""kind"": {""name"": ""VIEW"", ""materialized"": false}, ""partitioned_by"": [], ""clustered_by"": [], ""audits"": [[""unique_values"", {""columns"": ""ARRAY(waiter_id)""}]], ""grains"": [""waiter_id""], ""references"": [], ""hash_raw_query"": false, ""allow_partials"": false, ""signals"": [], ""python_env"": {}, ""jinja_macros"": {""packages"": {}, ""root_macros"": {}, ""global_objs"": {""gateway"": """"}, ""top_level_packages"": []}, ""mapping_schema"": {""sushi"": {""waiter_revenue_by_day"": {""waiter_id"": ""INT"", ""revenue"": ""DOUBLE"", ""event_date"": ""DATE""}}}, ""pre_statements"": [], ""post_statements"": [], ""query"": ""SELECT\n  waiter_id::INT AS waiter_id,\n  revenue::DOUBLE AS revenue\nFROM sushi.waiter_revenue_by_day\nWHERE\n  event_date = (\n    SELECT\n      MAX(event_date)\n    FROM sushi.waiter_revenue_by_day\n  )\nORDER BY\n  revenue DESC\nLIMIT 10"", ""source_type"": ""sql""}, ""parents"": [{""name"": ""sushi.waiter_revenue_by_day"", ""identifier"": ""2311908619""}], ""audits"": [], ""created_ts"": 1701883459180, ""updated_ts"": 1701883460015, ""ttl"": ""in 1 week"", ""previous_versions"": [], ""indirect_versions"": {}, ""version"": ""2524838182"", ""change_category"": 1, ""unpaused_ts"": 1701820800000, ""migrated"": false, ""unrestorable"": false}",VIEW
sushi.waiter_as_customer_by_day,1535510423,788412128,"{""name"": ""sushi.waiter_as_customer_by_day"", ""fingerprint"": {""data_hash"": ""1054784294"", ""metadata_hash"": ""1079862746"", ""parent_data_hash"": ""3847980821"", ""parent_metadata_hash"": ""1799557059""}, ""node"": {""name"": ""sushi.waiter_as_customer_by_day"", ""project"": """", ""owner"": ""jen"", ""cron"": ""@daily"", ""tags"": [], ""dialect"": ""duckdb"", ""kind"": {""name"": ""INCREMENTAL_BY_TIME_RANGE"", ""forward_only"": false, ""disable_restatement"": false, ""time_column"": {""column"": ""event_date"", ""format"": ""%Y-%m-%d""}}, ""partitioned_by"": [], ""clustered_by"": [], ""audits"": [[""not_null"", {""columns"": ""ARRAY(waiter_id)""}], [""forall"", {""criteria"": ""ARRAY(LENGTH(waiter_name) > 0)""}]], ""grains"": [], ""references"": [], ""hash_raw_query"": false, ""allow_partials"": false, ""signals"": [], ""python_env"": {}, ""jinja_macros"": {""packages"": {}, ""root_macros"": {""alias"": {""definition"": ""{% macro alias(expr, alias) %}\n  {{ expr }} AS {{ alias }}\n{% endmacro %}"", ""depends_on"": []}, ""identity"": {""definition"": ""{% macro identity(y) %}\n  {{ y }}\n{% endmacro %}"", ""depends_on"": []}}, ""global_objs"": {""gateway"": """"}, ""top_level_packages"": []}, ""mapping_schema"": {""sushi"": {""waiter_names"": {""id"": ""BIGINT"", ""name"": ""TEXT""}, ""customers"": {""customer_id"": ""INT"", ""status"": ""TEXT"", ""zip"": ""TEXT""}, ""waiters"": {""waiter_id"": ""INT"", ""event_date"": ""DATE""}}}, ""pre_statements"": [], ""post_statements"": [], ""query"": ""JINJA_QUERY_BEGIN;\n\n{% set x = 1 %}\n\nSELECT\n  w.waiter_id as waiter_id,\n  wn.name as waiter_name,\n  {{ alias(identity(x), 'flag') }},\n  w.event_date as event_date\nFROM sushi.waiters AS w\nJOIN sushi.customers as c ON w.waiter_id = c.customer_id\nJOIN sushi.waiter_names as wn ON w.waiter_id = wn.id\nWHERE w.event_date BETWEEN @start_date AND @end_date;\n\nJINJA_END"", ""source_type"": ""sql""}, ""parents"": [{""name"": ""sushi.orders"", ""identifier"": ""3181421729""}, {""name"": ""sushi.waiter_names"", ""identifier"": ""2187544572""}, {""name"": ""sushi.customers"", ""identifier"": ""2022612049""}, {""name"": ""sushi.waiters"", ""identifier"": ""722693143""}], ""audits"": [], ""created_ts"": 1701883459176, ""updated_ts"": 1701883460016, ""ttl"": ""in 1 week"", ""previous_versions"": [], ""indirect_versions"": {}, ""version"": ""788412128"", ""change_category"": 1, ""unpaused_ts"": 1701820800000, ""migrated"": false, ""unrestorable"": false}",INCREMENTAL_BY_TIME_RANGE
sushi.waiter_revenue_by_day,160520982,1845519333,"{""name"": ""sushi.waiter_revenue_by_day"", ""fingerprint"": {""data_hash"": ""133866680"", ""metadata_hash"": ""1029258546"", ""parent_data_hash"": ""771274795"", ""parent_metadata_hash"": ""1784483295""}, ""node"": {""name"": ""sushi.waiter_revenue_by_day"", ""project"": """", ""description"": ""Table of revenue generated by waiters by day."", ""owner"": ""jen"", ""cron"": ""@daily"", ""tags"": [], ""dialect"": ""duckdb"", ""kind"": {""name"": ""INCREMENTAL_BY_TIME_RANGE"", ""batch_size"": 10, ""forward_only"": false, ""disable_restatement"": false, ""time_column"": {""column"": ""event_date"", ""format"": ""%Y-%m-%d""}}, ""partitioned_by"": [], ""clustered_by"": [], ""audits"": [[""number_of_rows"", {""threshold"": ""0""}]], ""grains"": [""(waiter_id, event_date)""], ""references"": [], ""hash_raw_query"": false, ""allow_partials"": false, ""signals"": [], ""python_env"": {}, ""jinja_macros"": {""packages"": {}, ""root_macros"": {}, ""global_objs"": {""gateway"": """"}, ""top_level_packages"": []}, ""mapping_schema"": {""sushi"": {""orders"": {""id"": ""INT"", ""customer_id"": ""INT"", ""waiter_id"": ""INT"", ""start_ts"": ""INT"", ""end_ts"": ""INT"", ""event_date"": ""DATE""}, ""order_items"": {""id"": ""INT"", ""order_id"": ""INT"", ""item_id"": ""INT"", ""quantity"": ""INT"", ""event_date"": ""DATE""}, ""items"": {""id"": ""INT"", ""name"": ""TEXT"", ""price"": ""DOUBLE"", ""event_date"": ""DATE""}}}, ""pre_statements"": [], ""post_statements"": [], ""query"": ""SELECT CAST(o.waiter_id AS INT) AS waiter_id /* Waiter id */, CAST(SUM(oi.quantity * i.price) AS DOUBLE) AS revenue /* Revenue from orders taken by this waiter */, 'dummy' AS dummy_col, CAST(o.event_date AS DATE) AS event_date /* Date */ FROM sushi.orders AS o LEFT JOIN sushi.order_items AS oi ON o.id = oi.order_id AND o.event_date = oi.event_date LEFT JOIN sushi.items AS i ON oi.item_id = i.id AND oi.event_date = i.event_date WHERE o.event_date BETWEEN @start_date AND @end_date GROUP BY o.waiter_id, o.event_date"", ""source_type"": ""sql""}, ""parents"": [{""name"": ""sushi.orders"", ""identifier"": ""3181421729""}, {""name"": ""sushi.order_items"", ""identifier"": ""2963293006""}, {""name"": ""sushi.items"", ""identifier"": ""3912298820""}], ""audits"": [], ""created_ts"": 1701883460150, ""updated_ts"": 1701883460150, ""ttl"": ""in 1 week"", ""previous_versions"": [{""fingerprint"": {""data_hash"": ""955136522"", ""metadata_hash"": ""1029258546"", ""parent_data_hash"": ""771274795"", ""parent_metadata_hash"": ""1784483295""}, ""version"": ""797243606"", ""change_category"": 1, ""physical_schema"": ""sqlmesh__sushi""}], ""indirect_versions"": {""sushi.top_waiters"": [{""fingerprint"": {""data_hash"": ""473918249"", ""metadata_hash"": ""452484583"", ""parent_data_hash"": ""2491989976"", ""parent_metadata_hash"": ""462296410""}, ""version"": ""2524838182"", ""change_category"": 1, ""physical_schema"": ""sqlmesh__sushi""}, {""fingerprint"": {""data_hash"": ""473918249"", ""metadata_hash"": ""2433776314"", ""parent_data_hash"": ""583916324"", ""parent_metadata_hash"": ""462296410""}, ""version"": ""2524838182"", ""temp_version"": ""2524838182"", ""change_category"": 5, ""physical_schema"": ""sqlmesh__sushi""}]}, ""version"": ""1845519333"", ""change_category"": 2, ""migrated"": false, ""unrestorable"": false}",INCREMENTAL_BY_TIME_RANGE
sushi.top_waiters,798483894,2524838182,"{""name"": ""sushi.top_waiters"", ""fingerprint"": {""data_hash"": ""473918249"", ""metadata_hash"": ""2433776314"", ""parent_data_hash"": ""583916324"", ""parent_metadata_hash"": ""462296410""}, ""physical_schema"": ""sqlmesh__sushi"", ""node"": {""name"": ""sushi.top_waiters"", ""project"": """", ""description"": ""View of top waiters."", ""owner"": ""jen"", ""cron"": ""@daily"", ""tags"": [], ""dialect"": ""duckdb"", ""kind"": {""name"": ""VIEW"", ""materialized"": false}, ""partitioned_by"": [], ""clustered_by"": [], ""audits"": [[""unique_values"", {""columns"": ""ARRAY(waiter_id)""}]], ""grains"": [""waiter_id""], ""references"": [], ""hash_raw_query"": false, ""allow_partials"": false, ""signals"": [], ""python_env"": {}, ""jinja_macros"": {""packages"": {}, ""root_macros"": {}, ""global_objs"": {""gateway"": """"}, ""top_level_packages"": []}, ""mapping_schema"": {""sushi"": {""waiter_revenue_by_day"": {""waiter_id"": ""INT"", ""revenue"": ""DOUBLE"", ""dummy_col"": ""TEXT"", ""event_date"": ""DATE""}}}, ""pre_statements"": [], ""post_statements"": [], ""query"": ""SELECT\n  waiter_id::INT AS waiter_id,\n  revenue::DOUBLE AS revenue\nFROM sushi.waiter_revenue_by_day\nWHERE\n  event_date = (\n    SELECT\n      MAX(event_date)\n    FROM sushi.waiter_revenue_by_day\n  )\nORDER BY\n  revenue DESC\nLIMIT 10"", ""source_type"": ""sql""}, ""parents"": [{""name"": ""sushi.waiter_revenue_by_day"", ""identifier"": ""160520982""}], ""audits"": [], ""created_ts"": 1701883460168, ""updated_ts"": 1701883460168, ""ttl"": ""in 1 week"", ""previous_versions"": [{""fingerprint"": {""data_hash"": ""473918249"", ""metadata_hash"": ""452484583"", ""parent_data_hash"": ""2491989976"", ""parent_metadata_hash"": ""462296410""}, ""version"": ""2524838182"", ""change_category"": 1, ""physical_schema"": ""sqlmesh__sushi""}], ""indirect_versions"": {}, ""version"": ""2524838182"", ""temp_version"": ""2524838182"", ""change_category"": 5, ""migrated"": false, ""unrestorable"": false}",VIEW
