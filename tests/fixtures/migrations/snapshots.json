{"name":{"0":"\"sushi\".\"waiter_as_customer_by_day\"","1":"\"sushi\".\"waiter_revenue_by_day\"","2":"\"sushi\".\"top_waiters\"","3":"\"sushi\".\"waiters\"","4":"\"sushi\".\"customers\"","5":"\"sushi\".\"waiter_names\"","6":"\"sushi\".\"customer_revenue_by_day\"","7":"\"sushi\".\"items\"","8":"\"sushi\".\"order_items\"","9":"\"sushi\".\"orders\"","10":"\"sushi\".\"waiter_as_customer_by_day\"","11":"\"sushi\".\"waiter_names\"","12":"\"sushi\".\"waiter_as_customer_by_day\"","13":"\"sushi\".\"waiter_names\"","14":"\"sushi\".\"customer_revenue_by_day\"","15":"\"sushi\".\"top_waiters\"","16":"\"sushi\".\"waiter_revenue_by_day\"","17":"\"sushi\".\"order_items\"","18":"\"sushi\".\"items\"","19":"\"sushi\".\"waiter_as_customer_by_day\"","20":"\"sushi\".\"waiter_names\"","21":"\"sushi\".\"customers\"","22":"\"sushi\".\"waiters\"","23":"\"sushi\".\"orders\""},"identifier":{"0":"1281222509","1":"1609279380","2":"599861134","3":"3386889721","4":"3148897116","5":"3233103305","6":"1308408370","7":"2957171338","8":"1806777563","9":"3564161223","10":"1084858582","11":"1604207722","12":"3998224796","13":"2725136291","14":"3566886383","15":"129039563","16":"2175947464","17":"1422946820","18":"3721860967","19":"1341746752","20":"1609854746","21":"1461038955","22":"4123940212","23":"1250207606"},"version":{"0":"1267397572","1":"2695875565","2":"3010914162","3":"2059227798","4":"2359719298","5":"2505706914","6":"1291364031","7":"312608270","8":"1015284155","9":"925846788","10":"3668757715","11":"3668757715","12":"3668757715","13":"1204702829","14":"1291364031","15":"3010914162","16":"2695875565","17":"1015284155","18":"312608270","19":"1267397572","20":"2505706914","21":"2359719298","22":"2059227798","23":"925846788"},"snapshot":{"0":"{\"name\": \"\\\"sushi\\\".\\\"waiter_as_customer_by_day\\\"\", \"fingerprint\": {\"data_hash\": \"486172035\", \"metadata_hash\": \"1992853678\", \"parent_data_hash\": \"2154574190\", \"parent_metadata_hash\": \"1349779748\"}, \"physical_schema\": \"sqlmesh\", \"parents\": [{\"name\": \"\\\"sushi\\\".\\\"waiters\\\"\", \"identifier\": \"3386889721\"}, {\"name\": \"\\\"sushi\\\".\\\"waiter_names\\\"\", \"identifier\": \"3233103305\"}, {\"name\": \"\\\"sushi\\\".\\\"customers\\\"\", \"identifier\": \"3148897116\"}, {\"name\": \"\\\"sushi\\\".\\\"orders\\\"\", \"identifier\": \"3564161223\"}], \"created_ts\": 1680814376348, \"ttl\": \"in 1 week\", \"previous_versions\": [], \"version\": \"1267397572\", \"node\": {\"name\": \"sushi.waiter_as_customer_by_day\", \"kind\": {\"name\": \"INCREMENTAL_BY_TIME_RANGE\", \"time_column\": {\"column\": \"ds\", \"format\": \"%Y-%m-%d\"}}, \"dialect\": \"duckdb\", \"cron\": \"@daily\", \"owner\": \"jen\", \"partitioned_by\": [], \"audits\": [[\"not_null\", {\"columns\": \"ARRAY(waiter_id)\"}]], \"python_env\": {}, \"jinja_macros\": {\"packages\": {}, \"root_macros\": {}, \"global_objs\": {}}, \"query\": \"SELECT w.ds AS ds, w.waiter_id AS waiter_id, wn.name AS waiter_name FROM sushi.waiters AS w JOIN sushi.customers AS c ON w.waiter_id = c.customer_id JOIN sushi.waiter_names AS wn ON w.waiter_id = wn.id\", \"source_type\": \"sql\", \"project\": \"\", \"default_catalog\": null}, \"change_category\": 4, \"base_table_name_override\": \"sushi.waiter_as_customer_by_day\"}","1":"{\"name\": \"\\\"sushi\\\".\\\"waiter_revenue_by_day\\\"\", \"fingerprint\": {\"data_hash\": \"2443934302\", \"metadata_hash\": \"2904050331\", \"parent_data_hash\": \"764310396\", \"parent_metadata_hash\": \"3147731239\"}, \"physical_schema\": \"sqlmesh\", \"parents\": [{\"name\": \"\\\"sushi\\\".\\\"order_items\\\"\", \"identifier\": \"1806777563\"}, {\"name\": \"\\\"sushi\\\".\\\"items\\\"\", \"identifier\": \"2957171338\"}, {\"name\": \"\\\"sushi\\\".\\\"orders\\\"\", \"identifier\": \"3564161223\"}], \"created_ts\": 1680814376361, \"ttl\": \"in 1 week\", \"previous_versions\": [], \"version\": \"2695875565\", \"node\": {\"name\": \"sushi.waiter_revenue_by_day\", \"kind\": {\"name\": \"INCREMENTAL_BY_TIME_RANGE\", \"time_column\": {\"column\": \"ds\", \"format\": \"%Y-%m-%d\"}, \"batch_size\": 10}, \"dialect\": \"duckdb\", \"cron\": \"@daily\", \"owner\": \"jen\", \"description\": \"Table of revenue generated by waiters by day.\", \"partitioned_by\": [], \"audits\": [[\"number_of_rows\", {\"threshold\": \"0\"}]], \"python_env\": {}, \"jinja_macros\": {\"packages\": {}, \"root_macros\": {}, \"global_objs\": {}}, \"query\": \"SELECT CAST(o.waiter_id AS INT) AS waiter_id \/* Waiter id *\/, CAST(SUM(oi.quantity * i.price) AS DOUBLE) AS revenue \/* Revenue from orders taken by this waiter *\/, CAST(o.ds AS TEXT) AS ds \/* Date *\/ FROM sushi.orders AS o LEFT JOIN sushi.order_items AS oi ON o.id = oi.order_id AND o.ds = oi.ds LEFT JOIN sushi.items AS i ON oi.item_id = i.id AND oi.ds = i.ds WHERE o.ds BETWEEN @start_ds AND @end_ds GROUP BY o.waiter_id, o.ds\", \"source_type\": \"sql\", \"project\": \"\", \"default_catalog\": null}, \"change_category\": 4, \"base_table_name_override\": \"sushi.waiter_revenue_by_day\"}","2":"{\"name\": \"\\\"sushi\\\".\\\"top_waiters\\\"\", \"fingerprint\": {\"data_hash\": \"2891807529\", \"metadata_hash\": \"3392493998\", \"parent_data_hash\": \"1940707936\", \"parent_metadata_hash\": \"1276363398\"}, \"physical_schema\": \"sqlmesh\", \"parents\": [{\"name\": \"\\\"sushi\\\".\\\"waiter_revenue_by_day\\\"\", \"identifier\": \"1609279380\"}], \"created_ts\": 1680814376384, \"ttl\": \"in 1 week\", \"previous_versions\": [], \"version\": \"3010914162\", \"node\": {\"name\": \"sushi.top_waiters\", \"kind\": {\"name\": \"VIEW\"}, \"dialect\": \"duckdb\", \"cron\": \"@daily\", \"owner\": \"jen\", \"description\": \"View of top waiters.\", \"partitioned_by\": [], \"audits\": [[\"unique_values\", {\"columns\": \"ARRAY(waiter_id)\"}]], \"python_env\": {}, \"jinja_macros\": {\"packages\": {}, \"root_macros\": {}, \"global_objs\": {}}, \"query\": \"SELECT CAST(waiter_id AS INT) AS waiter_id, CAST(revenue AS DOUBLE) AS revenue FROM sushi.waiter_revenue_by_day WHERE ds = (SELECT MAX(ds) FROM sushi.waiter_revenue_by_day) ORDER BY revenue DESC LIMIT 10\", \"source_type\": \"sql\", \"project\": \"\", \"default_catalog\": null}, \"change_category\": 4, \"base_table_name_override\": \"sushi.top_waiters\"}","3":"{\"name\": \"\\\"sushi\\\".\\\"waiters\\\"\", \"fingerprint\": {\"data_hash\": \"3501061139\", \"metadata_hash\": \"570478986\", \"parent_data_hash\": \"777615193\", \"parent_metadata_hash\": \"2042613269\"}, \"physical_schema\": \"sqlmesh\", \"parents\": [{\"name\": \"\\\"sushi\\\".\\\"orders\\\"\", \"identifier\": \"3564161223\"}], \"created_ts\": 1680814376387, \"ttl\": \"in 1 week\", \"previous_versions\": [], \"version\": \"2059227798\", \"node\": {\"name\": \"sushi.waiters\", \"kind\": {\"name\": \"EMBEDDED\"}, \"dialect\": \"duckdb\", \"cron\": \"@daily\", \"owner\": \"jen\", \"partitioned_by\": [], \"audits\": [], \"python_env\": {\"incremental_by_ds\": {\"payload\": \"def incremental_by_ds(evaluator, column):\\n    expression = evaluator.transform(exp.Between(this=column, low=MacroVar(\\n        this='start_ds'), high=MacroVar(this='end_ds')))\\n    if not isinstance(expression, exp.Expression):\\n        raise MacroEvalError(\\n            f'Return type is {type(expression)}, expected exp.Expression')\\n    return expression\", \"kind\": \"definition\", \"name\": \"incremental_by_ds\", \"path\": \"macros\/macros.py\"}, \"exp\": {\"payload\": \"import sqlglot.expressions as exp\", \"kind\": \"import\"}, \"MacroVar\": {\"payload\": \"from sqlmesh.core.dialect import MacroVar\", \"kind\": \"import\"}, \"MacroEvalError\": {\"payload\": \"from sqlmesh.utils.errors import MacroEvalError\", \"kind\": \"import\"}}, \"jinja_macros\": {\"packages\": {}, \"root_macros\": {}, \"global_objs\": {}}, \"query\": \"SELECT DISTINCT CAST(waiter_id AS INT) AS waiter_id, CAST(ds AS TEXT) AS ds FROM sushi.orders AS o WHERE @incremental_by_ds(ds)\", \"source_type\": \"sql\", \"project\": \"\", \"default_catalog\": null}, \"change_category\": 4, \"base_table_name_override\": \"sushi.waiters\"}","4":"{\"name\": \"\\\"sushi\\\".\\\"customers\\\"\", \"fingerprint\": {\"data_hash\": \"3553985282\", \"metadata_hash\": \"570478986\", \"parent_data_hash\": \"777615193\", \"parent_metadata_hash\": \"2042613269\"}, \"physical_schema\": \"sqlmesh\", \"parents\": [{\"name\": \"\\\"sushi\\\".\\\"orders\\\"\", \"identifier\": \"3564161223\"}], \"created_ts\": 1680814376388, \"ttl\": \"in 1 week\", \"previous_versions\": [], \"version\": \"2359719298\", \"node\": {\"name\": \"sushi.customers\", \"kind\": {\"name\": \"FULL\"}, \"dialect\": \"duckdb\", \"cron\": \"@daily\", \"owner\": \"jen\", \"partitioned_by\": [], \"audits\": [], \"python_env\": {\"noop\": {\"payload\": \"def noop(context, start, end, latest, **kwargs):\\n    pass\", \"kind\": \"definition\", \"name\": \"noop\", \"path\": \"hooks\/hooks.py\"}}, \"jinja_macros\": {\"packages\": {}, \"root_macros\": {}, \"global_objs\": {}}, \"query\": \"SELECT DISTINCT CAST(customer_id AS INT) AS customer_id FROM sushi.orders AS o\", \"source_type\": \"sql\", \"project\": \"\", \"default_catalog\": null}, \"change_category\": 4, \"base_table_name_override\": \"sushi.customers\"}","5":"{\"name\": \"\\\"sushi\\\".\\\"waiter_names\\\"\", \"fingerprint\": {\"data_hash\": \"1876476880\", \"metadata_hash\": \"570478986\", \"parent_data_hash\": \"0\", \"parent_metadata_hash\": \"0\"}, \"physical_schema\": \"sqlmesh\", \"parents\": [], \"created_ts\": 1680814376389, \"ttl\": \"in 1 week\", \"previous_versions\": [], \"version\": \"2505706914\", \"node\": {\"name\": \"sushi.waiter_names\", \"kind\": {\"name\": \"SEED\", \"path\": \"..\/seeds\/waiter_names.csv\", \"batch_size\": 5}, \"dialect\": \"duckdb\", \"cron\": \"@daily\", \"owner\": \"jen\", \"partitioned_by\": [], \"audits\": [], \"jinja_macros\": {\"packages\": {}, \"root_macros\": {}, \"global_objs\": {}}, \"seed\": {\"content\": \"id,name\\n0,Toby\\n1,Tyson\\n2,Ryan\\n3,George\\n4,Chris\\n5,Max\\n6,Vincent\\n7,Iaroslav\\n8,Emma\\n9,Maia\\n\"}, \"source_type\": \"seed\", \"project\": \"\", \"default_catalog\": null}, \"change_category\": 4, \"base_table_name_override\": \"sushi.waiter_names\"}","6":"{\"name\": \"\\\"sushi\\\".\\\"customer_revenue_by_day\\\"\", \"fingerprint\": {\"data_hash\": \"2657552867\", \"metadata_hash\": \"129771006\", \"parent_data_hash\": \"764310396\", \"parent_metadata_hash\": \"3147731239\"}, \"physical_schema\": \"sqlmesh\", \"parents\": [{\"name\": \"\\\"sushi\\\".\\\"order_items\\\"\", \"identifier\": \"1806777563\"}, {\"name\": \"\\\"sushi\\\".\\\"items\\\"\", \"identifier\": \"2957171338\"}, {\"name\": \"\\\"sushi\\\".\\\"orders\\\"\", \"identifier\": \"3564161223\"}], \"created_ts\": 1680814376391, \"ttl\": \"in 1 week\", \"previous_versions\": [], \"version\": \"1291364031\", \"node\": {\"name\": \"sushi.customer_revenue_by_day\", \"kind\": {\"name\": \"INCREMENTAL_BY_TIME_RANGE\", \"time_column\": {\"column\": \"ds\", \"format\": \"%Y-%m-%d\"}, \"batch_size\": 10}, \"dialect\": \"hive\", \"cron\": \"@daily\", \"owner\": \"jen\", \"description\": \"Table of revenue from customers by day.\", \"partitioned_by\": [], \"audits\": [], \"python_env\": {}, \"jinja_macros\": {\"packages\": {}, \"root_macros\": {}, \"global_objs\": {}}, \"query\": \"JINJA_QUERY_BEGIN;\\nWITH order_total AS (SELECT oi.order_id AS order_id, SUM(oi.quantity * i.price) AS total, oi.ds AS ds FROM sushi.order_items AS oi LEFT JOIN sushi.items AS i ON oi.item_id = i.id AND oi.ds = i.ds WHERE oi.ds BETWEEN '{{ start_ds }}' AND '{{ end_ds }}' GROUP BY oi.order_id, oi.ds) SELECT CAST(o.customer_id AS INT) AS customer_id \/* Customer id *\/, CAST(SUM(ot.total) AS DOUBLE) AS revenue \/* Revenue from orders made by this customer *\/, CAST(o.ds AS TEXT) AS ds \/* Date *\/ FROM sushi.orders AS o LEFT JOIN order_total AS ot ON o.id = ot.order_id AND o.ds = ot.ds WHERE o.ds BETWEEN '{{ start_ds }}' AND '{{ end_ds }}' GROUP BY o.customer_id, o.ds\\nJINJA_END;\", \"source_type\": \"sql\", \"project\": \"\", \"default_catalog\": null}, \"change_category\": 4, \"base_table_name_override\": \"sushi.customer_revenue_by_day\"}","7":"{\"name\": \"\\\"sushi\\\".\\\"items\\\"\", \"fingerprint\": {\"data_hash\": \"1960378930\", \"metadata_hash\": \"2900807542\", \"parent_data_hash\": \"0\", \"parent_metadata_hash\": \"0\"}, \"physical_schema\": \"sqlmesh\", \"parents\": [], \"created_ts\": 1680814376399, \"ttl\": \"in 1 week\", \"previous_versions\": [], \"version\": \"312608270\", \"node\": {\"name\": \"sushi.items\", \"kind\": {\"name\": \"INCREMENTAL_BY_TIME_RANGE\", \"time_column\": {\"column\": \"ds\", \"format\": \"%Y-%m-%d\"}, \"batch_size\": 30}, \"dialect\": \"\", \"cron\": \"@daily\", \"start\": \"Jan 1 2022\", \"partitioned_by\": [], \"depends_on\": [], \"columns\": {\"id\": \"INT\", \"name\": \"TEXT\", \"price\": \"DOUBLE\", \"ds\": \"TEXT\"}, \"audits\": [[\"accepted_values\", {\"column\": \"name\", \"values\": \"ARRAY('Ahi', 'Aji', 'Amaebi', 'Anago', 'Aoyagi', 'Bincho', 'Katsuo', 'Ebi', 'Escolar', 'Hamachi', 'Hamachi Toro', 'Hirame', 'Hokigai', 'Hotate', 'Ika', 'Ikura', 'Iwashi', 'Kani', 'Kanpachi', 'Maguro', 'Saba', 'Sake', 'Sake Toro', 'Tai', 'Tako', 'Tamago', 'Tobiko', 'Toro', 'Tsubugai', 'Umi Masu', 'Unagi', 'Uni')\"}], [\"not_null\", {\"columns\": \"ARRAY(name, price)\"}], [\"assert_items_price_exceeds_threshold\", {\"price\": \"0\"}]], \"python_env\": {\"execute\": {\"payload\": \"def execute(context, start, end, latest, **kwargs):\\n    dfs = []\\n    for dt in iter_dates(start, end):\\n        num_items = random.randint(10, len(ITEMS))\\n        dfs.append(pd.DataFrame({'name': random.sample(ITEMS, num_items),\\n            'price': np.random.uniform(3.0, 10.0, size=num_items).round(2),\\n            'ds': to_ds(dt)}).reset_index().rename(columns={'index': 'id'}))\\n    return pd.concat(dfs)\", \"kind\": \"definition\", \"name\": \"execute\", \"path\": \"models\/items.py\"}, \"iter_dates\": {\"payload\": \"def iter_dates(start, end):\\n    for i in range((end - start).days + 1):\\n        dt = start + timedelta(days=i)\\n        set_seed(dt)\\n        yield dt\", \"kind\": \"definition\", \"name\": \"iter_dates\", \"path\": \"helper.py\"}, \"timedelta\": {\"payload\": \"from datetime import timedelta\", \"kind\": \"import\"}, \"set_seed\": {\"payload\": \"def set_seed(dt):\\n    ts = int(dt.timestamp())\\n    random.seed(ts)\\n    np.random.seed(ts)\", \"kind\": \"definition\", \"name\": \"set_seed\", \"path\": \"helper.py\"}, \"random\": {\"payload\": \"import random\", \"kind\": \"import\"}, \"np\": {\"payload\": \"import numpy as np\", \"kind\": \"import\"}, \"ITEMS\": {\"payload\": \"['Ahi', 'Aji', 'Amaebi', 'Anago', 'Aoyagi', 'Bincho', 'Katsuo', 'Ebi', 'Escolar', 'Hamachi', 'Hamachi Toro', 'Hirame', 'Hokigai', 'Hotate', 'Ika', 'Ikura', 'Iwashi', 'Kani', 'Kanpachi', 'Maguro', 'Saba', 'Sake', 'Sake Toro', 'Tai', 'Tako', 'Tamago', 'Tobiko', 'Toro', 'Tsubugai', 'Umi Masu', 'Unagi', 'Uni']\", \"kind\": \"value\"}, \"pd\": {\"payload\": \"import pandas as pd\", \"kind\": \"import\"}, \"to_ds\": {\"payload\": \"from sqlmesh.utils.date import to_ds\", \"kind\": \"import\"}}, \"jinja_macros\": {\"packages\": {}, \"root_macros\": {}, \"global_objs\": {}}, \"entrypoint\": \"execute\", \"source_type\": \"python\", \"project\": \"\", \"default_catalog\": null, \"audit_definitions\": {\"assert_items_price_exceeds_threshold\": {\"name\": \"assert_items_price_exceeds_threshold\", \"dialect\": \"\", \"skip\": false, \"blocking\": true, \"query\": \"SELECT * FROM @this_model WHERE price <= @price\", \"expressions\": []}}}, \"change_category\": 4, \"base_table_name_override\": \"sushi.items\"}","8":"{\"name\": \"\\\"sushi\\\".\\\"order_items\\\"\", \"fingerprint\": {\"data_hash\": \"653664599\", \"metadata_hash\": \"1960934702\", \"parent_data_hash\": \"3170724558\", \"parent_metadata_hash\": \"867324801\"}, \"physical_schema\": \"sqlmesh\", \"parents\": [{\"name\": \"\\\"sushi\\\".\\\"items\\\"\", \"identifier\": \"2957171338\"}, {\"name\": \"\\\"sushi\\\".\\\"orders\\\"\", \"identifier\": \"3564161223\"}], \"created_ts\": 1680814376401, \"ttl\": \"in 1 week\", \"previous_versions\": [], \"version\": \"1015284155\", \"node\": {\"name\": \"sushi.order_items\", \"kind\": {\"name\": \"INCREMENTAL_BY_TIME_RANGE\", \"time_column\": {\"column\": \"ds\", \"format\": \"%Y-%m-%d\"}, \"batch_size\": 30}, \"dialect\": \"\", \"cron\": \"@daily\", \"partitioned_by\": [], \"depends_on\": [\"\\\"sushi\\\".\\\"items\\\"\", \"\\\"sushi\\\".\\\"orders\\\"\"], \"columns\": {\"id\": \"INT\", \"order_id\": \"INT\", \"item_id\": \"INT\", \"quantity\": \"INT\", \"ds\": \"TEXT\"}, \"audits\": [[\"not_null\", {\"columns\": \"ARRAY(id, order_id, item_id, quantity)\"}], [\"assert_order_items_quantity_exceeds_threshold\", {\"quantity\": \"0\"}]], \"python_env\": {\"execute\": {\"payload\": \"def execute(context, start, end, latest, **kwargs):\\n    orders_table = context.table('sushi.orders')\\n    items_table = context.table(ITEMS)\\n    for dt in iter_dates(start, end):\\n        orders = context.fetchdf(\\n            f\\\"\\\"\\\"\\n            SELECT *\\n            FROM {orders_table}\\n            WHERE ds = '{to_ds(dt)}'\\n            \\\"\\\"\\\"\\n            )\\n        items = context.fetchdf(\\n            f\\\"\\\"\\\"\\n            SELECT *\\n            FROM {items_table}\\n            WHERE ds = '{to_ds(dt)}'\\n            \\\"\\\"\\\"\\n            )\\n        for order_id in orders['id']:\\n            n = random.randint(1, 5)\\n            yield pd.DataFrame({'order_id': order_id, 'item_id': items.\\n                sample(n=n)['id'], 'quantity': np.random.randint(1, 10, n),\\n                'ds': to_ds(dt)}).reset_index().rename(columns={'index': 'id'})\", \"kind\": \"definition\", \"name\": \"execute\", \"path\": \"models\/order_items.py\"}, \"ITEMS\": {\"payload\": \"'sushi.items'\", \"kind\": \"value\"}, \"iter_dates\": {\"payload\": \"def iter_dates(start, end):\\n    for i in range((end - start).days + 1):\\n        dt = start + timedelta(days=i)\\n        set_seed(dt)\\n        yield dt\", \"kind\": \"definition\", \"name\": \"iter_dates\", \"path\": \"helper.py\"}, \"timedelta\": {\"payload\": \"from datetime import timedelta\", \"kind\": \"import\"}, \"set_seed\": {\"payload\": \"def set_seed(dt):\\n    ts = int(dt.timestamp())\\n    random.seed(ts)\\n    np.random.seed(ts)\", \"kind\": \"definition\", \"name\": \"set_seed\", \"path\": \"helper.py\"}, \"random\": {\"payload\": \"import random\", \"kind\": \"import\"}, \"np\": {\"payload\": \"import numpy as np\", \"kind\": \"import\"}, \"to_ds\": {\"payload\": \"from sqlmesh.utils.date import to_ds\", \"kind\": \"import\"}, \"pd\": {\"payload\": \"import pandas as pd\", \"kind\": \"import\"}}, \"jinja_macros\": {\"packages\": {}, \"root_macros\": {}, \"global_objs\": {}}, \"entrypoint\": \"execute\", \"source_type\": \"python\", \"project\": \"\", \"default_catalog\": null, \"audit_definitions\": {\"assert_order_items_quantity_exceeds_threshold\": {\"name\": \"assert_order_items_quantity_exceeds_threshold\", \"dialect\": \"\", \"skip\": false, \"blocking\": true, \"query\": \"SELECT * FROM @this_model WHERE quantity <= @quantity\", \"expressions\": []}}}, \"change_category\": 4, \"base_table_name_override\": \"sushi.order_items\"}","9":"{\"name\": \"\\\"sushi\\\".\\\"orders\\\"\", \"fingerprint\": {\"data_hash\": \"1628439771\", \"metadata_hash\": \"2745052130\", \"parent_data_hash\": \"0\", \"parent_metadata_hash\": \"0\"}, \"physical_schema\": \"sqlmesh\", \"parents\": [], \"created_ts\": 1680814376402, \"ttl\": \"in 1 week\", \"previous_versions\": [], \"version\": \"925846788\", \"node\": {\"name\": \"sushi.orders\", \"kind\": {\"name\": \"INCREMENTAL_BY_TIME_RANGE\", \"time_column\": {\"column\": \"ds\", \"format\": \"%Y-%m-%d\"}, \"batch_size\": 30}, \"dialect\": \"\", \"cron\": \"@daily\", \"description\": \"Table of sushi orders.\", \"start\": \"2022-01-01\", \"partitioned_by\": [], \"depends_on\": [], \"columns\": {\"id\": \"INT\", \"customer_id\": \"INT\", \"waiter_id\": \"INT\", \"start_ts\": \"INT\", \"end_ts\": \"INT\", \"ds\": \"TEXT\"}, \"audits\": [], \"python_env\": {\"execute\": {\"payload\": \"def execute(context, start, end, latest, **kwargs):\\n    dfs = []\\n    for dt in iter_dates(start, end):\\n        num_orders = random.randint(10, 30)\\n        start_ts = [int((dt + timedelta(seconds=random.randint(0, 80000))).\\n            timestamp()) for _ in range(num_orders)]\\n        end_ts = [int(s + random.randint(0, 60 * 60)) for s in start_ts]\\n        dfs.append(pd.DataFrame({'customer_id': random.choices(CUSTOMERS, k\\n            =num_orders), 'waiter_id': random.choices(WAITERS, k=num_orders\\n            ), 'start_ts': start_ts, 'end_ts': end_ts, 'ds': to_ds(dt)}).\\n            reset_index().rename(columns={'index': 'id'}))\\n    return pd.concat(dfs)\", \"kind\": \"definition\", \"name\": \"execute\", \"path\": \"models\/orders.py\"}, \"iter_dates\": {\"payload\": \"def iter_dates(start, end):\\n    for i in range((end - start).days + 1):\\n        dt = start + timedelta(days=i)\\n        set_seed(dt)\\n        yield dt\", \"kind\": \"definition\", \"name\": \"iter_dates\", \"path\": \"helper.py\"}, \"timedelta\": {\"payload\": \"from datetime import timedelta\", \"kind\": \"import\"}, \"set_seed\": {\"payload\": \"def set_seed(dt):\\n    ts = int(dt.timestamp())\\n    random.seed(ts)\\n    np.random.seed(ts)\", \"kind\": \"definition\", \"name\": \"set_seed\", \"path\": \"helper.py\"}, \"random\": {\"payload\": \"import random\", \"kind\": \"import\"}, \"np\": {\"payload\": \"import numpy as np\", \"kind\": \"import\"}, \"pd\": {\"payload\": \"import pandas as pd\", \"kind\": \"import\"}, \"CUSTOMERS\": {\"payload\": \"[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]\", \"kind\": \"value\"}, \"WAITERS\": {\"payload\": \"[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\", \"kind\": \"value\"}, \"to_ds\": {\"payload\": \"from sqlmesh.utils.date import to_ds\", \"kind\": \"import\"}}, \"jinja_macros\": {\"packages\": {}, \"root_macros\": {}, \"global_objs\": {}}, \"entrypoint\": \"execute\", \"source_type\": \"python\", \"project\": \"\", \"default_catalog\": null}, \"change_category\": 4, \"base_table_name_override\": \"sushi.orders\"}","10":"{\"name\": \"\\\"sushi\\\".\\\"waiter_as_customer_by_day\\\"\", \"fingerprint\": {\"data_hash\": \"486172035\", \"metadata_hash\": \"1992853678\", \"parent_data_hash\": \"2824767713\", \"parent_metadata_hash\": \"1349779748\"}, \"physical_schema\": \"sqlmesh\", \"parents\": [{\"name\": \"\\\"sushi\\\".\\\"waiters\\\"\", \"identifier\": \"3386889721\"}, {\"name\": \"\\\"sushi\\\".\\\"waiter_names\\\"\", \"identifier\": \"1604207722\"}, {\"name\": \"\\\"sushi\\\".\\\"customers\\\"\", \"identifier\": \"3148897116\"}, {\"name\": \"\\\"sushi\\\".\\\"orders\\\"\", \"identifier\": \"3564161223\"}], \"created_ts\": 1680814464891, \"ttl\": \"in 1 week\", \"previous_versions\": [{\"fingerprint\": {\"data_hash\": \"486172035\", \"metadata_hash\": \"1992853678\", \"parent_data_hash\": \"2154574190\", \"parent_metadata_hash\": \"1349779748\"}, \"version\": \"1267397572\"}], \"version\": \"3668757715\", \"node\": {\"name\": \"sushi.waiter_as_customer_by_day\", \"kind\": {\"name\": \"INCREMENTAL_BY_TIME_RANGE\", \"time_column\": {\"column\": \"ds\", \"format\": \"%Y-%m-%d\"}}, \"dialect\": \"duckdb\", \"cron\": \"@daily\", \"owner\": \"jen\", \"partitioned_by\": [], \"audits\": [[\"not_null\", {\"columns\": \"ARRAY(waiter_id)\"}]], \"python_env\": {}, \"jinja_macros\": {\"packages\": {}, \"root_macros\": {}, \"global_objs\": {}}, \"table_properties\": \"('key' = 'value')\", \"query\": \"SELECT w.ds AS ds, w.waiter_id AS waiter_id, wn.name AS waiter_name FROM sushi.waiters AS w JOIN sushi.customers AS c ON w.waiter_id = c.customer_id JOIN sushi.waiter_names AS wn ON w.waiter_id = wn.id\", \"source_type\": \"sql\", \"project\": \"\", \"default_catalog\": null}, \"change_category\": 4, \"base_table_name_override\": \"sushi.waiter_as_customer_by_day\"}","11":"{\"name\": \"\\\"sushi\\\".\\\"waiter_names\\\"\", \"fingerprint\": {\"data_hash\": \"4133862560\", \"metadata_hash\": \"570478986\", \"parent_data_hash\": \"0\", \"parent_metadata_hash\": \"0\"}, \"physical_schema\": \"sqlmesh\", \"parents\": [], \"created_ts\": 1680814464932, \"ttl\": \"in 1 week\", \"previous_versions\": [{\"fingerprint\": {\"data_hash\": \"1876476880\", \"metadata_hash\": \"570478986\", \"parent_data_hash\": \"0\", \"parent_metadata_hash\": \"0\"}, \"version\": \"2505706914\"}], \"version\": \"1204702829\", \"change_category\": 1, \"node\": {\"name\": \"sushi.waiter_names\", \"kind\": {\"name\": \"SEED\", \"path\": \"..\/seeds\/waiter_names.csv\", \"batch_size\": 5}, \"dialect\": \"duckdb\", \"cron\": \"@daily\", \"owner\": \"jen\", \"partitioned_by\": [], \"audits\": [], \"jinja_macros\": {\"packages\": {}, \"root_macros\": {}, \"global_objs\": {}}, \"seed\": {\"content\": \"id,name\\n0,Toby\\n1,Tyson\\n2,Ryan\\n3,George\\n4,Chris\\n5,Max\\n6,Vincent\\n7,Iaroslav\\n8,Emma\\n9,Maia\\n10,Jim\\n\"}, \"source_type\": \"seed\", \"project\": \"\", \"default_catalog\": null}, \"base_table_name_override\": \"sushi.waiter_names\"}","12":"{\"name\":\"\\\"sushi\\\".\\\"waiter_as_customer_by_day\\\"\",\"temp_version\":\"3668757715\",\"change_category\":4,\"fingerprint\":{\"data_hash\":\"1936268024\",\"metadata_hash\":\"2088684978\",\"parent_data_hash\":\"3055854652\",\"parent_metadata_hash\":\"665080906\"},\"previous_versions\":[{\"fingerprint\":{\"data_hash\":\"486172035\",\"metadata_hash\":\"1992853678\",\"parent_data_hash\":\"2154574190\",\"parent_metadata_hash\":\"1349779748\"},\"version\":\"1267397572\"},{\"fingerprint\":{\"data_hash\":\"486172035\",\"metadata_hash\":\"1992853678\",\"parent_data_hash\":\"2824767713\",\"parent_metadata_hash\":\"1349779748\"},\"version\":\"3668757715\",\"change_category\":4,\"physical_schema\":\"sqlmesh\"}],\"base_table_name_override\":\"sushi.waiter_as_customer_by_day\",\"physical_schema\":\"sqlmesh\",\"node\":{\"name\":\"sushi.waiter_as_customer_by_day\",\"project\":\"\",\"owner\":\"jen\",\"cron\":\"@daily\",\"tags\":[],\"dialect\":\"duckdb\",\"kind\":{\"name\":\"INCREMENTAL_BY_TIME_RANGE\",\"on_destructive_change\":\"ERROR\",\"dialect\":\"duckdb\",\"forward_only\":false,\"disable_restatement\":false,\"time_column\":{\"column\":\"ds\",\"format\":\"%Y-%m-%d\"}},\"partitioned_by\":[],\"clustered_by\":[],\"audits\":[[\"not_null\",{\"columns\":\"ARRAY(waiter_id)\"}]],\"grains\":[],\"references\":[],\"physical_properties\":\"('key' = 'value')\",\"allow_partials\":false,\"signals\":[],\"enabled\":true,\"python_env\":{},\"jinja_macros\":{\"packages\":{},\"root_macros\":{},\"global_objs\":{},\"create_builtins_module\":\"sqlmesh.utils.jinja\",\"top_level_packages\":[]},\"audit_definitions\":{},\"mapping_schema\":{},\"extract_dependencies_from_query\":true,\"query\":\"SELECT w.ds AS ds, w.waiter_id AS waiter_id, wn.name AS waiter_name FROM sushi.waiters AS w JOIN sushi.customers AS c ON w.waiter_id = c.customer_id JOIN sushi.waiter_names AS wn ON w.waiter_id = wn.id\",\"source_type\":\"sql\"},\"parents\":[{\"name\":\"\\\"sushi\\\".\\\"waiter_names\\\"\",\"identifier\":\"2725136291\"},{\"name\":\"\\\"sushi\\\".\\\"waiters\\\"\",\"identifier\":\"4123940212\"},{\"name\":\"\\\"sushi\\\".\\\"orders\\\"\",\"identifier\":\"1250207606\"},{\"name\":\"\\\"sushi\\\".\\\"customers\\\"\",\"identifier\":\"1461038955\"}],\"created_ts\":1680814464891,\"ttl\":\"in 1 week\",\"version\":\"3668757715\",\"migrated\":true}","13":"{\"name\":\"\\\"sushi\\\".\\\"waiter_names\\\"\",\"temp_version\":\"1204702829\",\"change_category\":1,\"fingerprint\":{\"data_hash\":\"1437406487\",\"metadata_hash\":\"3468846895\",\"parent_data_hash\":\"0\",\"parent_metadata_hash\":\"0\"},\"previous_versions\":[{\"fingerprint\":{\"data_hash\":\"1876476880\",\"metadata_hash\":\"570478986\",\"parent_data_hash\":\"0\",\"parent_metadata_hash\":\"0\"},\"version\":\"2505706914\"},{\"fingerprint\":{\"data_hash\":\"4133862560\",\"metadata_hash\":\"570478986\",\"parent_data_hash\":\"0\",\"parent_metadata_hash\":\"0\"},\"version\":\"1204702829\",\"change_category\":1,\"physical_schema\":\"sqlmesh\"}],\"base_table_name_override\":\"sushi.waiter_names\",\"physical_schema\":\"sqlmesh\",\"node\":{\"name\":\"sushi.waiter_names\",\"project\":\"\",\"owner\":\"jen\",\"cron\":\"@daily\",\"tags\":[],\"dialect\":\"duckdb\",\"kind\":{\"name\":\"SEED\",\"path\":\"..\/seeds\/waiter_names.csv\",\"batch_size\":5},\"partitioned_by\":[],\"clustered_by\":[],\"audits\":[],\"grains\":[],\"references\":[],\"allow_partials\":false,\"signals\":[],\"enabled\":true,\"python_env\":{},\"jinja_macros\":{\"packages\":{},\"root_macros\":{},\"global_objs\":{},\"create_builtins_module\":\"sqlmesh.utils.jinja\",\"top_level_packages\":[]},\"audit_definitions\":{},\"mapping_schema\":{},\"extract_dependencies_from_query\":true,\"seed\":{\"content\":\"\"},\"column_hashes\":{\"id\":\"3061821109\",\"name\":\"2706736258\"},\"derived_columns_to_types\":{\"id\":\"BIGINT\",\"name\":\"TEXT\"},\"is_hydrated\":false,\"source_type\":\"seed\"},\"parents\":[],\"created_ts\":1680814464932,\"ttl\":\"in 1 week\",\"version\":\"1204702829\",\"migrated\":true}","14":"{\"name\":\"\\\"sushi\\\".\\\"customer_revenue_by_day\\\"\",\"temp_version\":\"1291364031\",\"change_category\":4,\"fingerprint\":{\"data_hash\":\"131732542\",\"metadata_hash\":\"1368842087\",\"parent_data_hash\":\"2738168331\",\"parent_metadata_hash\":\"1795276494\"},\"previous_versions\":[{\"fingerprint\":{\"data_hash\":\"2657552867\",\"metadata_hash\":\"129771006\",\"parent_data_hash\":\"764310396\",\"parent_metadata_hash\":\"3147731239\"},\"version\":\"1291364031\",\"change_category\":4,\"physical_schema\":\"sqlmesh\"}],\"base_table_name_override\":\"sushi.customer_revenue_by_day\",\"physical_schema\":\"sqlmesh\",\"node\":{\"name\":\"sushi.customer_revenue_by_day\",\"project\":\"\",\"description\":\"Table of revenue from customers by day.\",\"owner\":\"jen\",\"cron\":\"@daily\",\"tags\":[],\"dialect\":\"hive\",\"kind\":{\"name\":\"INCREMENTAL_BY_TIME_RANGE\",\"on_destructive_change\":\"ERROR\",\"dialect\":\"hive\",\"batch_size\":10,\"forward_only\":false,\"disable_restatement\":false,\"time_column\":{\"column\":\"ds\",\"format\":\"%Y-%m-%d\"}},\"partitioned_by\":[],\"clustered_by\":[],\"audits\":[],\"grains\":[],\"references\":[],\"allow_partials\":false,\"signals\":[],\"enabled\":true,\"python_env\":{},\"jinja_macros\":{\"packages\":{},\"root_macros\":{},\"global_objs\":{},\"create_builtins_module\":\"sqlmesh.utils.jinja\",\"top_level_packages\":[]},\"audit_definitions\":{},\"mapping_schema\":{},\"extract_dependencies_from_query\":true,\"query\":\"JINJA_QUERY_BEGIN;\\nWITH order_total AS (SELECT oi.order_id AS order_id, SUM(oi.quantity * i.price) AS total, oi.ds AS ds FROM sushi.order_items AS oi LEFT JOIN sushi.items AS i ON oi.item_id = i.id AND oi.ds = i.ds WHERE oi.ds BETWEEN '{{ start_ds }}' AND '{{ end_ds }}' GROUP BY oi.order_id, oi.ds) SELECT CAST(o.customer_id AS INT) AS customer_id \/* Customer id *\/, CAST(SUM(ot.total) AS DOUBLE) AS revenue \/* Revenue from orders made by this customer *\/, CAST(o.ds AS TEXT) AS ds \/* Date *\/ FROM sushi.orders AS o LEFT JOIN order_total AS ot ON o.id = ot.order_id AND o.ds = ot.ds WHERE o.ds BETWEEN '{{ start_ds }}' AND '{{ end_ds }}' GROUP BY o.customer_id, o.ds\\nJINJA_END\",\"source_type\":\"sql\"},\"parents\":[{\"name\":\"\\\"sushi\\\".\\\"items\\\"\",\"identifier\":\"3721860967\"},{\"name\":\"\\\"sushi\\\".\\\"orders\\\"\",\"identifier\":\"1250207606\"},{\"name\":\"\\\"sushi\\\".\\\"order_items\\\"\",\"identifier\":\"1422946820\"}],\"created_ts\":1680814376391,\"ttl\":\"in 1 week\",\"version\":\"1291364031\",\"migrated\":true}","15":"{\"name\":\"\\\"sushi\\\".\\\"top_waiters\\\"\",\"temp_version\":\"3010914162\",\"change_category\":4,\"fingerprint\":{\"data_hash\":\"4131026946\",\"metadata_hash\":\"154190563\",\"parent_data_hash\":\"929243525\",\"parent_metadata_hash\":\"2366450878\"},\"previous_versions\":[{\"fingerprint\":{\"data_hash\":\"2891807529\",\"metadata_hash\":\"3392493998\",\"parent_data_hash\":\"1940707936\",\"parent_metadata_hash\":\"1276363398\"},\"version\":\"3010914162\",\"change_category\":4,\"physical_schema\":\"sqlmesh\"}],\"base_table_name_override\":\"sushi.top_waiters\",\"physical_schema\":\"sqlmesh\",\"node\":{\"name\":\"sushi.top_waiters\",\"project\":\"\",\"description\":\"View of top waiters.\",\"owner\":\"jen\",\"cron\":\"@daily\",\"tags\":[],\"dialect\":\"duckdb\",\"kind\":{\"name\":\"VIEW\",\"materialized\":false},\"partitioned_by\":[],\"clustered_by\":[],\"audits\":[[\"unique_values\",{\"columns\":\"ARRAY(waiter_id)\"}]],\"grains\":[],\"references\":[],\"allow_partials\":false,\"signals\":[],\"enabled\":true,\"python_env\":{},\"jinja_macros\":{\"packages\":{},\"root_macros\":{},\"global_objs\":{},\"create_builtins_module\":\"sqlmesh.utils.jinja\",\"top_level_packages\":[]},\"audit_definitions\":{},\"mapping_schema\":{},\"extract_dependencies_from_query\":true,\"query\":\"SELECT CAST(waiter_id AS INT) AS waiter_id, CAST(revenue AS DOUBLE) AS revenue FROM sushi.waiter_revenue_by_day WHERE ds = (SELECT MAX(ds) FROM sushi.waiter_revenue_by_day) ORDER BY revenue DESC LIMIT 10\",\"source_type\":\"sql\"},\"parents\":[{\"name\":\"\\\"sushi\\\".\\\"waiter_revenue_by_day\\\"\",\"identifier\":\"2175947464\"}],\"created_ts\":1680814376384,\"ttl\":\"in 1 week\",\"version\":\"3010914162\",\"migrated\":true}","16":"{\"name\":\"\\\"sushi\\\".\\\"waiter_revenue_by_day\\\"\",\"temp_version\":\"2695875565\",\"change_category\":4,\"fingerprint\":{\"data_hash\":\"2224089837\",\"metadata_hash\":\"2504236462\",\"parent_data_hash\":\"2738168331\",\"parent_metadata_hash\":\"1795276494\"},\"previous_versions\":[{\"fingerprint\":{\"data_hash\":\"2443934302\",\"metadata_hash\":\"2904050331\",\"parent_data_hash\":\"764310396\",\"parent_metadata_hash\":\"3147731239\"},\"version\":\"2695875565\",\"change_category\":4,\"physical_schema\":\"sqlmesh\"}],\"base_table_name_override\":\"sushi.waiter_revenue_by_day\",\"physical_schema\":\"sqlmesh\",\"node\":{\"name\":\"sushi.waiter_revenue_by_day\",\"project\":\"\",\"description\":\"Table of revenue generated by waiters by day.\",\"owner\":\"jen\",\"cron\":\"@daily\",\"tags\":[],\"dialect\":\"duckdb\",\"kind\":{\"name\":\"INCREMENTAL_BY_TIME_RANGE\",\"on_destructive_change\":\"ERROR\",\"dialect\":\"duckdb\",\"batch_size\":10,\"forward_only\":false,\"disable_restatement\":false,\"time_column\":{\"column\":\"ds\",\"format\":\"%Y-%m-%d\"}},\"partitioned_by\":[],\"clustered_by\":[],\"audits\":[[\"number_of_rows\",{\"threshold\":\"0\"}]],\"grains\":[],\"references\":[],\"allow_partials\":false,\"signals\":[],\"enabled\":true,\"python_env\":{},\"jinja_macros\":{\"packages\":{},\"root_macros\":{},\"global_objs\":{},\"create_builtins_module\":\"sqlmesh.utils.jinja\",\"top_level_packages\":[]},\"audit_definitions\":{},\"mapping_schema\":{},\"extract_dependencies_from_query\":true,\"query\":\"SELECT CAST(o.waiter_id AS INT) AS waiter_id \/* Waiter id *\/, CAST(SUM(oi.quantity * i.price) AS DOUBLE) AS revenue \/* Revenue from orders taken by this waiter *\/, CAST(o.ds AS TEXT) AS ds \/* Date *\/ FROM sushi.orders AS o LEFT JOIN sushi.order_items AS oi ON o.id = oi.order_id AND o.ds = oi.ds LEFT JOIN sushi.items AS i ON oi.item_id = i.id AND oi.ds = i.ds WHERE o.ds BETWEEN @start_ds AND @end_ds GROUP BY o.waiter_id, o.ds\",\"source_type\":\"sql\"},\"parents\":[{\"name\":\"\\\"sushi\\\".\\\"items\\\"\",\"identifier\":\"3721860967\"},{\"name\":\"\\\"sushi\\\".\\\"orders\\\"\",\"identifier\":\"1250207606\"},{\"name\":\"\\\"sushi\\\".\\\"order_items\\\"\",\"identifier\":\"1422946820\"}],\"created_ts\":1680814376361,\"ttl\":\"in 1 week\",\"version\":\"2695875565\",\"migrated\":true}","17":"{\"name\":\"\\\"sushi\\\".\\\"order_items\\\"\",\"temp_version\":\"1015284155\",\"change_category\":4,\"fingerprint\":{\"data_hash\":\"4010068827\",\"metadata_hash\":\"799196655\",\"parent_data_hash\":\"2342431947\",\"parent_metadata_hash\":\"1746080605\"},\"previous_versions\":[{\"fingerprint\":{\"data_hash\":\"653664599\",\"metadata_hash\":\"1960934702\",\"parent_data_hash\":\"3170724558\",\"parent_metadata_hash\":\"867324801\"},\"version\":\"1015284155\",\"change_category\":4,\"physical_schema\":\"sqlmesh\"}],\"base_table_name_override\":\"sushi.order_items\",\"physical_schema\":\"sqlmesh\",\"node\":{\"name\":\"sushi.order_items\",\"project\":\"\",\"cron\":\"@daily\",\"tags\":[],\"dialect\":\"\",\"kind\":{\"name\":\"INCREMENTAL_BY_TIME_RANGE\",\"on_destructive_change\":\"ERROR\",\"dialect\":\"\",\"batch_size\":30,\"forward_only\":false,\"disable_restatement\":false,\"time_column\":{\"column\":\"ds\",\"format\":\"%Y-%m-%d\"}},\"partitioned_by\":[],\"clustered_by\":[],\"depends_on\":[\"\\\"sushi\\\".\\\"items\\\"\",\"\\\"sushi\\\".\\\"orders\\\"\"],\"columns\":{\"id\":\"INT\",\"order_id\":\"INT\",\"item_id\":\"INT\",\"quantity\":\"INT\",\"ds\":\"TEXT\"},\"audits\":[[\"not_null\",{\"columns\":\"ARRAY(id, order_id, item_id, quantity)\"}],[\"assert_order_items_quantity_exceeds_threshold\",{\"quantity\":\"0\"}]],\"grains\":[],\"references\":[],\"allow_partials\":false,\"signals\":[],\"enabled\":true,\"python_env\":{\"execute\":{\"payload\":\"def execute(context, start, end, latest, **kwargs):\\n    orders_table = context.table('sushi.orders')\\n    items_table = context.table(ITEMS)\\n    for dt in iter_dates(start, end):\\n        orders = context.fetchdf(\\n            f\\\"\\\"\\\"\\n            SELECT *\\n            FROM {orders_table}\\n            WHERE ds = '{to_ds(dt)}'\\n            \\\"\\\"\\\"\\n            )\\n        items = context.fetchdf(\\n            f\\\"\\\"\\\"\\n            SELECT *\\n            FROM {items_table}\\n            WHERE ds = '{to_ds(dt)}'\\n            \\\"\\\"\\\"\\n            )\\n        for order_id in orders['id']:\\n            n = random.randint(1, 5)\\n            yield pd.DataFrame({'order_id': order_id, 'item_id': items.\\n                sample(n=n)['id'], 'quantity': np.random.randint(1, 10, n),\\n                'ds': to_ds(dt)}).reset_index().rename(columns={'index': 'id'})\",\"kind\":\"definition\",\"name\":\"execute\",\"path\":\"models\/order_items.py\"},\"ITEMS\":{\"payload\":\"'sushi.items'\",\"kind\":\"value\"},\"iter_dates\":{\"payload\":\"def iter_dates(start, end):\\n    for i in range((end - start).days + 1):\\n        dt = start + timedelta(days=i)\\n        set_seed(dt)\\n        yield dt\",\"kind\":\"definition\",\"name\":\"iter_dates\",\"path\":\"helper.py\"},\"timedelta\":{\"payload\":\"from datetime import timedelta\",\"kind\":\"import\"},\"set_seed\":{\"payload\":\"def set_seed(dt):\\n    ts = int(dt.timestamp())\\n    random.seed(ts)\\n    np.random.seed(ts)\",\"kind\":\"definition\",\"name\":\"set_seed\",\"path\":\"helper.py\"},\"random\":{\"payload\":\"import random\",\"kind\":\"import\"},\"np\":{\"payload\":\"import numpy as np\",\"kind\":\"import\"},\"to_ds\":{\"payload\":\"from sqlmesh.utils.date import to_ds\",\"kind\":\"import\"},\"pd\":{\"payload\":\"import pandas as pd\",\"kind\":\"import\"}},\"jinja_macros\":{\"packages\":{},\"root_macros\":{},\"global_objs\":{},\"create_builtins_module\":\"sqlmesh.utils.jinja\",\"top_level_packages\":[]},\"audit_definitions\":{\"assert_order_items_quantity_exceeds_threshold\":{\"name\":\"assert_order_items_quantity_exceeds_threshold\",\"dialect\":\"\",\"skip\":false,\"blocking\":true,\"standalone\":false,\"query\":\"SELECT * FROM @this_model WHERE quantity <= @quantity\",\"defaults\":{},\"expressions\":[],\"jinja_macros\":{\"packages\":{},\"root_macros\":{},\"global_objs\":{},\"create_builtins_module\":\"sqlmesh.utils.jinja\",\"top_level_packages\":[]}}},\"mapping_schema\":{},\"extract_dependencies_from_query\":true,\"entrypoint\":\"execute\",\"source_type\":\"python\"},\"parents\":[{\"name\":\"\\\"sushi\\\".\\\"items\\\"\",\"identifier\":\"3721860967\"},{\"name\":\"\\\"sushi\\\".\\\"orders\\\"\",\"identifier\":\"1250207606\"}],\"created_ts\":1680814376401,\"ttl\":\"in 1 week\",\"version\":\"1015284155\",\"migrated\":true}","18":"{\"name\":\"\\\"sushi\\\".\\\"items\\\"\",\"temp_version\":\"312608270\",\"change_category\":4,\"fingerprint\":{\"data_hash\":\"1862622614\",\"metadata_hash\":\"3651173237\",\"parent_data_hash\":\"0\",\"parent_metadata_hash\":\"0\"},\"previous_versions\":[{\"fingerprint\":{\"data_hash\":\"1960378930\",\"metadata_hash\":\"2900807542\",\"parent_data_hash\":\"0\",\"parent_metadata_hash\":\"0\"},\"version\":\"312608270\",\"change_category\":4,\"physical_schema\":\"sqlmesh\"}],\"base_table_name_override\":\"sushi.items\",\"physical_schema\":\"sqlmesh\",\"node\":{\"name\":\"sushi.items\",\"project\":\"\",\"start\":\"Jan 1 2022\",\"cron\":\"@daily\",\"tags\":[],\"dialect\":\"\",\"kind\":{\"name\":\"INCREMENTAL_BY_TIME_RANGE\",\"on_destructive_change\":\"ERROR\",\"dialect\":\"\",\"batch_size\":30,\"forward_only\":false,\"disable_restatement\":false,\"time_column\":{\"column\":\"ds\",\"format\":\"%Y-%m-%d\"}},\"partitioned_by\":[],\"clustered_by\":[],\"depends_on\":[],\"columns\":{\"id\":\"INT\",\"name\":\"TEXT\",\"price\":\"DOUBLE\",\"ds\":\"TEXT\"},\"audits\":[[\"accepted_values\",{\"column\":\"name\",\"values\":\"ARRAY('Ahi', 'Aji', 'Amaebi', 'Anago', 'Aoyagi', 'Bincho', 'Katsuo', 'Ebi', 'Escolar', 'Hamachi', 'Hamachi Toro', 'Hirame', 'Hokigai', 'Hotate', 'Ika', 'Ikura', 'Iwashi', 'Kani', 'Kanpachi', 'Maguro', 'Saba', 'Sake', 'Sake Toro', 'Tai', 'Tako', 'Tamago', 'Tobiko', 'Toro', 'Tsubugai', 'Umi Masu', 'Unagi', 'Uni')\"}],[\"not_null\",{\"columns\":\"ARRAY(name, price)\"}],[\"assert_items_price_exceeds_threshold\",{\"price\":\"0\"}]],\"grains\":[],\"references\":[],\"allow_partials\":false,\"signals\":[],\"enabled\":true,\"python_env\":{\"execute\":{\"payload\":\"def execute(context, start, end, latest, **kwargs):\\n    dfs = []\\n    for dt in iter_dates(start, end):\\n        num_items = random.randint(10, len(ITEMS))\\n        dfs.append(pd.DataFrame({'name': random.sample(ITEMS, num_items),\\n            'price': np.random.uniform(3.0, 10.0, size=num_items).round(2),\\n            'ds': to_ds(dt)}).reset_index().rename(columns={'index': 'id'}))\\n    return pd.concat(dfs)\",\"kind\":\"definition\",\"name\":\"execute\",\"path\":\"models\/items.py\"},\"iter_dates\":{\"payload\":\"def iter_dates(start, end):\\n    for i in range((end - start).days + 1):\\n        dt = start + timedelta(days=i)\\n        set_seed(dt)\\n        yield dt\",\"kind\":\"definition\",\"name\":\"iter_dates\",\"path\":\"helper.py\"},\"timedelta\":{\"payload\":\"from datetime import timedelta\",\"kind\":\"import\"},\"set_seed\":{\"payload\":\"def set_seed(dt):\\n    ts = int(dt.timestamp())\\n    random.seed(ts)\\n    np.random.seed(ts)\",\"kind\":\"definition\",\"name\":\"set_seed\",\"path\":\"helper.py\"},\"random\":{\"payload\":\"import random\",\"kind\":\"import\"},\"np\":{\"payload\":\"import numpy as np\",\"kind\":\"import\"},\"ITEMS\":{\"payload\":\"['Ahi', 'Aji', 'Amaebi', 'Anago', 'Aoyagi', 'Bincho', 'Katsuo', 'Ebi', 'Escolar', 'Hamachi', 'Hamachi Toro', 'Hirame', 'Hokigai', 'Hotate', 'Ika', 'Ikura', 'Iwashi', 'Kani', 'Kanpachi', 'Maguro', 'Saba', 'Sake', 'Sake Toro', 'Tai', 'Tako', 'Tamago', 'Tobiko', 'Toro', 'Tsubugai', 'Umi Masu', 'Unagi', 'Uni']\",\"kind\":\"value\"},\"pd\":{\"payload\":\"import pandas as pd\",\"kind\":\"import\"},\"to_ds\":{\"payload\":\"from sqlmesh.utils.date import to_ds\",\"kind\":\"import\"}},\"jinja_macros\":{\"packages\":{},\"root_macros\":{},\"global_objs\":{},\"create_builtins_module\":\"sqlmesh.utils.jinja\",\"top_level_packages\":[]},\"audit_definitions\":{\"assert_items_price_exceeds_threshold\":{\"name\":\"assert_items_price_exceeds_threshold\",\"dialect\":\"\",\"skip\":false,\"blocking\":true,\"standalone\":false,\"query\":\"SELECT * FROM @this_model WHERE price <= @price\",\"defaults\":{},\"expressions\":[],\"jinja_macros\":{\"packages\":{},\"root_macros\":{},\"global_objs\":{},\"create_builtins_module\":\"sqlmesh.utils.jinja\",\"top_level_packages\":[]}}},\"mapping_schema\":{},\"extract_dependencies_from_query\":true,\"entrypoint\":\"execute\",\"source_type\":\"python\"},\"parents\":[],\"created_ts\":1680814376399,\"ttl\":\"in 1 week\",\"version\":\"312608270\",\"migrated\":true}","19":"{\"name\":\"\\\"sushi\\\".\\\"waiter_as_customer_by_day\\\"\",\"temp_version\":\"1267397572\",\"change_category\":4,\"fingerprint\":{\"data_hash\":\"849558693\",\"metadata_hash\":\"2088684978\",\"parent_data_hash\":\"2705906012\",\"parent_metadata_hash\":\"665080906\"},\"previous_versions\":[{\"fingerprint\":{\"data_hash\":\"486172035\",\"metadata_hash\":\"1992853678\",\"parent_data_hash\":\"2154574190\",\"parent_metadata_hash\":\"1349779748\"},\"version\":\"1267397572\",\"change_category\":4,\"physical_schema\":\"sqlmesh\"}],\"base_table_name_override\":\"sushi.waiter_as_customer_by_day\",\"physical_schema\":\"sqlmesh\",\"node\":{\"name\":\"sushi.waiter_as_customer_by_day\",\"project\":\"\",\"owner\":\"jen\",\"cron\":\"@daily\",\"tags\":[],\"dialect\":\"duckdb\",\"kind\":{\"name\":\"INCREMENTAL_BY_TIME_RANGE\",\"on_destructive_change\":\"ERROR\",\"dialect\":\"duckdb\",\"forward_only\":false,\"disable_restatement\":false,\"time_column\":{\"column\":\"ds\",\"format\":\"%Y-%m-%d\"}},\"partitioned_by\":[],\"clustered_by\":[],\"audits\":[[\"not_null\",{\"columns\":\"ARRAY(waiter_id)\"}]],\"grains\":[],\"references\":[],\"allow_partials\":false,\"signals\":[],\"enabled\":true,\"python_env\":{},\"jinja_macros\":{\"packages\":{},\"root_macros\":{},\"global_objs\":{},\"create_builtins_module\":\"sqlmesh.utils.jinja\",\"top_level_packages\":[]},\"audit_definitions\":{},\"mapping_schema\":{},\"extract_dependencies_from_query\":true,\"query\":\"SELECT w.ds AS ds, w.waiter_id AS waiter_id, wn.name AS waiter_name FROM sushi.waiters AS w JOIN sushi.customers AS c ON w.waiter_id = c.customer_id JOIN sushi.waiter_names AS wn ON w.waiter_id = wn.id\",\"source_type\":\"sql\"},\"parents\":[{\"name\":\"\\\"sushi\\\".\\\"waiter_names\\\"\",\"identifier\":\"1609854746\"},{\"name\":\"\\\"sushi\\\".\\\"waiters\\\"\",\"identifier\":\"4123940212\"},{\"name\":\"\\\"sushi\\\".\\\"orders\\\"\",\"identifier\":\"1250207606\"},{\"name\":\"\\\"sushi\\\".\\\"customers\\\"\",\"identifier\":\"1461038955\"}],\"created_ts\":1680814376348,\"ttl\":\"in 1 week\",\"version\":\"1267397572\",\"migrated\":true}","20":"{\"name\":\"\\\"sushi\\\".\\\"waiter_names\\\"\",\"temp_version\":\"2505706914\",\"change_category\":4,\"fingerprint\":{\"data_hash\":\"3604872020\",\"metadata_hash\":\"3468846895\",\"parent_data_hash\":\"0\",\"parent_metadata_hash\":\"0\"},\"previous_versions\":[{\"fingerprint\":{\"data_hash\":\"1876476880\",\"metadata_hash\":\"570478986\",\"parent_data_hash\":\"0\",\"parent_metadata_hash\":\"0\"},\"version\":\"2505706914\",\"change_category\":4,\"physical_schema\":\"sqlmesh\"}],\"base_table_name_override\":\"sushi.waiter_names\",\"physical_schema\":\"sqlmesh\",\"node\":{\"name\":\"sushi.waiter_names\",\"project\":\"\",\"owner\":\"jen\",\"cron\":\"@daily\",\"tags\":[],\"dialect\":\"duckdb\",\"kind\":{\"name\":\"SEED\",\"path\":\"..\/seeds\/waiter_names.csv\",\"batch_size\":5},\"partitioned_by\":[],\"clustered_by\":[],\"audits\":[],\"grains\":[],\"references\":[],\"allow_partials\":false,\"signals\":[],\"enabled\":true,\"python_env\":{},\"jinja_macros\":{\"packages\":{},\"root_macros\":{},\"global_objs\":{},\"create_builtins_module\":\"sqlmesh.utils.jinja\",\"top_level_packages\":[]},\"audit_definitions\":{},\"mapping_schema\":{},\"extract_dependencies_from_query\":true,\"seed\":{\"content\":\"\"},\"column_hashes\":{\"id\":\"3679804453\",\"name\":\"537745575\"},\"derived_columns_to_types\":{\"id\":\"BIGINT\",\"name\":\"TEXT\"},\"is_hydrated\":false,\"source_type\":\"seed\"},\"parents\":[],\"created_ts\":1680814376389,\"ttl\":\"in 1 week\",\"version\":\"2505706914\",\"migrated\":true}","21":"{\"name\":\"\\\"sushi\\\".\\\"customers\\\"\",\"temp_version\":\"2359719298\",\"change_category\":4,\"fingerprint\":{\"data_hash\":\"2431070412\",\"metadata_hash\":\"3063653103\",\"parent_data_hash\":\"458609840\",\"parent_metadata_hash\":\"2007040660\"},\"previous_versions\":[{\"fingerprint\":{\"data_hash\":\"3553985282\",\"metadata_hash\":\"570478986\",\"parent_data_hash\":\"777615193\",\"parent_metadata_hash\":\"2042613269\"},\"version\":\"2359719298\",\"change_category\":4,\"physical_schema\":\"sqlmesh\"}],\"base_table_name_override\":\"sushi.customers\",\"physical_schema\":\"sqlmesh\",\"node\":{\"name\":\"sushi.customers\",\"project\":\"\",\"owner\":\"jen\",\"cron\":\"@daily\",\"tags\":[],\"dialect\":\"duckdb\",\"kind\":{\"name\":\"FULL\"},\"partitioned_by\":[],\"clustered_by\":[],\"audits\":[],\"grains\":[],\"references\":[],\"allow_partials\":false,\"signals\":[],\"enabled\":true,\"python_env\":{\"noop\":{\"payload\":\"def noop(context, start, end, latest, **kwargs):\\n    pass\",\"kind\":\"definition\",\"name\":\"noop\",\"path\":\"hooks\/hooks.py\"}},\"jinja_macros\":{\"packages\":{},\"root_macros\":{},\"global_objs\":{},\"create_builtins_module\":\"sqlmesh.utils.jinja\",\"top_level_packages\":[]},\"audit_definitions\":{},\"mapping_schema\":{},\"extract_dependencies_from_query\":true,\"query\":\"SELECT DISTINCT CAST(customer_id AS INT) AS customer_id FROM sushi.orders AS o\",\"source_type\":\"sql\"},\"parents\":[{\"name\":\"\\\"sushi\\\".\\\"orders\\\"\",\"identifier\":\"1250207606\"}],\"created_ts\":1680814376388,\"ttl\":\"in 1 week\",\"version\":\"2359719298\",\"migrated\":true}","22":"{\"name\":\"\\\"sushi\\\".\\\"waiters\\\"\",\"temp_version\":\"2059227798\",\"change_category\":4,\"fingerprint\":{\"data_hash\":\"2037801255\",\"metadata_hash\":\"3063653103\",\"parent_data_hash\":\"458609840\",\"parent_metadata_hash\":\"2007040660\"},\"previous_versions\":[{\"fingerprint\":{\"data_hash\":\"3501061139\",\"metadata_hash\":\"570478986\",\"parent_data_hash\":\"777615193\",\"parent_metadata_hash\":\"2042613269\"},\"version\":\"2059227798\",\"change_category\":4,\"physical_schema\":\"sqlmesh\"}],\"base_table_name_override\":\"sushi.waiters\",\"physical_schema\":\"sqlmesh\",\"node\":{\"name\":\"sushi.waiters\",\"project\":\"\",\"owner\":\"jen\",\"cron\":\"@daily\",\"tags\":[],\"dialect\":\"duckdb\",\"kind\":{\"name\":\"EMBEDDED\",\"disable_restatement\":true},\"partitioned_by\":[],\"clustered_by\":[],\"audits\":[],\"grains\":[],\"references\":[],\"allow_partials\":false,\"signals\":[],\"enabled\":true,\"python_env\":{\"incremental_by_ds\":{\"payload\":\"def incremental_by_ds(evaluator, column):\\n    expression = evaluator.transform(exp.Between(this=column, low=MacroVar(\\n        this='start_ds'), high=MacroVar(this='end_ds')))\\n    if not isinstance(expression, exp.Expression):\\n        raise MacroEvalError(\\n            f'Return type is {type(expression)}, expected exp.Expression')\\n    return expression\",\"kind\":\"definition\",\"name\":\"incremental_by_ds\",\"path\":\"macros\/macros.py\"},\"exp\":{\"payload\":\"import sqlglot.expressions as exp\",\"kind\":\"import\"},\"MacroVar\":{\"payload\":\"from sqlmesh.core.dialect import MacroVar\",\"kind\":\"import\"},\"MacroEvalError\":{\"payload\":\"from sqlmesh.utils.errors import MacroEvalError\",\"kind\":\"import\"}},\"jinja_macros\":{\"packages\":{},\"root_macros\":{},\"global_objs\":{},\"create_builtins_module\":\"sqlmesh.utils.jinja\",\"top_level_packages\":[]},\"audit_definitions\":{},\"mapping_schema\":{},\"extract_dependencies_from_query\":true,\"query\":\"SELECT DISTINCT CAST(waiter_id AS INT) AS waiter_id, CAST(ds AS TEXT) AS ds FROM sushi.orders AS o WHERE @incremental_by_ds(ds)\",\"source_type\":\"sql\"},\"parents\":[{\"name\":\"\\\"sushi\\\".\\\"orders\\\"\",\"identifier\":\"1250207606\"}],\"created_ts\":1680814376387,\"ttl\":\"in 1 week\",\"version\":\"2059227798\",\"migrated\":true}","23":"{\"name\":\"\\\"sushi\\\".\\\"orders\\\"\",\"temp_version\":\"925846788\",\"change_category\":4,\"fingerprint\":{\"data_hash\":\"1588786367\",\"metadata_hash\":\"1674367104\",\"parent_data_hash\":\"0\",\"parent_metadata_hash\":\"0\"},\"previous_versions\":[{\"fingerprint\":{\"data_hash\":\"1628439771\",\"metadata_hash\":\"2745052130\",\"parent_data_hash\":\"0\",\"parent_metadata_hash\":\"0\"},\"version\":\"925846788\",\"change_category\":4,\"physical_schema\":\"sqlmesh\"}],\"base_table_name_override\":\"sushi.orders\",\"physical_schema\":\"sqlmesh\",\"node\":{\"name\":\"sushi.orders\",\"project\":\"\",\"description\":\"Table of sushi orders.\",\"start\":\"2022-01-01\",\"cron\":\"@daily\",\"tags\":[],\"dialect\":\"\",\"kind\":{\"name\":\"INCREMENTAL_BY_TIME_RANGE\",\"on_destructive_change\":\"ERROR\",\"dialect\":\"\",\"batch_size\":30,\"forward_only\":false,\"disable_restatement\":false,\"time_column\":{\"column\":\"ds\",\"format\":\"%Y-%m-%d\"}},\"partitioned_by\":[],\"clustered_by\":[],\"depends_on\":[],\"columns\":{\"id\":\"INT\",\"customer_id\":\"INT\",\"waiter_id\":\"INT\",\"start_ts\":\"INT\",\"end_ts\":\"INT\",\"ds\":\"TEXT\"},\"audits\":[],\"grains\":[],\"references\":[],\"allow_partials\":false,\"signals\":[],\"enabled\":true,\"python_env\":{\"execute\":{\"payload\":\"def execute(context, start, end, latest, **kwargs):\\n    dfs = []\\n    for dt in iter_dates(start, end):\\n        num_orders = random.randint(10, 30)\\n        start_ts = [int((dt + timedelta(seconds=random.randint(0, 80000))).\\n            timestamp()) for _ in range(num_orders)]\\n        end_ts = [int(s + random.randint(0, 60 * 60)) for s in start_ts]\\n        dfs.append(pd.DataFrame({'customer_id': random.choices(CUSTOMERS, k\\n            =num_orders), 'waiter_id': random.choices(WAITERS, k=num_orders\\n            ), 'start_ts': start_ts, 'end_ts': end_ts, 'ds': to_ds(dt)}).\\n            reset_index().rename(columns={'index': 'id'}))\\n    return pd.concat(dfs)\",\"kind\":\"definition\",\"name\":\"execute\",\"path\":\"models\/orders.py\"},\"iter_dates\":{\"payload\":\"def iter_dates(start, end):\\n    for i in range((end - start).days + 1):\\n        dt = start + timedelta(days=i)\\n        set_seed(dt)\\n        yield dt\",\"kind\":\"definition\",\"name\":\"iter_dates\",\"path\":\"helper.py\"},\"timedelta\":{\"payload\":\"from datetime import timedelta\",\"kind\":\"import\"},\"set_seed\":{\"payload\":\"def set_seed(dt):\\n    ts = int(dt.timestamp())\\n    random.seed(ts)\\n    np.random.seed(ts)\",\"kind\":\"definition\",\"name\":\"set_seed\",\"path\":\"helper.py\"},\"random\":{\"payload\":\"import random\",\"kind\":\"import\"},\"np\":{\"payload\":\"import numpy as np\",\"kind\":\"import\"},\"pd\":{\"payload\":\"import pandas as pd\",\"kind\":\"import\"},\"CUSTOMERS\":{\"payload\":\"[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]\",\"kind\":\"value\"},\"WAITERS\":{\"payload\":\"[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\",\"kind\":\"value\"},\"to_ds\":{\"payload\":\"from sqlmesh.utils.date import to_ds\",\"kind\":\"import\"}},\"jinja_macros\":{\"packages\":{},\"root_macros\":{},\"global_objs\":{},\"create_builtins_module\":\"sqlmesh.utils.jinja\",\"top_level_packages\":[]},\"audit_definitions\":{},\"mapping_schema\":{},\"extract_dependencies_from_query\":true,\"entrypoint\":\"execute\",\"source_type\":\"python\"},\"parents\":[],\"created_ts\":1680814376402,\"ttl\":\"in 1 week\",\"version\":\"925846788\",\"migrated\":true}"},"kind_name":{"0":"INCREMENTAL_BY_TIME_RANGE","1":"INCREMENTAL_BY_TIME_RANGE","2":"VIEW","3":"EMBEDDED","4":"FULL","5":"SEED","6":"INCREMENTAL_BY_TIME_RANGE","7":"INCREMENTAL_BY_TIME_RANGE","8":"INCREMENTAL_BY_TIME_RANGE","9":"INCREMENTAL_BY_TIME_RANGE","10":"INCREMENTAL_BY_TIME_RANGE","11":"SEED","12":"INCREMENTAL_BY_TIME_RANGE","13":"SEED","14":"INCREMENTAL_BY_TIME_RANGE","15":"VIEW","16":"INCREMENTAL_BY_TIME_RANGE","17":"INCREMENTAL_BY_TIME_RANGE","18":"INCREMENTAL_BY_TIME_RANGE","19":"INCREMENTAL_BY_TIME_RANGE","20":"SEED","21":"FULL","22":"EMBEDDED","23":"INCREMENTAL_BY_TIME_RANGE"},"updated_ts":{"0":1680814376348,"1":1680814376361,"2":1680814376384,"3":1680814376387,"4":1680814376388,"5":1680814376389,"6":1680814376391,"7":1680814376399,"8":1680814376401,"9":1680814376402,"10":1680814464891,"11":1680814464932,"12":1680814464891,"13":1680814464932,"14":1680814376391,"15":1680814376384,"16":1680814376361,"17":1680814376401,"18":1680814376399,"19":1680814376348,"20":1680814376389,"21":1680814376388,"22":1680814376387,"23":1680814376402},"unpaused_ts":{"0":null,"1":null,"2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":null,"14":null,"15":null,"16":null,"17":null,"18":null,"19":null,"20":null,"21":null,"22":null,"23":null},"ttl_ms":{"0":604800000,"1":604800000,"2":604800000,"3":604800000,"4":604800000,"5":604800000,"6":604800000,"7":604800000,"8":604800000,"9":604800000,"10":604800000,"11":604800000,"12":604800000,"13":604800000,"14":604800000,"15":604800000,"16":604800000,"17":604800000,"18":604800000,"19":604800000,"20":604800000,"21":604800000,"22":604800000,"23":604800000},"unrestorable":{"0":false,"1":false,"2":false,"3":false,"4":false,"5":false,"6":false,"7":false,"8":false,"9":false,"10":false,"11":false,"12":false,"13":false,"14":false,"15":false,"16":false,"17":false,"18":false,"19":false,"20":false,"21":false,"22":false,"23":false}}