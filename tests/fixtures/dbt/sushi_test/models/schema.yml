version: 2

models:
  - name: simple_model_a
    description: A simple model for testing
    columns:
      - name: a
        data_type: int
    unit_tests:
      - name: test_simple_model_a_outputs_one
        description: Test that simple_model_a outputs 1 as column a
        model: simple_model_a
        given: []  # No input models needed
        expect:
          format: csv
          rows: |
            a
            1
  - name: simple_model_b
    description: Model that references simple_model_a
    columns:
      - name: a
        data_type: int
    unit_tests:
      - name: test_simple_model_b_with_mock_input
        description: Test simple_model_b with mocked simple_model_a input
        model: simple_model_b
        given:
          - input: ref('simple_model_a')
            format: csv
            rows: |
              a
              10
              20
              30
        expect:
          format: csv
          rows: |
            a
            10
            20
            30
      - name: test_simple_model_b_with_sql_input
        description: Test simple_model_b with SQL-defined input data
        model: simple_model_b
        given:
          - input: ref('simple_model_a')
            format: sql
            rows: SELECT 42 AS a
        expect:
          format: sql
          rows: SELECT 42 AS a
  - name: top_waiters
    description: description of top waiters
    columns:
      - name: waiter_id
        data_type: int
      - name: revenue
        data_type: double
      - name: model_columns
        data_type: int
    freshness:
      warn_after: {count: 6, period: hour}
      error_after: {count: 7, period: hour}
    config:
      dialect: postgres
      freshness:
        warn_after: {count: 8, period: hour}
        error_after: {count: 9, period: hour}
  - name: waiters
    description: '{{ doc("waiters") }}'
    config:
      # Exercise pre and post hooks
      pre_hook:
        - SELECT 1 
      post_hook: 
        - SELECT 1 
  - name: waiter_as_customer_by_day
  - name: waiter_revenue_by_day
    versions:
      - v: 1
      - v: 2
  - name: disabled_model
    columns:
      - name: one
        tests:
          - not_null

sources:
  - name: streaming
    schema: raw
    tables:
      - name: items
      - name: orders
      - name: order_items
    freshness:
      warn_after: {count: 10, period: hour}
      error_after: {count: 11, period: hour}
    config:
      freshness:
        warn_after: {count: 12, period: hour}
        error_after: {count: 13, period: hour}

  - name: parquet_file
    meta:
      external_location: "read_parquet('path/to/external/{name}.parquet')"
    tables:
      - name: items
      - name: orders

semantic_models:
  - name: top_waiters
    description: Some description
    model: ref('top_waiters')
    measures:
      - name: total_waiters
        agg: sum
        expr: waiter
    dimensions:
      - name: waiter
        type: categorical

metrics:
  - name: some_waiter_thing
    description: Something
    type: simple
    label: testing
    type_params:
      measure: total_waiters
